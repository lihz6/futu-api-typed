import * as $protobuf from "protobufjs";
import Long = require("long");
/** Namespace Common. */
export namespace Common {

    /** RetType enum. */
    enum RetType {
        RetType_Succeed = 0,
        RetType_Failed = -1,
        RetType_TimeOut = -100,
        RetType_DisConnect = -200,
        RetType_Unknown = -400,
        RetType_Invalid = -500
    }

    /** PacketEncAlgo enum. */
    enum PacketEncAlgo {
        PacketEncAlgo_FTAES_ECB = 0,
        PacketEncAlgo_None = -1,
        PacketEncAlgo_AES_ECB = 1,
        PacketEncAlgo_AES_CBC = 2
    }

    /** Properties of a PacketID. */
    interface IPacketID {

        /** PacketID connID */
        connID: Long;

        /** PacketID serialNo */
        serialNo: number;
    }

    /** Represents a PacketID. */
    class PacketID implements IPacketID {

        /**
         * Constructs a new PacketID.
         * @param [properties] Properties to set
         */
        constructor(properties?: Common.IPacketID);

        /** PacketID connID. */
        public connID: Long;

        /** PacketID serialNo. */
        public serialNo: number;

        /**
         * Creates a new PacketID instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PacketID instance
         */
        public static create(properties?: Common.IPacketID): Common.PacketID;

        /**
         * Encodes the specified PacketID message. Does not implicitly {@link Common.PacketID.verify|verify} messages.
         * @param message PacketID message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Common.IPacketID, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PacketID message, length delimited. Does not implicitly {@link Common.PacketID.verify|verify} messages.
         * @param message PacketID message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Common.IPacketID, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PacketID message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PacketID
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Common.PacketID;

        /**
         * Decodes a PacketID message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PacketID
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Common.PacketID;

        /**
         * Verifies a PacketID message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PacketID message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PacketID
         */
        public static fromObject(object: { [k: string]: any }): Common.PacketID;

        /**
         * Creates a plain object from a PacketID message. Also converts values to other types if specified.
         * @param message PacketID
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Common.PacketID, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PacketID to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for PacketID
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** ProtoFmt enum. */
    enum ProtoFmt {
        ProtoFmt_Protobuf = 0,
        ProtoFmt_Json = 1
    }

    /** UserAttribution enum. */
    enum UserAttribution {
        UserAttribution_Unknown = 0,
        UserAttribution_NN = 1,
        UserAttribution_MM = 2,
        UserAttribution_SG = 3,
        UserAttribution_AU = 4,
        UserAttribution_JP = 5,
        UserAttribution_HK = 6
    }

    /** ProgramStatusType enum. */
    enum ProgramStatusType {
        ProgramStatusType_None = 0,
        ProgramStatusType_Loaded = 1,
        ProgramStatusType_Loging = 2,
        ProgramStatusType_NeedPicVerifyCode = 3,
        ProgramStatusType_NeedPhoneVerifyCode = 4,
        ProgramStatusType_LoginFailed = 5,
        ProgramStatusType_ForceUpdate = 6,
        ProgramStatusType_NessaryDataPreparing = 7,
        ProgramStatusType_NessaryDataMissing = 8,
        ProgramStatusType_UnAgreeDisclaimer = 9,
        ProgramStatusType_Ready = 10,
        ProgramStatusType_ForceLogout = 11,
        ProgramStatusType_DisclaimerPullFailed = 12
    }

    /** Properties of a ProgramStatus. */
    interface IProgramStatus {

        /** ProgramStatus type */
        type: Common.ProgramStatusType;

        /** ProgramStatus strExtDesc */
        strExtDesc?: (string|null);
    }

    /** Represents a ProgramStatus. */
    class ProgramStatus implements IProgramStatus {

        /**
         * Constructs a new ProgramStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: Common.IProgramStatus);

        /** ProgramStatus type. */
        public type: Common.ProgramStatusType;

        /** ProgramStatus strExtDesc. */
        public strExtDesc: string;

        /**
         * Creates a new ProgramStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ProgramStatus instance
         */
        public static create(properties?: Common.IProgramStatus): Common.ProgramStatus;

        /**
         * Encodes the specified ProgramStatus message. Does not implicitly {@link Common.ProgramStatus.verify|verify} messages.
         * @param message ProgramStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Common.IProgramStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ProgramStatus message, length delimited. Does not implicitly {@link Common.ProgramStatus.verify|verify} messages.
         * @param message ProgramStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Common.IProgramStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ProgramStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ProgramStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Common.ProgramStatus;

        /**
         * Decodes a ProgramStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ProgramStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Common.ProgramStatus;

        /**
         * Verifies a ProgramStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ProgramStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ProgramStatus
         */
        public static fromObject(object: { [k: string]: any }): Common.ProgramStatus;

        /**
         * Creates a plain object from a ProgramStatus message. Also converts values to other types if specified.
         * @param message ProgramStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Common.ProgramStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ProgramStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for ProgramStatus
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace GetDelayStatistics. */
export namespace GetDelayStatistics {

    /** DelayStatisticsType enum. */
    enum DelayStatisticsType {
        DelayStatisticsType_Unkonw = 0,
        DelayStatisticsType_QotPush = 1,
        DelayStatisticsType_ReqReply = 2,
        DelayStatisticsType_PlaceOrder = 3
    }

    /** QotPushStage enum. */
    enum QotPushStage {
        QotPushStage_Unkonw = 0,
        QotPushStage_SR2SS = 1,
        QotPushStage_SS2CR = 2,
        QotPushStage_CR2CS = 3,
        QotPushStage_SS2CS = 4,
        QotPushStage_SR2CS = 5
    }

    /** QotPushType enum. */
    enum QotPushType {
        QotPushType_Unkonw = 0,
        QotPushType_Price = 1,
        QotPushType_Ticker = 2,
        QotPushType_OrderBook = 3,
        QotPushType_Broker = 4
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S typeList */
        typeList?: (number[]|null);

        /** C2S qotPushStage */
        qotPushStage?: (number|null);

        /** C2S segmentList */
        segmentList?: (number[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetDelayStatistics.IC2S);

        /** C2S typeList. */
        public typeList: number[];

        /** C2S qotPushStage. */
        public qotPushStage: number;

        /** C2S segmentList. */
        public segmentList: number[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: GetDelayStatistics.IC2S): GetDelayStatistics.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link GetDelayStatistics.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetDelayStatistics.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link GetDelayStatistics.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetDelayStatistics.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetDelayStatistics.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetDelayStatistics.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): GetDelayStatistics.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetDelayStatistics.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a DelayStatisticsItem. */
    interface IDelayStatisticsItem {

        /** DelayStatisticsItem begin */
        begin: number;

        /** DelayStatisticsItem end */
        end: number;

        /** DelayStatisticsItem count */
        count: number;

        /** DelayStatisticsItem proportion */
        proportion: number;

        /** DelayStatisticsItem cumulativeRatio */
        cumulativeRatio: number;
    }

    /** Represents a DelayStatisticsItem. */
    class DelayStatisticsItem implements IDelayStatisticsItem {

        /**
         * Constructs a new DelayStatisticsItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetDelayStatistics.IDelayStatisticsItem);

        /** DelayStatisticsItem begin. */
        public begin: number;

        /** DelayStatisticsItem end. */
        public end: number;

        /** DelayStatisticsItem count. */
        public count: number;

        /** DelayStatisticsItem proportion. */
        public proportion: number;

        /** DelayStatisticsItem cumulativeRatio. */
        public cumulativeRatio: number;

        /**
         * Creates a new DelayStatisticsItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DelayStatisticsItem instance
         */
        public static create(properties?: GetDelayStatistics.IDelayStatisticsItem): GetDelayStatistics.DelayStatisticsItem;

        /**
         * Encodes the specified DelayStatisticsItem message. Does not implicitly {@link GetDelayStatistics.DelayStatisticsItem.verify|verify} messages.
         * @param message DelayStatisticsItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetDelayStatistics.IDelayStatisticsItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DelayStatisticsItem message, length delimited. Does not implicitly {@link GetDelayStatistics.DelayStatisticsItem.verify|verify} messages.
         * @param message DelayStatisticsItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetDelayStatistics.IDelayStatisticsItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DelayStatisticsItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DelayStatisticsItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetDelayStatistics.DelayStatisticsItem;

        /**
         * Decodes a DelayStatisticsItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DelayStatisticsItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetDelayStatistics.DelayStatisticsItem;

        /**
         * Verifies a DelayStatisticsItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DelayStatisticsItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DelayStatisticsItem
         */
        public static fromObject(object: { [k: string]: any }): GetDelayStatistics.DelayStatisticsItem;

        /**
         * Creates a plain object from a DelayStatisticsItem message. Also converts values to other types if specified.
         * @param message DelayStatisticsItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetDelayStatistics.DelayStatisticsItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DelayStatisticsItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for DelayStatisticsItem
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a DelayStatistics. */
    interface IDelayStatistics {

        /** DelayStatistics qotPushType */
        qotPushType: number;

        /** DelayStatistics itemList */
        itemList?: (GetDelayStatistics.IDelayStatisticsItem[]|null);

        /** DelayStatistics delayAvg */
        delayAvg: number;

        /** DelayStatistics count */
        count: number;
    }

    /** Represents a DelayStatistics. */
    class DelayStatistics implements IDelayStatistics {

        /**
         * Constructs a new DelayStatistics.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetDelayStatistics.IDelayStatistics);

        /** DelayStatistics qotPushType. */
        public qotPushType: number;

        /** DelayStatistics itemList. */
        public itemList: GetDelayStatistics.IDelayStatisticsItem[];

        /** DelayStatistics delayAvg. */
        public delayAvg: number;

        /** DelayStatistics count. */
        public count: number;

        /**
         * Creates a new DelayStatistics instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DelayStatistics instance
         */
        public static create(properties?: GetDelayStatistics.IDelayStatistics): GetDelayStatistics.DelayStatistics;

        /**
         * Encodes the specified DelayStatistics message. Does not implicitly {@link GetDelayStatistics.DelayStatistics.verify|verify} messages.
         * @param message DelayStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetDelayStatistics.IDelayStatistics, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DelayStatistics message, length delimited. Does not implicitly {@link GetDelayStatistics.DelayStatistics.verify|verify} messages.
         * @param message DelayStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetDelayStatistics.IDelayStatistics, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DelayStatistics message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DelayStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetDelayStatistics.DelayStatistics;

        /**
         * Decodes a DelayStatistics message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DelayStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetDelayStatistics.DelayStatistics;

        /**
         * Verifies a DelayStatistics message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DelayStatistics message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DelayStatistics
         */
        public static fromObject(object: { [k: string]: any }): GetDelayStatistics.DelayStatistics;

        /**
         * Creates a plain object from a DelayStatistics message. Also converts values to other types if specified.
         * @param message DelayStatistics
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetDelayStatistics.DelayStatistics, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DelayStatistics to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for DelayStatistics
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a ReqReplyStatisticsItem. */
    interface IReqReplyStatisticsItem {

        /** ReqReplyStatisticsItem protoID */
        protoID: number;

        /** ReqReplyStatisticsItem count */
        count: number;

        /** ReqReplyStatisticsItem totalCostAvg */
        totalCostAvg: number;

        /** ReqReplyStatisticsItem openDCostAvg */
        openDCostAvg: number;

        /** ReqReplyStatisticsItem netDelayAvg */
        netDelayAvg: number;

        /** ReqReplyStatisticsItem isLocalReply */
        isLocalReply: boolean;
    }

    /** Represents a ReqReplyStatisticsItem. */
    class ReqReplyStatisticsItem implements IReqReplyStatisticsItem {

        /**
         * Constructs a new ReqReplyStatisticsItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetDelayStatistics.IReqReplyStatisticsItem);

        /** ReqReplyStatisticsItem protoID. */
        public protoID: number;

        /** ReqReplyStatisticsItem count. */
        public count: number;

        /** ReqReplyStatisticsItem totalCostAvg. */
        public totalCostAvg: number;

        /** ReqReplyStatisticsItem openDCostAvg. */
        public openDCostAvg: number;

        /** ReqReplyStatisticsItem netDelayAvg. */
        public netDelayAvg: number;

        /** ReqReplyStatisticsItem isLocalReply. */
        public isLocalReply: boolean;

        /**
         * Creates a new ReqReplyStatisticsItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReqReplyStatisticsItem instance
         */
        public static create(properties?: GetDelayStatistics.IReqReplyStatisticsItem): GetDelayStatistics.ReqReplyStatisticsItem;

        /**
         * Encodes the specified ReqReplyStatisticsItem message. Does not implicitly {@link GetDelayStatistics.ReqReplyStatisticsItem.verify|verify} messages.
         * @param message ReqReplyStatisticsItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetDelayStatistics.IReqReplyStatisticsItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReqReplyStatisticsItem message, length delimited. Does not implicitly {@link GetDelayStatistics.ReqReplyStatisticsItem.verify|verify} messages.
         * @param message ReqReplyStatisticsItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetDelayStatistics.IReqReplyStatisticsItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReqReplyStatisticsItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReqReplyStatisticsItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetDelayStatistics.ReqReplyStatisticsItem;

        /**
         * Decodes a ReqReplyStatisticsItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReqReplyStatisticsItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetDelayStatistics.ReqReplyStatisticsItem;

        /**
         * Verifies a ReqReplyStatisticsItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReqReplyStatisticsItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReqReplyStatisticsItem
         */
        public static fromObject(object: { [k: string]: any }): GetDelayStatistics.ReqReplyStatisticsItem;

        /**
         * Creates a plain object from a ReqReplyStatisticsItem message. Also converts values to other types if specified.
         * @param message ReqReplyStatisticsItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetDelayStatistics.ReqReplyStatisticsItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReqReplyStatisticsItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for ReqReplyStatisticsItem
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a PlaceOrderStatisticsItem. */
    interface IPlaceOrderStatisticsItem {

        /** PlaceOrderStatisticsItem orderID */
        orderID: string;

        /** PlaceOrderStatisticsItem totalCost */
        totalCost: number;

        /** PlaceOrderStatisticsItem openDCost */
        openDCost: number;

        /** PlaceOrderStatisticsItem netDelay */
        netDelay: number;

        /** PlaceOrderStatisticsItem updateCost */
        updateCost: number;
    }

    /** Represents a PlaceOrderStatisticsItem. */
    class PlaceOrderStatisticsItem implements IPlaceOrderStatisticsItem {

        /**
         * Constructs a new PlaceOrderStatisticsItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetDelayStatistics.IPlaceOrderStatisticsItem);

        /** PlaceOrderStatisticsItem orderID. */
        public orderID: string;

        /** PlaceOrderStatisticsItem totalCost. */
        public totalCost: number;

        /** PlaceOrderStatisticsItem openDCost. */
        public openDCost: number;

        /** PlaceOrderStatisticsItem netDelay. */
        public netDelay: number;

        /** PlaceOrderStatisticsItem updateCost. */
        public updateCost: number;

        /**
         * Creates a new PlaceOrderStatisticsItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlaceOrderStatisticsItem instance
         */
        public static create(properties?: GetDelayStatistics.IPlaceOrderStatisticsItem): GetDelayStatistics.PlaceOrderStatisticsItem;

        /**
         * Encodes the specified PlaceOrderStatisticsItem message. Does not implicitly {@link GetDelayStatistics.PlaceOrderStatisticsItem.verify|verify} messages.
         * @param message PlaceOrderStatisticsItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetDelayStatistics.IPlaceOrderStatisticsItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PlaceOrderStatisticsItem message, length delimited. Does not implicitly {@link GetDelayStatistics.PlaceOrderStatisticsItem.verify|verify} messages.
         * @param message PlaceOrderStatisticsItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetDelayStatistics.IPlaceOrderStatisticsItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PlaceOrderStatisticsItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlaceOrderStatisticsItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetDelayStatistics.PlaceOrderStatisticsItem;

        /**
         * Decodes a PlaceOrderStatisticsItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlaceOrderStatisticsItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetDelayStatistics.PlaceOrderStatisticsItem;

        /**
         * Verifies a PlaceOrderStatisticsItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlaceOrderStatisticsItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlaceOrderStatisticsItem
         */
        public static fromObject(object: { [k: string]: any }): GetDelayStatistics.PlaceOrderStatisticsItem;

        /**
         * Creates a plain object from a PlaceOrderStatisticsItem message. Also converts values to other types if specified.
         * @param message PlaceOrderStatisticsItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetDelayStatistics.PlaceOrderStatisticsItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlaceOrderStatisticsItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for PlaceOrderStatisticsItem
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C qotPushStatisticsList */
        qotPushStatisticsList?: (GetDelayStatistics.IDelayStatistics[]|null);

        /** S2C reqReplyStatisticsList */
        reqReplyStatisticsList?: (GetDelayStatistics.IReqReplyStatisticsItem[]|null);

        /** S2C placeOrderStatisticsList */
        placeOrderStatisticsList?: (GetDelayStatistics.IPlaceOrderStatisticsItem[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetDelayStatistics.IS2C);

        /** S2C qotPushStatisticsList. */
        public qotPushStatisticsList: GetDelayStatistics.IDelayStatistics[];

        /** S2C reqReplyStatisticsList. */
        public reqReplyStatisticsList: GetDelayStatistics.IReqReplyStatisticsItem[];

        /** S2C placeOrderStatisticsList. */
        public placeOrderStatisticsList: GetDelayStatistics.IPlaceOrderStatisticsItem[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: GetDelayStatistics.IS2C): GetDelayStatistics.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link GetDelayStatistics.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetDelayStatistics.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link GetDelayStatistics.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetDelayStatistics.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetDelayStatistics.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetDelayStatistics.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): GetDelayStatistics.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetDelayStatistics.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: GetDelayStatistics.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetDelayStatistics.IRequest);

        /** Request c2s. */
        public c2s: GetDelayStatistics.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: GetDelayStatistics.IRequest): GetDelayStatistics.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link GetDelayStatistics.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetDelayStatistics.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link GetDelayStatistics.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetDelayStatistics.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetDelayStatistics.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetDelayStatistics.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): GetDelayStatistics.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetDelayStatistics.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (GetDelayStatistics.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetDelayStatistics.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (GetDelayStatistics.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: GetDelayStatistics.IResponse): GetDelayStatistics.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link GetDelayStatistics.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetDelayStatistics.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link GetDelayStatistics.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetDelayStatistics.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetDelayStatistics.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetDelayStatistics.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): GetDelayStatistics.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetDelayStatistics.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace GetGlobalState. */
export namespace GetGlobalState {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S userID */
        userID: Long;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetGlobalState.IC2S);

        /** C2S userID. */
        public userID: Long;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: GetGlobalState.IC2S): GetGlobalState.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link GetGlobalState.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetGlobalState.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link GetGlobalState.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetGlobalState.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetGlobalState.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetGlobalState.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): GetGlobalState.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetGlobalState.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C marketHK */
        marketHK: number;

        /** S2C marketUS */
        marketUS: number;

        /** S2C marketSH */
        marketSH: number;

        /** S2C marketSZ */
        marketSZ: number;

        /** S2C marketHKFuture */
        marketHKFuture: number;

        /** S2C marketUSFuture */
        marketUSFuture?: (number|null);

        /** S2C marketSGFuture */
        marketSGFuture?: (number|null);

        /** S2C marketJPFuture */
        marketJPFuture?: (number|null);

        /** S2C qotLogined */
        qotLogined: boolean;

        /** S2C trdLogined */
        trdLogined: boolean;

        /** S2C serverVer */
        serverVer: number;

        /** S2C serverBuildNo */
        serverBuildNo: number;

        /** S2C time */
        time: Long;

        /** S2C localTime */
        localTime?: (number|null);

        /** S2C programStatus */
        programStatus?: (Common.IProgramStatus|null);

        /** S2C qotSvrIpAddr */
        qotSvrIpAddr?: (string|null);

        /** S2C trdSvrIpAddr */
        trdSvrIpAddr?: (string|null);

        /** S2C connID */
        connID?: (Long|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetGlobalState.IS2C);

        /** S2C marketHK. */
        public marketHK: number;

        /** S2C marketUS. */
        public marketUS: number;

        /** S2C marketSH. */
        public marketSH: number;

        /** S2C marketSZ. */
        public marketSZ: number;

        /** S2C marketHKFuture. */
        public marketHKFuture: number;

        /** S2C marketUSFuture. */
        public marketUSFuture: number;

        /** S2C marketSGFuture. */
        public marketSGFuture: number;

        /** S2C marketJPFuture. */
        public marketJPFuture: number;

        /** S2C qotLogined. */
        public qotLogined: boolean;

        /** S2C trdLogined. */
        public trdLogined: boolean;

        /** S2C serverVer. */
        public serverVer: number;

        /** S2C serverBuildNo. */
        public serverBuildNo: number;

        /** S2C time. */
        public time: Long;

        /** S2C localTime. */
        public localTime: number;

        /** S2C programStatus. */
        public programStatus?: (Common.IProgramStatus|null);

        /** S2C qotSvrIpAddr. */
        public qotSvrIpAddr: string;

        /** S2C trdSvrIpAddr. */
        public trdSvrIpAddr: string;

        /** S2C connID. */
        public connID: Long;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: GetGlobalState.IS2C): GetGlobalState.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link GetGlobalState.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetGlobalState.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link GetGlobalState.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetGlobalState.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetGlobalState.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetGlobalState.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): GetGlobalState.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetGlobalState.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: GetGlobalState.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetGlobalState.IRequest);

        /** Request c2s. */
        public c2s: GetGlobalState.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: GetGlobalState.IRequest): GetGlobalState.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link GetGlobalState.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetGlobalState.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link GetGlobalState.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetGlobalState.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetGlobalState.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetGlobalState.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): GetGlobalState.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetGlobalState.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (GetGlobalState.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetGlobalState.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (GetGlobalState.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: GetGlobalState.IResponse): GetGlobalState.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link GetGlobalState.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetGlobalState.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link GetGlobalState.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetGlobalState.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetGlobalState.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetGlobalState.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): GetGlobalState.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetGlobalState.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_Common. */
export namespace Qot_Common {

    /** QotMarket enum. */
    enum QotMarket {
        QotMarket_Unknown = 0,
        QotMarket_HK_Security = 1,
        QotMarket_HK_Future = 2,
        QotMarket_US_Security = 11,
        QotMarket_CNSH_Security = 21,
        QotMarket_CNSZ_Security = 22,
        QotMarket_SG_Security = 31,
        QotMarket_JP_Security = 41
    }

    /** SecurityType enum. */
    enum SecurityType {
        SecurityType_Unknown = 0,
        SecurityType_Bond = 1,
        SecurityType_Bwrt = 2,
        SecurityType_Eqty = 3,
        SecurityType_Trust = 4,
        SecurityType_Warrant = 5,
        SecurityType_Index = 6,
        SecurityType_Plate = 7,
        SecurityType_Drvt = 8,
        SecurityType_PlateSet = 9,
        SecurityType_Future = 10
    }

    /** PlateSetType enum. */
    enum PlateSetType {
        PlateSetType_All = 0,
        PlateSetType_Industry = 1,
        PlateSetType_Region = 2,
        PlateSetType_Concept = 3,
        PlateSetType_Other = 4
    }

    /** WarrantType enum. */
    enum WarrantType {
        WarrantType_Unknown = 0,
        WarrantType_Buy = 1,
        WarrantType_Sell = 2,
        WarrantType_Bull = 3,
        WarrantType_Bear = 4,
        WarrantType_InLine = 5
    }

    /** OptionType enum. */
    enum OptionType {
        OptionType_Unknown = 0,
        OptionType_Call = 1,
        OptionType_Put = 2
    }

    /** IndexOptionType enum. */
    enum IndexOptionType {
        IndexOptionType_Unknown = 0,
        IndexOptionType_Normal = 1,
        IndexOptionType_Small = 2
    }

    /** OptionAreaType enum. */
    enum OptionAreaType {
        OptionAreaType_Unknown = 0,
        OptionAreaType_American = 1,
        OptionAreaType_European = 2,
        OptionAreaType_Bermuda = 3
    }

    /** QotMarketState enum. */
    enum QotMarketState {
        QotMarketState_None = 0,
        QotMarketState_Auction = 1,
        QotMarketState_WaitingOpen = 2,
        QotMarketState_Morning = 3,
        QotMarketState_Rest = 4,
        QotMarketState_Afternoon = 5,
        QotMarketState_Closed = 6,
        QotMarketState_PreMarketBegin = 8,
        QotMarketState_PreMarketEnd = 9,
        QotMarketState_AfterHoursBegin = 10,
        QotMarketState_AfterHoursEnd = 11,
        QotMarketState_NightOpen = 13,
        QotMarketState_NightEnd = 14,
        QotMarketState_FutureDayOpen = 15,
        QotMarketState_FutureDayBreak = 16,
        QotMarketState_FutureDayClose = 17,
        QotMarketState_FutureDayWaitForOpen = 18,
        QotMarketState_HkCas = 19,
        QotMarketState_FutureNightWait = 20,
        QotMarketState_FutureAfternoon = 21,
        QotMarketState_FutureSwitchDate = 22,
        QotMarketState_FutureOpen = 23,
        QotMarketState_FutureBreak = 24,
        QotMarketState_FutureBreakOver = 25,
        QotMarketState_FutureClose = 26,
        QotMarketState_StibAfterHoursWait = 27,
        QotMarketState_StibAfterHoursBegin = 28,
        QotMarketState_StibAfterHoursEnd = 29
    }

    /** TradeDateMarket enum. */
    enum TradeDateMarket {
        TradeDateMarket_Unknown = 0,
        TradeDateMarket_HK = 1,
        TradeDateMarket_US = 2,
        TradeDateMarket_CN = 3,
        TradeDateMarket_NT = 4,
        TradeDateMarket_ST = 5,
        TradeDateMarket_JP_Future = 6,
        TradeDateMarket_SG_Future = 7
    }

    /** TradeDateType enum. */
    enum TradeDateType {
        TradeDateType_Whole = 0,
        TradeDateType_Morning = 1,
        TradeDateType_Afternoon = 2
    }

    /** RehabType enum. */
    enum RehabType {
        RehabType_None = 0,
        RehabType_Forward = 1,
        RehabType_Backward = 2
    }

    /** KLType enum. */
    enum KLType {
        KLType_Unknown = 0,
        KLType_1Min = 1,
        KLType_Day = 2,
        KLType_Week = 3,
        KLType_Month = 4,
        KLType_Year = 5,
        KLType_5Min = 6,
        KLType_15Min = 7,
        KLType_30Min = 8,
        KLType_60Min = 9,
        KLType_3Min = 10,
        KLType_Quarter = 11
    }

    /** KLFields enum. */
    enum KLFields {
        KLFields_None = 0,
        KLFields_High = 1,
        KLFields_Open = 2,
        KLFields_Low = 4,
        KLFields_Close = 8,
        KLFields_LastClose = 16,
        KLFields_Volume = 32,
        KLFields_Turnover = 64,
        KLFields_TurnoverRate = 128,
        KLFields_PE = 256,
        KLFields_ChangeRate = 512
    }

    /** SubType enum. */
    enum SubType {
        SubType_None = 0,
        SubType_Basic = 1,
        SubType_OrderBook = 2,
        SubType_Ticker = 4,
        SubType_RT = 5,
        SubType_KL_Day = 6,
        SubType_KL_5Min = 7,
        SubType_KL_15Min = 8,
        SubType_KL_30Min = 9,
        SubType_KL_60Min = 10,
        SubType_KL_1Min = 11,
        SubType_KL_Week = 12,
        SubType_KL_Month = 13,
        SubType_Broker = 14,
        SubType_KL_Qurater = 15,
        SubType_KL_Year = 16,
        SubType_KL_3Min = 17
    }

    /** TickerDirection enum. */
    enum TickerDirection {
        TickerDirection_Unknown = 0,
        TickerDirection_Bid = 1,
        TickerDirection_Ask = 2,
        TickerDirection_Neutral = 3
    }

    /** TickerType enum. */
    enum TickerType {
        TickerType_Unknown = 0,
        TickerType_Automatch = 1,
        TickerType_Late = 2,
        TickerType_NoneAutomatch = 3,
        TickerType_InterAutomatch = 4,
        TickerType_InterNoneAutomatch = 5,
        TickerType_OddLot = 6,
        TickerType_Auction = 7,
        TickerType_Bulk = 8,
        TickerType_Crash = 9,
        TickerType_CrossMarket = 10,
        TickerType_BulkSold = 11,
        TickerType_FreeOnBoard = 12,
        TickerType_Rule127Or155 = 13,
        TickerType_Delay = 14,
        TickerType_MarketCenterClosePrice = 15,
        TickerType_NextDay = 16,
        TickerType_MarketCenterOpening = 17,
        TickerType_PriorReferencePrice = 18,
        TickerType_MarketCenterOpenPrice = 19,
        TickerType_Seller = 20,
        TickerType_T = 21,
        TickerType_ExtendedTradingHours = 22,
        TickerType_Contingent = 23,
        TickerType_AvgPrice = 24,
        TickerType_OTCSold = 25,
        TickerType_OddLotCrossMarket = 26,
        TickerType_DerivativelyPriced = 27,
        TickerType_ReOpeningPriced = 28,
        TickerType_ClosingPriced = 29,
        TickerType_ComprehensiveDelayPrice = 30,
        TickerType_Overseas = 31
    }

    /** DarkStatus enum. */
    enum DarkStatus {
        DarkStatus_None = 0,
        DarkStatus_Trading = 1,
        DarkStatus_End = 2
    }

    /** SecurityStatus enum. */
    enum SecurityStatus {
        SecurityStatus_Unknown = 0,
        SecurityStatus_Normal = 1,
        SecurityStatus_Listing = 2,
        SecurityStatus_Purchasing = 3,
        SecurityStatus_Subscribing = 4,
        SecurityStatus_BeforeDrakTradeOpening = 5,
        SecurityStatus_DrakTrading = 6,
        SecurityStatus_DrakTradeEnd = 7,
        SecurityStatus_ToBeOpen = 8,
        SecurityStatus_Suspended = 9,
        SecurityStatus_Called = 10,
        SecurityStatus_ExpiredLastTradingDate = 11,
        SecurityStatus_Expired = 12,
        SecurityStatus_Delisted = 13,
        SecurityStatus_ChangeToTemporaryCode = 14,
        SecurityStatus_TemporaryCodeTradeEnd = 15,
        SecurityStatus_ChangedPlateTradeEnd = 16,
        SecurityStatus_ChangedCodeTradeEnd = 17,
        SecurityStatus_RecoverableCircuitBreaker = 18,
        SecurityStatus_UnRecoverableCircuitBreaker = 19,
        SecurityStatus_AfterCombination = 20,
        SecurityStatus_AfterTransation = 21
    }

    /** HolderCategory enum. */
    enum HolderCategory {
        HolderCategory_Unknow = 0,
        HolderCategory_Agency = 1,
        HolderCategory_Fund = 2,
        HolderCategory_SeniorManager = 3
    }

    /** PushDataType enum. */
    enum PushDataType {
        PushDataType_Unknow = 0,
        PushDataType_Realtime = 1,
        PushDataType_ByDisConn = 2,
        PushDataType_Cache = 3
    }

    /** SortField enum. */
    enum SortField {
        SortField_Unknow = 0,
        SortField_Code = 1,
        SortField_CurPrice = 2,
        SortField_PriceChangeVal = 3,
        SortField_ChangeRate = 4,
        SortField_Status = 5,
        SortField_BidPrice = 6,
        SortField_AskPrice = 7,
        SortField_BidVol = 8,
        SortField_AskVol = 9,
        SortField_Volume = 10,
        SortField_Turnover = 11,
        SortField_Amplitude = 30,
        SortField_Score = 12,
        SortField_Premium = 13,
        SortField_EffectiveLeverage = 14,
        SortField_Delta = 15,
        SortField_ImpliedVolatility = 16,
        SortField_Type = 17,
        SortField_StrikePrice = 18,
        SortField_BreakEvenPoint = 19,
        SortField_MaturityTime = 20,
        SortField_ListTime = 21,
        SortField_LastTradeTime = 22,
        SortField_Leverage = 23,
        SortField_InOutMoney = 24,
        SortField_RecoveryPrice = 25,
        SortField_ChangePrice = 26,
        SortField_Change = 27,
        SortField_StreetRate = 28,
        SortField_StreetVol = 29,
        SortField_WarrantName = 31,
        SortField_Issuer = 32,
        SortField_LotSize = 33,
        SortField_IssueSize = 34,
        SortField_UpperStrikePrice = 45,
        SortField_LowerStrikePrice = 46,
        SortField_InLinePriceStatus = 47,
        SortField_PreCurPrice = 35,
        SortField_AfterCurPrice = 36,
        SortField_PrePriceChangeVal = 37,
        SortField_AfterPriceChangeVal = 38,
        SortField_PreChangeRate = 39,
        SortField_AfterChangeRate = 40,
        SortField_PreAmplitude = 41,
        SortField_AfterAmplitude = 42,
        SortField_PreTurnover = 43,
        SortField_AfterTurnover = 44,
        SortField_LastSettlePrice = 48,
        SortField_Position = 49,
        SortField_PositionChange = 50
    }

    /** Issuer enum. */
    enum Issuer {
        Issuer_Unknow = 0,
        Issuer_SG = 1,
        Issuer_BP = 2,
        Issuer_CS = 3,
        Issuer_CT = 4,
        Issuer_EA = 5,
        Issuer_GS = 6,
        Issuer_HS = 7,
        Issuer_JP = 8,
        Issuer_MB = 9,
        Issuer_SC = 10,
        Issuer_UB = 11,
        Issuer_BI = 12,
        Issuer_DB = 13,
        Issuer_DC = 14,
        Issuer_ML = 15,
        Issuer_NM = 16,
        Issuer_RB = 17,
        Issuer_RS = 18,
        Issuer_BC = 19,
        Issuer_HT = 20,
        Issuer_VT = 21,
        Issuer_KC = 22,
        Issuer_MS = 23,
        Issuer_GJ = 24,
        Issuer_XZ = 25
    }

    /** IpoPeriod enum. */
    enum IpoPeriod {
        IpoPeriod_Unknow = 0,
        IpoPeriod_Today = 1,
        IpoPeriod_Tomorrow = 2,
        IpoPeriod_Nextweek = 3,
        IpoPeriod_Lastweek = 4,
        IpoPeriod_Lastmonth = 5
    }

    /** PriceType enum. */
    enum PriceType {
        PriceType_Unknow = 0,
        PriceType_Outside = 1,
        PriceType_WithIn = 2
    }

    /** WarrantStatus enum. */
    enum WarrantStatus {
        WarrantStatus_Unknow = 0,
        WarrantStatus_Normal = 1,
        WarrantStatus_Suspend = 2,
        WarrantStatus_StopTrade = 3,
        WarrantStatus_PendingListing = 4
    }

    /** CompanyAct enum. */
    enum CompanyAct {
        CompanyAct_None = 0,
        CompanyAct_Split = 1,
        CompanyAct_Join = 2,
        CompanyAct_Bonus = 4,
        CompanyAct_Transfer = 8,
        CompanyAct_Allot = 16,
        CompanyAct_Add = 32,
        CompanyAct_Dividend = 64,
        CompanyAct_SPDividend = 128
    }

    /** QotRight enum. */
    enum QotRight {
        QotRight_Unknow = 0,
        QotRight_Bmp = 1,
        QotRight_Level1 = 2,
        QotRight_Level2 = 3,
        QotRight_SF = 4,
        QotRight_No = 5
    }

    /** PriceReminderType enum. */
    enum PriceReminderType {
        PriceReminderType_Unknown = 0,
        PriceReminderType_PriceUp = 1,
        PriceReminderType_PriceDown = 2,
        PriceReminderType_ChangeRateUp = 3,
        PriceReminderType_ChangeRateDown = 4,
        PriceReminderType_5MinChangeRateUp = 5,
        PriceReminderType_5MinChangeRateDown = 6,
        PriceReminderType_VolumeUp = 7,
        PriceReminderType_TurnoverUp = 8,
        PriceReminderType_TurnoverRateUp = 9,
        PriceReminderType_BidPriceUp = 10,
        PriceReminderType_AskPriceDown = 11,
        PriceReminderType_BidVolUp = 12,
        PriceReminderType_AskVolUp = 13,
        PriceReminderType_3MinChangeRateUp = 14,
        PriceReminderType_3MinChangeRateDown = 15
    }

    /** PriceReminderFreq enum. */
    enum PriceReminderFreq {
        PriceReminderFreq_Unknown = 0,
        PriceReminderFreq_Always = 1,
        PriceReminderFreq_OnceADay = 2,
        PriceReminderFreq_OnlyOnce = 3
    }

    /** AssetClass enum. */
    enum AssetClass {
        AssetClass_Unknow = 0,
        AssetClass_Stock = 1,
        AssetClass_Bond = 2,
        AssetClass_Commodity = 3,
        AssetClass_CurrencyMarket = 4,
        AssetClass_Future = 5,
        AssetClass_Swap = 6
    }

    /** ExpirationCycle enum. */
    enum ExpirationCycle {
        ExpirationCycle_Unknown = 0,
        ExpirationCycle_Week = 1,
        ExpirationCycle_Month = 2
    }

    /** ExchType enum. */
    enum ExchType {
        ExchType_Unknown = 0,
        ExchType_HK_MainBoard = 1,
        ExchType_HK_GEMBoard = 2,
        ExchType_HK_HKEX = 3,
        ExchType_US_NYSE = 4,
        ExchType_US_Nasdaq = 5,
        ExchType_US_Pink = 6,
        ExchType_US_AMEX = 7,
        ExchType_US_Option = 8,
        ExchType_US_NYMEX = 9,
        ExchType_US_COMEX = 10,
        ExchType_US_CBOT = 11,
        ExchType_US_CME = 12,
        ExchType_US_CBOE = 13,
        ExchType_CN_SH = 14,
        ExchType_CN_SZ = 15,
        ExchType_CN_STIB = 16,
        ExchType_SG_SGX = 17,
        ExchType_JP_OSE = 18
    }

    /** PeriodType enum. */
    enum PeriodType {
        PeriodType_Unknown = 0,
        PeriodType_INTRADAY = 1,
        PeriodType_DAY = 2,
        PeriodType_WEEK = 3,
        PeriodType_MONTH = 4
    }

    /** Properties of a Security. */
    interface ISecurity {

        /** Security market */
        market: number;

        /** Security code */
        code: string;
    }

    /** Represents a Security. */
    class Security implements ISecurity {

        /**
         * Constructs a new Security.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.ISecurity);

        /** Security market. */
        public market: number;

        /** Security code. */
        public code: string;

        /**
         * Creates a new Security instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Security instance
         */
        public static create(properties?: Qot_Common.ISecurity): Qot_Common.Security;

        /**
         * Encodes the specified Security message. Does not implicitly {@link Qot_Common.Security.verify|verify} messages.
         * @param message Security message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.ISecurity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Security message, length delimited. Does not implicitly {@link Qot_Common.Security.verify|verify} messages.
         * @param message Security message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.ISecurity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Security message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Security
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.Security;

        /**
         * Decodes a Security message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Security
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.Security;

        /**
         * Verifies a Security message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Security message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Security
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.Security;

        /**
         * Creates a plain object from a Security message. Also converts values to other types if specified.
         * @param message Security
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.Security, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Security to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Security
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a KLine. */
    interface IKLine {

        /** KLine time */
        time: string;

        /** KLine isBlank */
        isBlank: boolean;

        /** KLine highPrice */
        highPrice?: (number|null);

        /** KLine openPrice */
        openPrice?: (number|null);

        /** KLine lowPrice */
        lowPrice?: (number|null);

        /** KLine closePrice */
        closePrice?: (number|null);

        /** KLine lastClosePrice */
        lastClosePrice?: (number|null);

        /** KLine volume */
        volume?: (Long|null);

        /** KLine turnover */
        turnover?: (number|null);

        /** KLine turnoverRate */
        turnoverRate?: (number|null);

        /** KLine pe */
        pe?: (number|null);

        /** KLine changeRate */
        changeRate?: (number|null);

        /** KLine timestamp */
        timestamp?: (number|null);
    }

    /** Represents a KLine. */
    class KLine implements IKLine {

        /**
         * Constructs a new KLine.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IKLine);

        /** KLine time. */
        public time: string;

        /** KLine isBlank. */
        public isBlank: boolean;

        /** KLine highPrice. */
        public highPrice: number;

        /** KLine openPrice. */
        public openPrice: number;

        /** KLine lowPrice. */
        public lowPrice: number;

        /** KLine closePrice. */
        public closePrice: number;

        /** KLine lastClosePrice. */
        public lastClosePrice: number;

        /** KLine volume. */
        public volume: Long;

        /** KLine turnover. */
        public turnover: number;

        /** KLine turnoverRate. */
        public turnoverRate: number;

        /** KLine pe. */
        public pe: number;

        /** KLine changeRate. */
        public changeRate: number;

        /** KLine timestamp. */
        public timestamp: number;

        /**
         * Creates a new KLine instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KLine instance
         */
        public static create(properties?: Qot_Common.IKLine): Qot_Common.KLine;

        /**
         * Encodes the specified KLine message. Does not implicitly {@link Qot_Common.KLine.verify|verify} messages.
         * @param message KLine message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IKLine, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KLine message, length delimited. Does not implicitly {@link Qot_Common.KLine.verify|verify} messages.
         * @param message KLine message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IKLine, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KLine message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KLine
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.KLine;

        /**
         * Decodes a KLine message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KLine
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.KLine;

        /**
         * Verifies a KLine message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KLine message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KLine
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.KLine;

        /**
         * Creates a plain object from a KLine message. Also converts values to other types if specified.
         * @param message KLine
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.KLine, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KLine to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for KLine
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an OptionBasicQotExData. */
    interface IOptionBasicQotExData {

        /** OptionBasicQotExData strikePrice */
        strikePrice: number;

        /** OptionBasicQotExData contractSize */
        contractSize: number;

        /** OptionBasicQotExData contractSizeFloat */
        contractSizeFloat?: (number|null);

        /** OptionBasicQotExData openInterest */
        openInterest: number;

        /** OptionBasicQotExData impliedVolatility */
        impliedVolatility: number;

        /** OptionBasicQotExData premium */
        premium: number;

        /** OptionBasicQotExData delta */
        delta: number;

        /** OptionBasicQotExData gamma */
        gamma: number;

        /** OptionBasicQotExData vega */
        vega: number;

        /** OptionBasicQotExData theta */
        theta: number;

        /** OptionBasicQotExData rho */
        rho: number;

        /** OptionBasicQotExData netOpenInterest */
        netOpenInterest?: (number|null);

        /** OptionBasicQotExData expiryDateDistance */
        expiryDateDistance?: (number|null);

        /** OptionBasicQotExData contractNominalValue */
        contractNominalValue?: (number|null);

        /** OptionBasicQotExData ownerLotMultiplier */
        ownerLotMultiplier?: (number|null);

        /** OptionBasicQotExData optionAreaType */
        optionAreaType?: (number|null);

        /** OptionBasicQotExData contractMultiplier */
        contractMultiplier?: (number|null);

        /** OptionBasicQotExData indexOptionType */
        indexOptionType?: (number|null);
    }

    /** Represents an OptionBasicQotExData. */
    class OptionBasicQotExData implements IOptionBasicQotExData {

        /**
         * Constructs a new OptionBasicQotExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IOptionBasicQotExData);

        /** OptionBasicQotExData strikePrice. */
        public strikePrice: number;

        /** OptionBasicQotExData contractSize. */
        public contractSize: number;

        /** OptionBasicQotExData contractSizeFloat. */
        public contractSizeFloat: number;

        /** OptionBasicQotExData openInterest. */
        public openInterest: number;

        /** OptionBasicQotExData impliedVolatility. */
        public impliedVolatility: number;

        /** OptionBasicQotExData premium. */
        public premium: number;

        /** OptionBasicQotExData delta. */
        public delta: number;

        /** OptionBasicQotExData gamma. */
        public gamma: number;

        /** OptionBasicQotExData vega. */
        public vega: number;

        /** OptionBasicQotExData theta. */
        public theta: number;

        /** OptionBasicQotExData rho. */
        public rho: number;

        /** OptionBasicQotExData netOpenInterest. */
        public netOpenInterest: number;

        /** OptionBasicQotExData expiryDateDistance. */
        public expiryDateDistance: number;

        /** OptionBasicQotExData contractNominalValue. */
        public contractNominalValue: number;

        /** OptionBasicQotExData ownerLotMultiplier. */
        public ownerLotMultiplier: number;

        /** OptionBasicQotExData optionAreaType. */
        public optionAreaType: number;

        /** OptionBasicQotExData contractMultiplier. */
        public contractMultiplier: number;

        /** OptionBasicQotExData indexOptionType. */
        public indexOptionType: number;

        /**
         * Creates a new OptionBasicQotExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OptionBasicQotExData instance
         */
        public static create(properties?: Qot_Common.IOptionBasicQotExData): Qot_Common.OptionBasicQotExData;

        /**
         * Encodes the specified OptionBasicQotExData message. Does not implicitly {@link Qot_Common.OptionBasicQotExData.verify|verify} messages.
         * @param message OptionBasicQotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IOptionBasicQotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OptionBasicQotExData message, length delimited. Does not implicitly {@link Qot_Common.OptionBasicQotExData.verify|verify} messages.
         * @param message OptionBasicQotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IOptionBasicQotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OptionBasicQotExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OptionBasicQotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.OptionBasicQotExData;

        /**
         * Decodes an OptionBasicQotExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OptionBasicQotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.OptionBasicQotExData;

        /**
         * Verifies an OptionBasicQotExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OptionBasicQotExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OptionBasicQotExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.OptionBasicQotExData;

        /**
         * Creates a plain object from an OptionBasicQotExData message. Also converts values to other types if specified.
         * @param message OptionBasicQotExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.OptionBasicQotExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OptionBasicQotExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for OptionBasicQotExData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a PreAfterMarketData. */
    interface IPreAfterMarketData {

        /** PreAfterMarketData price */
        price?: (number|null);

        /** PreAfterMarketData highPrice */
        highPrice?: (number|null);

        /** PreAfterMarketData lowPrice */
        lowPrice?: (number|null);

        /** PreAfterMarketData volume */
        volume?: (Long|null);

        /** PreAfterMarketData turnover */
        turnover?: (number|null);

        /** PreAfterMarketData changeVal */
        changeVal?: (number|null);

        /** PreAfterMarketData changeRate */
        changeRate?: (number|null);

        /** PreAfterMarketData amplitude */
        amplitude?: (number|null);
    }

    /** Represents a PreAfterMarketData. */
    class PreAfterMarketData implements IPreAfterMarketData {

        /**
         * Constructs a new PreAfterMarketData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IPreAfterMarketData);

        /** PreAfterMarketData price. */
        public price: number;

        /** PreAfterMarketData highPrice. */
        public highPrice: number;

        /** PreAfterMarketData lowPrice. */
        public lowPrice: number;

        /** PreAfterMarketData volume. */
        public volume: Long;

        /** PreAfterMarketData turnover. */
        public turnover: number;

        /** PreAfterMarketData changeVal. */
        public changeVal: number;

        /** PreAfterMarketData changeRate. */
        public changeRate: number;

        /** PreAfterMarketData amplitude. */
        public amplitude: number;

        /**
         * Creates a new PreAfterMarketData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PreAfterMarketData instance
         */
        public static create(properties?: Qot_Common.IPreAfterMarketData): Qot_Common.PreAfterMarketData;

        /**
         * Encodes the specified PreAfterMarketData message. Does not implicitly {@link Qot_Common.PreAfterMarketData.verify|verify} messages.
         * @param message PreAfterMarketData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IPreAfterMarketData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PreAfterMarketData message, length delimited. Does not implicitly {@link Qot_Common.PreAfterMarketData.verify|verify} messages.
         * @param message PreAfterMarketData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IPreAfterMarketData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PreAfterMarketData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PreAfterMarketData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.PreAfterMarketData;

        /**
         * Decodes a PreAfterMarketData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PreAfterMarketData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.PreAfterMarketData;

        /**
         * Verifies a PreAfterMarketData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PreAfterMarketData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PreAfterMarketData
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.PreAfterMarketData;

        /**
         * Creates a plain object from a PreAfterMarketData message. Also converts values to other types if specified.
         * @param message PreAfterMarketData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.PreAfterMarketData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PreAfterMarketData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for PreAfterMarketData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a FutureBasicQotExData. */
    interface IFutureBasicQotExData {

        /** FutureBasicQotExData lastSettlePrice */
        lastSettlePrice: number;

        /** FutureBasicQotExData position */
        position: number;

        /** FutureBasicQotExData positionChange */
        positionChange: number;

        /** FutureBasicQotExData expiryDateDistance */
        expiryDateDistance?: (number|null);
    }

    /** Represents a FutureBasicQotExData. */
    class FutureBasicQotExData implements IFutureBasicQotExData {

        /**
         * Constructs a new FutureBasicQotExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IFutureBasicQotExData);

        /** FutureBasicQotExData lastSettlePrice. */
        public lastSettlePrice: number;

        /** FutureBasicQotExData position. */
        public position: number;

        /** FutureBasicQotExData positionChange. */
        public positionChange: number;

        /** FutureBasicQotExData expiryDateDistance. */
        public expiryDateDistance: number;

        /**
         * Creates a new FutureBasicQotExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FutureBasicQotExData instance
         */
        public static create(properties?: Qot_Common.IFutureBasicQotExData): Qot_Common.FutureBasicQotExData;

        /**
         * Encodes the specified FutureBasicQotExData message. Does not implicitly {@link Qot_Common.FutureBasicQotExData.verify|verify} messages.
         * @param message FutureBasicQotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IFutureBasicQotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FutureBasicQotExData message, length delimited. Does not implicitly {@link Qot_Common.FutureBasicQotExData.verify|verify} messages.
         * @param message FutureBasicQotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IFutureBasicQotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FutureBasicQotExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FutureBasicQotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.FutureBasicQotExData;

        /**
         * Decodes a FutureBasicQotExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FutureBasicQotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.FutureBasicQotExData;

        /**
         * Verifies a FutureBasicQotExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FutureBasicQotExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FutureBasicQotExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.FutureBasicQotExData;

        /**
         * Creates a plain object from a FutureBasicQotExData message. Also converts values to other types if specified.
         * @param message FutureBasicQotExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.FutureBasicQotExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FutureBasicQotExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for FutureBasicQotExData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a WarrantBasicQotExData. */
    interface IWarrantBasicQotExData {

        /** WarrantBasicQotExData delta */
        delta?: (number|null);

        /** WarrantBasicQotExData impliedVolatility */
        impliedVolatility?: (number|null);

        /** WarrantBasicQotExData premium */
        premium: number;
    }

    /** Represents a WarrantBasicQotExData. */
    class WarrantBasicQotExData implements IWarrantBasicQotExData {

        /**
         * Constructs a new WarrantBasicQotExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IWarrantBasicQotExData);

        /** WarrantBasicQotExData delta. */
        public delta: number;

        /** WarrantBasicQotExData impliedVolatility. */
        public impliedVolatility: number;

        /** WarrantBasicQotExData premium. */
        public premium: number;

        /**
         * Creates a new WarrantBasicQotExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarrantBasicQotExData instance
         */
        public static create(properties?: Qot_Common.IWarrantBasicQotExData): Qot_Common.WarrantBasicQotExData;

        /**
         * Encodes the specified WarrantBasicQotExData message. Does not implicitly {@link Qot_Common.WarrantBasicQotExData.verify|verify} messages.
         * @param message WarrantBasicQotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IWarrantBasicQotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WarrantBasicQotExData message, length delimited. Does not implicitly {@link Qot_Common.WarrantBasicQotExData.verify|verify} messages.
         * @param message WarrantBasicQotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IWarrantBasicQotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WarrantBasicQotExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarrantBasicQotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.WarrantBasicQotExData;

        /**
         * Decodes a WarrantBasicQotExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarrantBasicQotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.WarrantBasicQotExData;

        /**
         * Verifies a WarrantBasicQotExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarrantBasicQotExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarrantBasicQotExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.WarrantBasicQotExData;

        /**
         * Creates a plain object from a WarrantBasicQotExData message. Also converts values to other types if specified.
         * @param message WarrantBasicQotExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.WarrantBasicQotExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarrantBasicQotExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for WarrantBasicQotExData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a BasicQot. */
    interface IBasicQot {

        /** BasicQot security */
        security: Qot_Common.ISecurity;

        /** BasicQot name */
        name?: (string|null);

        /** BasicQot isSuspended */
        isSuspended: boolean;

        /** BasicQot listTime */
        listTime: string;

        /** BasicQot priceSpread */
        priceSpread: number;

        /** BasicQot updateTime */
        updateTime: string;

        /** BasicQot highPrice */
        highPrice: number;

        /** BasicQot openPrice */
        openPrice: number;

        /** BasicQot lowPrice */
        lowPrice: number;

        /** BasicQot curPrice */
        curPrice: number;

        /** BasicQot lastClosePrice */
        lastClosePrice: number;

        /** BasicQot volume */
        volume: Long;

        /** BasicQot turnover */
        turnover: number;

        /** BasicQot turnoverRate */
        turnoverRate: number;

        /** BasicQot amplitude */
        amplitude: number;

        /** BasicQot darkStatus */
        darkStatus?: (number|null);

        /** BasicQot optionExData */
        optionExData?: (Qot_Common.IOptionBasicQotExData|null);

        /** BasicQot listTimestamp */
        listTimestamp?: (number|null);

        /** BasicQot updateTimestamp */
        updateTimestamp?: (number|null);

        /** BasicQot preMarket */
        preMarket?: (Qot_Common.IPreAfterMarketData|null);

        /** BasicQot afterMarket */
        afterMarket?: (Qot_Common.IPreAfterMarketData|null);

        /** BasicQot secStatus */
        secStatus?: (number|null);

        /** BasicQot futureExData */
        futureExData?: (Qot_Common.IFutureBasicQotExData|null);

        /** BasicQot warrantExData */
        warrantExData?: (Qot_Common.IWarrantBasicQotExData|null);
    }

    /** Represents a BasicQot. */
    class BasicQot implements IBasicQot {

        /**
         * Constructs a new BasicQot.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IBasicQot);

        /** BasicQot security. */
        public security: Qot_Common.ISecurity;

        /** BasicQot name. */
        public name: string;

        /** BasicQot isSuspended. */
        public isSuspended: boolean;

        /** BasicQot listTime. */
        public listTime: string;

        /** BasicQot priceSpread. */
        public priceSpread: number;

        /** BasicQot updateTime. */
        public updateTime: string;

        /** BasicQot highPrice. */
        public highPrice: number;

        /** BasicQot openPrice. */
        public openPrice: number;

        /** BasicQot lowPrice. */
        public lowPrice: number;

        /** BasicQot curPrice. */
        public curPrice: number;

        /** BasicQot lastClosePrice. */
        public lastClosePrice: number;

        /** BasicQot volume. */
        public volume: Long;

        /** BasicQot turnover. */
        public turnover: number;

        /** BasicQot turnoverRate. */
        public turnoverRate: number;

        /** BasicQot amplitude. */
        public amplitude: number;

        /** BasicQot darkStatus. */
        public darkStatus: number;

        /** BasicQot optionExData. */
        public optionExData?: (Qot_Common.IOptionBasicQotExData|null);

        /** BasicQot listTimestamp. */
        public listTimestamp: number;

        /** BasicQot updateTimestamp. */
        public updateTimestamp: number;

        /** BasicQot preMarket. */
        public preMarket?: (Qot_Common.IPreAfterMarketData|null);

        /** BasicQot afterMarket. */
        public afterMarket?: (Qot_Common.IPreAfterMarketData|null);

        /** BasicQot secStatus. */
        public secStatus: number;

        /** BasicQot futureExData. */
        public futureExData?: (Qot_Common.IFutureBasicQotExData|null);

        /** BasicQot warrantExData. */
        public warrantExData?: (Qot_Common.IWarrantBasicQotExData|null);

        /**
         * Creates a new BasicQot instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BasicQot instance
         */
        public static create(properties?: Qot_Common.IBasicQot): Qot_Common.BasicQot;

        /**
         * Encodes the specified BasicQot message. Does not implicitly {@link Qot_Common.BasicQot.verify|verify} messages.
         * @param message BasicQot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IBasicQot, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BasicQot message, length delimited. Does not implicitly {@link Qot_Common.BasicQot.verify|verify} messages.
         * @param message BasicQot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IBasicQot, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BasicQot message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BasicQot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.BasicQot;

        /**
         * Decodes a BasicQot message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BasicQot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.BasicQot;

        /**
         * Verifies a BasicQot message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BasicQot message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BasicQot
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.BasicQot;

        /**
         * Creates a plain object from a BasicQot message. Also converts values to other types if specified.
         * @param message BasicQot
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.BasicQot, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BasicQot to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for BasicQot
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a TimeShare. */
    interface ITimeShare {

        /** TimeShare time */
        time: string;

        /** TimeShare minute */
        minute: number;

        /** TimeShare isBlank */
        isBlank: boolean;

        /** TimeShare price */
        price?: (number|null);

        /** TimeShare lastClosePrice */
        lastClosePrice?: (number|null);

        /** TimeShare avgPrice */
        avgPrice?: (number|null);

        /** TimeShare volume */
        volume?: (Long|null);

        /** TimeShare turnover */
        turnover?: (number|null);

        /** TimeShare timestamp */
        timestamp?: (number|null);
    }

    /** Represents a TimeShare. */
    class TimeShare implements ITimeShare {

        /**
         * Constructs a new TimeShare.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.ITimeShare);

        /** TimeShare time. */
        public time: string;

        /** TimeShare minute. */
        public minute: number;

        /** TimeShare isBlank. */
        public isBlank: boolean;

        /** TimeShare price. */
        public price: number;

        /** TimeShare lastClosePrice. */
        public lastClosePrice: number;

        /** TimeShare avgPrice. */
        public avgPrice: number;

        /** TimeShare volume. */
        public volume: Long;

        /** TimeShare turnover. */
        public turnover: number;

        /** TimeShare timestamp. */
        public timestamp: number;

        /**
         * Creates a new TimeShare instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TimeShare instance
         */
        public static create(properties?: Qot_Common.ITimeShare): Qot_Common.TimeShare;

        /**
         * Encodes the specified TimeShare message. Does not implicitly {@link Qot_Common.TimeShare.verify|verify} messages.
         * @param message TimeShare message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.ITimeShare, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TimeShare message, length delimited. Does not implicitly {@link Qot_Common.TimeShare.verify|verify} messages.
         * @param message TimeShare message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.ITimeShare, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TimeShare message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TimeShare
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.TimeShare;

        /**
         * Decodes a TimeShare message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TimeShare
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.TimeShare;

        /**
         * Verifies a TimeShare message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TimeShare message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TimeShare
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.TimeShare;

        /**
         * Creates a plain object from a TimeShare message. Also converts values to other types if specified.
         * @param message TimeShare
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.TimeShare, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TimeShare to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for TimeShare
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a SecurityStaticBasic. */
    interface ISecurityStaticBasic {

        /** SecurityStaticBasic security */
        security: Qot_Common.ISecurity;

        /** SecurityStaticBasic id */
        id: Long;

        /** SecurityStaticBasic lotSize */
        lotSize: number;

        /** SecurityStaticBasic secType */
        secType: number;

        /** SecurityStaticBasic name */
        name: string;

        /** SecurityStaticBasic listTime */
        listTime: string;

        /** SecurityStaticBasic delisting */
        delisting?: (boolean|null);

        /** SecurityStaticBasic listTimestamp */
        listTimestamp?: (number|null);

        /** SecurityStaticBasic exchType */
        exchType?: (number|null);
    }

    /** Represents a SecurityStaticBasic. */
    class SecurityStaticBasic implements ISecurityStaticBasic {

        /**
         * Constructs a new SecurityStaticBasic.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.ISecurityStaticBasic);

        /** SecurityStaticBasic security. */
        public security: Qot_Common.ISecurity;

        /** SecurityStaticBasic id. */
        public id: Long;

        /** SecurityStaticBasic lotSize. */
        public lotSize: number;

        /** SecurityStaticBasic secType. */
        public secType: number;

        /** SecurityStaticBasic name. */
        public name: string;

        /** SecurityStaticBasic listTime. */
        public listTime: string;

        /** SecurityStaticBasic delisting. */
        public delisting: boolean;

        /** SecurityStaticBasic listTimestamp. */
        public listTimestamp: number;

        /** SecurityStaticBasic exchType. */
        public exchType: number;

        /**
         * Creates a new SecurityStaticBasic instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityStaticBasic instance
         */
        public static create(properties?: Qot_Common.ISecurityStaticBasic): Qot_Common.SecurityStaticBasic;

        /**
         * Encodes the specified SecurityStaticBasic message. Does not implicitly {@link Qot_Common.SecurityStaticBasic.verify|verify} messages.
         * @param message SecurityStaticBasic message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.ISecurityStaticBasic, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityStaticBasic message, length delimited. Does not implicitly {@link Qot_Common.SecurityStaticBasic.verify|verify} messages.
         * @param message SecurityStaticBasic message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.ISecurityStaticBasic, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityStaticBasic message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityStaticBasic
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.SecurityStaticBasic;

        /**
         * Decodes a SecurityStaticBasic message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityStaticBasic
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.SecurityStaticBasic;

        /**
         * Verifies a SecurityStaticBasic message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityStaticBasic message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityStaticBasic
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.SecurityStaticBasic;

        /**
         * Creates a plain object from a SecurityStaticBasic message. Also converts values to other types if specified.
         * @param message SecurityStaticBasic
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.SecurityStaticBasic, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityStaticBasic to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for SecurityStaticBasic
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a WarrantStaticExData. */
    interface IWarrantStaticExData {

        /** WarrantStaticExData type */
        type: number;

        /** WarrantStaticExData owner */
        owner: Qot_Common.ISecurity;
    }

    /** Represents a WarrantStaticExData. */
    class WarrantStaticExData implements IWarrantStaticExData {

        /**
         * Constructs a new WarrantStaticExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IWarrantStaticExData);

        /** WarrantStaticExData type. */
        public type: number;

        /** WarrantStaticExData owner. */
        public owner: Qot_Common.ISecurity;

        /**
         * Creates a new WarrantStaticExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarrantStaticExData instance
         */
        public static create(properties?: Qot_Common.IWarrantStaticExData): Qot_Common.WarrantStaticExData;

        /**
         * Encodes the specified WarrantStaticExData message. Does not implicitly {@link Qot_Common.WarrantStaticExData.verify|verify} messages.
         * @param message WarrantStaticExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IWarrantStaticExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WarrantStaticExData message, length delimited. Does not implicitly {@link Qot_Common.WarrantStaticExData.verify|verify} messages.
         * @param message WarrantStaticExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IWarrantStaticExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WarrantStaticExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarrantStaticExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.WarrantStaticExData;

        /**
         * Decodes a WarrantStaticExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarrantStaticExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.WarrantStaticExData;

        /**
         * Verifies a WarrantStaticExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarrantStaticExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarrantStaticExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.WarrantStaticExData;

        /**
         * Creates a plain object from a WarrantStaticExData message. Also converts values to other types if specified.
         * @param message WarrantStaticExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.WarrantStaticExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarrantStaticExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for WarrantStaticExData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an OptionStaticExData. */
    interface IOptionStaticExData {

        /** OptionStaticExData type */
        type: number;

        /** OptionStaticExData owner */
        owner: Qot_Common.ISecurity;

        /** OptionStaticExData strikeTime */
        strikeTime: string;

        /** OptionStaticExData strikePrice */
        strikePrice: number;

        /** OptionStaticExData suspend */
        suspend: boolean;

        /** OptionStaticExData market */
        market: string;

        /** OptionStaticExData strikeTimestamp */
        strikeTimestamp?: (number|null);

        /** OptionStaticExData indexOptionType */
        indexOptionType?: (number|null);
    }

    /** Represents an OptionStaticExData. */
    class OptionStaticExData implements IOptionStaticExData {

        /**
         * Constructs a new OptionStaticExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IOptionStaticExData);

        /** OptionStaticExData type. */
        public type: number;

        /** OptionStaticExData owner. */
        public owner: Qot_Common.ISecurity;

        /** OptionStaticExData strikeTime. */
        public strikeTime: string;

        /** OptionStaticExData strikePrice. */
        public strikePrice: number;

        /** OptionStaticExData suspend. */
        public suspend: boolean;

        /** OptionStaticExData market. */
        public market: string;

        /** OptionStaticExData strikeTimestamp. */
        public strikeTimestamp: number;

        /** OptionStaticExData indexOptionType. */
        public indexOptionType: number;

        /**
         * Creates a new OptionStaticExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OptionStaticExData instance
         */
        public static create(properties?: Qot_Common.IOptionStaticExData): Qot_Common.OptionStaticExData;

        /**
         * Encodes the specified OptionStaticExData message. Does not implicitly {@link Qot_Common.OptionStaticExData.verify|verify} messages.
         * @param message OptionStaticExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IOptionStaticExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OptionStaticExData message, length delimited. Does not implicitly {@link Qot_Common.OptionStaticExData.verify|verify} messages.
         * @param message OptionStaticExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IOptionStaticExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OptionStaticExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OptionStaticExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.OptionStaticExData;

        /**
         * Decodes an OptionStaticExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OptionStaticExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.OptionStaticExData;

        /**
         * Verifies an OptionStaticExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OptionStaticExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OptionStaticExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.OptionStaticExData;

        /**
         * Creates a plain object from an OptionStaticExData message. Also converts values to other types if specified.
         * @param message OptionStaticExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.OptionStaticExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OptionStaticExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for OptionStaticExData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a FutureStaticExData. */
    interface IFutureStaticExData {

        /** FutureStaticExData lastTradeTime */
        lastTradeTime: string;

        /** FutureStaticExData lastTradeTimestamp */
        lastTradeTimestamp?: (number|null);

        /** FutureStaticExData isMainContract */
        isMainContract: boolean;
    }

    /** Represents a FutureStaticExData. */
    class FutureStaticExData implements IFutureStaticExData {

        /**
         * Constructs a new FutureStaticExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IFutureStaticExData);

        /** FutureStaticExData lastTradeTime. */
        public lastTradeTime: string;

        /** FutureStaticExData lastTradeTimestamp. */
        public lastTradeTimestamp: number;

        /** FutureStaticExData isMainContract. */
        public isMainContract: boolean;

        /**
         * Creates a new FutureStaticExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FutureStaticExData instance
         */
        public static create(properties?: Qot_Common.IFutureStaticExData): Qot_Common.FutureStaticExData;

        /**
         * Encodes the specified FutureStaticExData message. Does not implicitly {@link Qot_Common.FutureStaticExData.verify|verify} messages.
         * @param message FutureStaticExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IFutureStaticExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FutureStaticExData message, length delimited. Does not implicitly {@link Qot_Common.FutureStaticExData.verify|verify} messages.
         * @param message FutureStaticExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IFutureStaticExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FutureStaticExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FutureStaticExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.FutureStaticExData;

        /**
         * Decodes a FutureStaticExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FutureStaticExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.FutureStaticExData;

        /**
         * Verifies a FutureStaticExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FutureStaticExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FutureStaticExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.FutureStaticExData;

        /**
         * Creates a plain object from a FutureStaticExData message. Also converts values to other types if specified.
         * @param message FutureStaticExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.FutureStaticExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FutureStaticExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for FutureStaticExData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a SecurityStaticInfo. */
    interface ISecurityStaticInfo {

        /** SecurityStaticInfo basic */
        basic: Qot_Common.ISecurityStaticBasic;

        /** SecurityStaticInfo warrantExData */
        warrantExData?: (Qot_Common.IWarrantStaticExData|null);

        /** SecurityStaticInfo optionExData */
        optionExData?: (Qot_Common.IOptionStaticExData|null);

        /** SecurityStaticInfo futureExData */
        futureExData?: (Qot_Common.IFutureStaticExData|null);
    }

    /** Represents a SecurityStaticInfo. */
    class SecurityStaticInfo implements ISecurityStaticInfo {

        /**
         * Constructs a new SecurityStaticInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.ISecurityStaticInfo);

        /** SecurityStaticInfo basic. */
        public basic: Qot_Common.ISecurityStaticBasic;

        /** SecurityStaticInfo warrantExData. */
        public warrantExData?: (Qot_Common.IWarrantStaticExData|null);

        /** SecurityStaticInfo optionExData. */
        public optionExData?: (Qot_Common.IOptionStaticExData|null);

        /** SecurityStaticInfo futureExData. */
        public futureExData?: (Qot_Common.IFutureStaticExData|null);

        /**
         * Creates a new SecurityStaticInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityStaticInfo instance
         */
        public static create(properties?: Qot_Common.ISecurityStaticInfo): Qot_Common.SecurityStaticInfo;

        /**
         * Encodes the specified SecurityStaticInfo message. Does not implicitly {@link Qot_Common.SecurityStaticInfo.verify|verify} messages.
         * @param message SecurityStaticInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.ISecurityStaticInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityStaticInfo message, length delimited. Does not implicitly {@link Qot_Common.SecurityStaticInfo.verify|verify} messages.
         * @param message SecurityStaticInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.ISecurityStaticInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityStaticInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityStaticInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.SecurityStaticInfo;

        /**
         * Decodes a SecurityStaticInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityStaticInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.SecurityStaticInfo;

        /**
         * Verifies a SecurityStaticInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityStaticInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityStaticInfo
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.SecurityStaticInfo;

        /**
         * Creates a plain object from a SecurityStaticInfo message. Also converts values to other types if specified.
         * @param message SecurityStaticInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.SecurityStaticInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityStaticInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for SecurityStaticInfo
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Broker. */
    interface IBroker {

        /** Broker id */
        id: Long;

        /** Broker name */
        name: string;

        /** Broker pos */
        pos: number;

        /** Broker orderID */
        orderID?: (Long|null);

        /** Broker volume */
        volume?: (Long|null);
    }

    /** Represents a Broker. */
    class Broker implements IBroker {

        /**
         * Constructs a new Broker.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IBroker);

        /** Broker id. */
        public id: Long;

        /** Broker name. */
        public name: string;

        /** Broker pos. */
        public pos: number;

        /** Broker orderID. */
        public orderID: Long;

        /** Broker volume. */
        public volume: Long;

        /**
         * Creates a new Broker instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Broker instance
         */
        public static create(properties?: Qot_Common.IBroker): Qot_Common.Broker;

        /**
         * Encodes the specified Broker message. Does not implicitly {@link Qot_Common.Broker.verify|verify} messages.
         * @param message Broker message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IBroker, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Broker message, length delimited. Does not implicitly {@link Qot_Common.Broker.verify|verify} messages.
         * @param message Broker message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IBroker, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Broker message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Broker
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.Broker;

        /**
         * Decodes a Broker message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Broker
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.Broker;

        /**
         * Verifies a Broker message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Broker message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Broker
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.Broker;

        /**
         * Creates a plain object from a Broker message. Also converts values to other types if specified.
         * @param message Broker
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.Broker, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Broker to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Broker
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Ticker. */
    interface ITicker {

        /** Ticker time */
        time: string;

        /** Ticker sequence */
        sequence: Long;

        /** Ticker dir */
        dir: number;

        /** Ticker price */
        price: number;

        /** Ticker volume */
        volume: Long;

        /** Ticker turnover */
        turnover: number;

        /** Ticker recvTime */
        recvTime?: (number|null);

        /** Ticker type */
        type?: (number|null);

        /** Ticker typeSign */
        typeSign?: (number|null);

        /** Ticker pushDataType */
        pushDataType?: (number|null);

        /** Ticker timestamp */
        timestamp?: (number|null);
    }

    /** Represents a Ticker. */
    class Ticker implements ITicker {

        /**
         * Constructs a new Ticker.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.ITicker);

        /** Ticker time. */
        public time: string;

        /** Ticker sequence. */
        public sequence: Long;

        /** Ticker dir. */
        public dir: number;

        /** Ticker price. */
        public price: number;

        /** Ticker volume. */
        public volume: Long;

        /** Ticker turnover. */
        public turnover: number;

        /** Ticker recvTime. */
        public recvTime: number;

        /** Ticker type. */
        public type: number;

        /** Ticker typeSign. */
        public typeSign: number;

        /** Ticker pushDataType. */
        public pushDataType: number;

        /** Ticker timestamp. */
        public timestamp: number;

        /**
         * Creates a new Ticker instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Ticker instance
         */
        public static create(properties?: Qot_Common.ITicker): Qot_Common.Ticker;

        /**
         * Encodes the specified Ticker message. Does not implicitly {@link Qot_Common.Ticker.verify|verify} messages.
         * @param message Ticker message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.ITicker, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Ticker message, length delimited. Does not implicitly {@link Qot_Common.Ticker.verify|verify} messages.
         * @param message Ticker message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.ITicker, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Ticker message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Ticker
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.Ticker;

        /**
         * Decodes a Ticker message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Ticker
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.Ticker;

        /**
         * Verifies a Ticker message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Ticker message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Ticker
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.Ticker;

        /**
         * Creates a plain object from a Ticker message. Also converts values to other types if specified.
         * @param message Ticker
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.Ticker, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Ticker to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Ticker
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an OrderBookDetail. */
    interface IOrderBookDetail {

        /** OrderBookDetail orderID */
        orderID: Long;

        /** OrderBookDetail volume */
        volume: Long;
    }

    /** Represents an OrderBookDetail. */
    class OrderBookDetail implements IOrderBookDetail {

        /**
         * Constructs a new OrderBookDetail.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IOrderBookDetail);

        /** OrderBookDetail orderID. */
        public orderID: Long;

        /** OrderBookDetail volume. */
        public volume: Long;

        /**
         * Creates a new OrderBookDetail instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrderBookDetail instance
         */
        public static create(properties?: Qot_Common.IOrderBookDetail): Qot_Common.OrderBookDetail;

        /**
         * Encodes the specified OrderBookDetail message. Does not implicitly {@link Qot_Common.OrderBookDetail.verify|verify} messages.
         * @param message OrderBookDetail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IOrderBookDetail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrderBookDetail message, length delimited. Does not implicitly {@link Qot_Common.OrderBookDetail.verify|verify} messages.
         * @param message OrderBookDetail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IOrderBookDetail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrderBookDetail message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrderBookDetail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.OrderBookDetail;

        /**
         * Decodes an OrderBookDetail message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrderBookDetail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.OrderBookDetail;

        /**
         * Verifies an OrderBookDetail message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrderBookDetail message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrderBookDetail
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.OrderBookDetail;

        /**
         * Creates a plain object from an OrderBookDetail message. Also converts values to other types if specified.
         * @param message OrderBookDetail
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.OrderBookDetail, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrderBookDetail to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for OrderBookDetail
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an OrderBook. */
    interface IOrderBook {

        /** OrderBook price */
        price: number;

        /** OrderBook volume */
        volume: Long;

        /** OrderBook orederCount */
        orederCount: number;

        /** OrderBook detailList */
        detailList?: (Qot_Common.IOrderBookDetail[]|null);
    }

    /** Represents an OrderBook. */
    class OrderBook implements IOrderBook {

        /**
         * Constructs a new OrderBook.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IOrderBook);

        /** OrderBook price. */
        public price: number;

        /** OrderBook volume. */
        public volume: Long;

        /** OrderBook orederCount. */
        public orederCount: number;

        /** OrderBook detailList. */
        public detailList: Qot_Common.IOrderBookDetail[];

        /**
         * Creates a new OrderBook instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrderBook instance
         */
        public static create(properties?: Qot_Common.IOrderBook): Qot_Common.OrderBook;

        /**
         * Encodes the specified OrderBook message. Does not implicitly {@link Qot_Common.OrderBook.verify|verify} messages.
         * @param message OrderBook message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IOrderBook, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrderBook message, length delimited. Does not implicitly {@link Qot_Common.OrderBook.verify|verify} messages.
         * @param message OrderBook message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IOrderBook, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrderBook message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrderBook
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.OrderBook;

        /**
         * Decodes an OrderBook message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrderBook
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.OrderBook;

        /**
         * Verifies an OrderBook message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrderBook message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrderBook
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.OrderBook;

        /**
         * Creates a plain object from an OrderBook message. Also converts values to other types if specified.
         * @param message OrderBook
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.OrderBook, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrderBook to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for OrderBook
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a ShareHoldingChange. */
    interface IShareHoldingChange {

        /** ShareHoldingChange holderName */
        holderName: string;

        /** ShareHoldingChange holdingQty */
        holdingQty: number;

        /** ShareHoldingChange holdingRatio */
        holdingRatio: number;

        /** ShareHoldingChange changeQty */
        changeQty: number;

        /** ShareHoldingChange changeRatio */
        changeRatio: number;

        /** ShareHoldingChange time */
        time: string;

        /** ShareHoldingChange timestamp */
        timestamp?: (number|null);
    }

    /** Represents a ShareHoldingChange. */
    class ShareHoldingChange implements IShareHoldingChange {

        /**
         * Constructs a new ShareHoldingChange.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IShareHoldingChange);

        /** ShareHoldingChange holderName. */
        public holderName: string;

        /** ShareHoldingChange holdingQty. */
        public holdingQty: number;

        /** ShareHoldingChange holdingRatio. */
        public holdingRatio: number;

        /** ShareHoldingChange changeQty. */
        public changeQty: number;

        /** ShareHoldingChange changeRatio. */
        public changeRatio: number;

        /** ShareHoldingChange time. */
        public time: string;

        /** ShareHoldingChange timestamp. */
        public timestamp: number;

        /**
         * Creates a new ShareHoldingChange instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShareHoldingChange instance
         */
        public static create(properties?: Qot_Common.IShareHoldingChange): Qot_Common.ShareHoldingChange;

        /**
         * Encodes the specified ShareHoldingChange message. Does not implicitly {@link Qot_Common.ShareHoldingChange.verify|verify} messages.
         * @param message ShareHoldingChange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IShareHoldingChange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShareHoldingChange message, length delimited. Does not implicitly {@link Qot_Common.ShareHoldingChange.verify|verify} messages.
         * @param message ShareHoldingChange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IShareHoldingChange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShareHoldingChange message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShareHoldingChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.ShareHoldingChange;

        /**
         * Decodes a ShareHoldingChange message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShareHoldingChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.ShareHoldingChange;

        /**
         * Verifies a ShareHoldingChange message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShareHoldingChange message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShareHoldingChange
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.ShareHoldingChange;

        /**
         * Creates a plain object from a ShareHoldingChange message. Also converts values to other types if specified.
         * @param message ShareHoldingChange
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.ShareHoldingChange, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShareHoldingChange to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for ShareHoldingChange
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a SubInfo. */
    interface ISubInfo {

        /** SubInfo subType */
        subType: number;

        /** SubInfo securityList */
        securityList?: (Qot_Common.ISecurity[]|null);
    }

    /** Represents a SubInfo. */
    class SubInfo implements ISubInfo {

        /**
         * Constructs a new SubInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.ISubInfo);

        /** SubInfo subType. */
        public subType: number;

        /** SubInfo securityList. */
        public securityList: Qot_Common.ISecurity[];

        /**
         * Creates a new SubInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SubInfo instance
         */
        public static create(properties?: Qot_Common.ISubInfo): Qot_Common.SubInfo;

        /**
         * Encodes the specified SubInfo message. Does not implicitly {@link Qot_Common.SubInfo.verify|verify} messages.
         * @param message SubInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.ISubInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SubInfo message, length delimited. Does not implicitly {@link Qot_Common.SubInfo.verify|verify} messages.
         * @param message SubInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.ISubInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SubInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SubInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.SubInfo;

        /**
         * Decodes a SubInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SubInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.SubInfo;

        /**
         * Verifies a SubInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SubInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SubInfo
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.SubInfo;

        /**
         * Creates a plain object from a SubInfo message. Also converts values to other types if specified.
         * @param message SubInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.SubInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SubInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for SubInfo
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a ConnSubInfo. */
    interface IConnSubInfo {

        /** ConnSubInfo subInfoList */
        subInfoList?: (Qot_Common.ISubInfo[]|null);

        /** ConnSubInfo usedQuota */
        usedQuota: number;

        /** ConnSubInfo isOwnConnData */
        isOwnConnData: boolean;
    }

    /** Represents a ConnSubInfo. */
    class ConnSubInfo implements IConnSubInfo {

        /**
         * Constructs a new ConnSubInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IConnSubInfo);

        /** ConnSubInfo subInfoList. */
        public subInfoList: Qot_Common.ISubInfo[];

        /** ConnSubInfo usedQuota. */
        public usedQuota: number;

        /** ConnSubInfo isOwnConnData. */
        public isOwnConnData: boolean;

        /**
         * Creates a new ConnSubInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConnSubInfo instance
         */
        public static create(properties?: Qot_Common.IConnSubInfo): Qot_Common.ConnSubInfo;

        /**
         * Encodes the specified ConnSubInfo message. Does not implicitly {@link Qot_Common.ConnSubInfo.verify|verify} messages.
         * @param message ConnSubInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IConnSubInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConnSubInfo message, length delimited. Does not implicitly {@link Qot_Common.ConnSubInfo.verify|verify} messages.
         * @param message ConnSubInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IConnSubInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConnSubInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConnSubInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.ConnSubInfo;

        /**
         * Decodes a ConnSubInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConnSubInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.ConnSubInfo;

        /**
         * Verifies a ConnSubInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConnSubInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConnSubInfo
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.ConnSubInfo;

        /**
         * Creates a plain object from a ConnSubInfo message. Also converts values to other types if specified.
         * @param message ConnSubInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.ConnSubInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConnSubInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for ConnSubInfo
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a PlateInfo. */
    interface IPlateInfo {

        /** PlateInfo plate */
        plate: Qot_Common.ISecurity;

        /** PlateInfo name */
        name: string;

        /** PlateInfo plateType */
        plateType?: (number|null);
    }

    /** Represents a PlateInfo. */
    class PlateInfo implements IPlateInfo {

        /**
         * Constructs a new PlateInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IPlateInfo);

        /** PlateInfo plate. */
        public plate: Qot_Common.ISecurity;

        /** PlateInfo name. */
        public name: string;

        /** PlateInfo plateType. */
        public plateType: number;

        /**
         * Creates a new PlateInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlateInfo instance
         */
        public static create(properties?: Qot_Common.IPlateInfo): Qot_Common.PlateInfo;

        /**
         * Encodes the specified PlateInfo message. Does not implicitly {@link Qot_Common.PlateInfo.verify|verify} messages.
         * @param message PlateInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IPlateInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PlateInfo message, length delimited. Does not implicitly {@link Qot_Common.PlateInfo.verify|verify} messages.
         * @param message PlateInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IPlateInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PlateInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlateInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.PlateInfo;

        /**
         * Decodes a PlateInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlateInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.PlateInfo;

        /**
         * Verifies a PlateInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlateInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlateInfo
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.PlateInfo;

        /**
         * Creates a plain object from a PlateInfo message. Also converts values to other types if specified.
         * @param message PlateInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.PlateInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlateInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for PlateInfo
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Rehab. */
    interface IRehab {

        /** Rehab time */
        time: string;

        /** Rehab companyActFlag */
        companyActFlag: Long;

        /** Rehab fwdFactorA */
        fwdFactorA: number;

        /** Rehab fwdFactorB */
        fwdFactorB: number;

        /** Rehab bwdFactorA */
        bwdFactorA: number;

        /** Rehab bwdFactorB */
        bwdFactorB: number;

        /** Rehab splitBase */
        splitBase?: (number|null);

        /** Rehab splitErt */
        splitErt?: (number|null);

        /** Rehab joinBase */
        joinBase?: (number|null);

        /** Rehab joinErt */
        joinErt?: (number|null);

        /** Rehab bonusBase */
        bonusBase?: (number|null);

        /** Rehab bonusErt */
        bonusErt?: (number|null);

        /** Rehab transferBase */
        transferBase?: (number|null);

        /** Rehab transferErt */
        transferErt?: (number|null);

        /** Rehab allotBase */
        allotBase?: (number|null);

        /** Rehab allotErt */
        allotErt?: (number|null);

        /** Rehab allotPrice */
        allotPrice?: (number|null);

        /** Rehab addBase */
        addBase?: (number|null);

        /** Rehab addErt */
        addErt?: (number|null);

        /** Rehab addPrice */
        addPrice?: (number|null);

        /** Rehab dividend */
        dividend?: (number|null);

        /** Rehab spDividend */
        spDividend?: (number|null);

        /** Rehab timestamp */
        timestamp?: (number|null);
    }

    /** Represents a Rehab. */
    class Rehab implements IRehab {

        /**
         * Constructs a new Rehab.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IRehab);

        /** Rehab time. */
        public time: string;

        /** Rehab companyActFlag. */
        public companyActFlag: Long;

        /** Rehab fwdFactorA. */
        public fwdFactorA: number;

        /** Rehab fwdFactorB. */
        public fwdFactorB: number;

        /** Rehab bwdFactorA. */
        public bwdFactorA: number;

        /** Rehab bwdFactorB. */
        public bwdFactorB: number;

        /** Rehab splitBase. */
        public splitBase: number;

        /** Rehab splitErt. */
        public splitErt: number;

        /** Rehab joinBase. */
        public joinBase: number;

        /** Rehab joinErt. */
        public joinErt: number;

        /** Rehab bonusBase. */
        public bonusBase: number;

        /** Rehab bonusErt. */
        public bonusErt: number;

        /** Rehab transferBase. */
        public transferBase: number;

        /** Rehab transferErt. */
        public transferErt: number;

        /** Rehab allotBase. */
        public allotBase: number;

        /** Rehab allotErt. */
        public allotErt: number;

        /** Rehab allotPrice. */
        public allotPrice: number;

        /** Rehab addBase. */
        public addBase: number;

        /** Rehab addErt. */
        public addErt: number;

        /** Rehab addPrice. */
        public addPrice: number;

        /** Rehab dividend. */
        public dividend: number;

        /** Rehab spDividend. */
        public spDividend: number;

        /** Rehab timestamp. */
        public timestamp: number;

        /**
         * Creates a new Rehab instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Rehab instance
         */
        public static create(properties?: Qot_Common.IRehab): Qot_Common.Rehab;

        /**
         * Encodes the specified Rehab message. Does not implicitly {@link Qot_Common.Rehab.verify|verify} messages.
         * @param message Rehab message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IRehab, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Rehab message, length delimited. Does not implicitly {@link Qot_Common.Rehab.verify|verify} messages.
         * @param message Rehab message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IRehab, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Rehab message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Rehab
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.Rehab;

        /**
         * Decodes a Rehab message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Rehab
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.Rehab;

        /**
         * Verifies a Rehab message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Rehab message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Rehab
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.Rehab;

        /**
         * Creates a plain object from a Rehab message. Also converts values to other types if specified.
         * @param message Rehab
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.Rehab, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Rehab to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Rehab
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace GetUserInfo. */
export namespace GetUserInfo {

    /** UpdateType enum. */
    enum UpdateType {
        UpdateType_None = 0,
        UpdateType_Advice = 1,
        UpdateType_Force = 2
    }

    /** UserInfoField enum. */
    enum UserInfoField {
        UserInfoField_Basic = 1,
        UserInfoField_API = 2,
        UserInfoField_QotRight = 4,
        UserInfoField_Disclaimer = 8,
        UserInfoField_Update = 16,
        UserInfoField_WebKey = 2048
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S flag */
        flag?: (number|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetUserInfo.IC2S);

        /** C2S flag. */
        public flag: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: GetUserInfo.IC2S): GetUserInfo.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link GetUserInfo.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetUserInfo.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link GetUserInfo.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetUserInfo.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetUserInfo.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetUserInfo.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): GetUserInfo.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetUserInfo.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C nickName */
        nickName?: (string|null);

        /** S2C avatarUrl */
        avatarUrl?: (string|null);

        /** S2C apiLevel */
        apiLevel?: (string|null);

        /** S2C hkQotRight */
        hkQotRight?: (number|null);

        /** S2C usQotRight */
        usQotRight?: (number|null);

        /** S2C cnQotRight */
        cnQotRight?: (number|null);

        /** S2C isNeedAgreeDisclaimer */
        isNeedAgreeDisclaimer?: (boolean|null);

        /** S2C userID */
        userID?: (Long|null);

        /** S2C updateType */
        updateType?: (number|null);

        /** S2C webKey */
        webKey?: (string|null);

        /** S2C webJumpUrlHead */
        webJumpUrlHead?: (string|null);

        /** S2C hkOptionQotRight */
        hkOptionQotRight?: (number|null);

        /** S2C hasUSOptionQotRight */
        hasUSOptionQotRight?: (boolean|null);

        /** S2C hkFutureQotRight */
        hkFutureQotRight?: (number|null);

        /** S2C subQuota */
        subQuota?: (number|null);

        /** S2C historyKLQuota */
        historyKLQuota?: (number|null);

        /** S2C usFutureQotRight */
        usFutureQotRight?: (number|null);

        /** S2C usOptionQotRight */
        usOptionQotRight?: (number|null);

        /** S2C userAttribution */
        userAttribution?: (number|null);

        /** S2C updateWhatsNew */
        updateWhatsNew?: (string|null);

        /** S2C usIndexQotRight */
        usIndexQotRight?: (number|null);

        /** S2C usOtcQotRight */
        usOtcQotRight?: (number|null);

        /** S2C usCMEFutureQotRight */
        usCMEFutureQotRight?: (number|null);

        /** S2C usCBOTFutureQotRight */
        usCBOTFutureQotRight?: (number|null);

        /** S2C usNYMEXFutureQotRight */
        usNYMEXFutureQotRight?: (number|null);

        /** S2C usCOMEXFutureQotRight */
        usCOMEXFutureQotRight?: (number|null);

        /** S2C usCBOEFutureQotRight */
        usCBOEFutureQotRight?: (number|null);

        /** S2C sgFutureQotRight */
        sgFutureQotRight?: (number|null);

        /** S2C jpFutureQotRight */
        jpFutureQotRight?: (number|null);

        /** S2C isAppNNOrMM */
        isAppNNOrMM?: (boolean|null);

        /** S2C shQotRight */
        shQotRight?: (number|null);

        /** S2C szQotRight */
        szQotRight?: (number|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetUserInfo.IS2C);

        /** S2C nickName. */
        public nickName: string;

        /** S2C avatarUrl. */
        public avatarUrl: string;

        /** S2C apiLevel. */
        public apiLevel: string;

        /** S2C hkQotRight. */
        public hkQotRight: number;

        /** S2C usQotRight. */
        public usQotRight: number;

        /** S2C cnQotRight. */
        public cnQotRight: number;

        /** S2C isNeedAgreeDisclaimer. */
        public isNeedAgreeDisclaimer: boolean;

        /** S2C userID. */
        public userID: Long;

        /** S2C updateType. */
        public updateType: number;

        /** S2C webKey. */
        public webKey: string;

        /** S2C webJumpUrlHead. */
        public webJumpUrlHead: string;

        /** S2C hkOptionQotRight. */
        public hkOptionQotRight: number;

        /** S2C hasUSOptionQotRight. */
        public hasUSOptionQotRight: boolean;

        /** S2C hkFutureQotRight. */
        public hkFutureQotRight: number;

        /** S2C subQuota. */
        public subQuota: number;

        /** S2C historyKLQuota. */
        public historyKLQuota: number;

        /** S2C usFutureQotRight. */
        public usFutureQotRight: number;

        /** S2C usOptionQotRight. */
        public usOptionQotRight: number;

        /** S2C userAttribution. */
        public userAttribution: number;

        /** S2C updateWhatsNew. */
        public updateWhatsNew: string;

        /** S2C usIndexQotRight. */
        public usIndexQotRight: number;

        /** S2C usOtcQotRight. */
        public usOtcQotRight: number;

        /** S2C usCMEFutureQotRight. */
        public usCMEFutureQotRight: number;

        /** S2C usCBOTFutureQotRight. */
        public usCBOTFutureQotRight: number;

        /** S2C usNYMEXFutureQotRight. */
        public usNYMEXFutureQotRight: number;

        /** S2C usCOMEXFutureQotRight. */
        public usCOMEXFutureQotRight: number;

        /** S2C usCBOEFutureQotRight. */
        public usCBOEFutureQotRight: number;

        /** S2C sgFutureQotRight. */
        public sgFutureQotRight: number;

        /** S2C jpFutureQotRight. */
        public jpFutureQotRight: number;

        /** S2C isAppNNOrMM. */
        public isAppNNOrMM: boolean;

        /** S2C shQotRight. */
        public shQotRight: number;

        /** S2C szQotRight. */
        public szQotRight: number;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: GetUserInfo.IS2C): GetUserInfo.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link GetUserInfo.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetUserInfo.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link GetUserInfo.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetUserInfo.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetUserInfo.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetUserInfo.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): GetUserInfo.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetUserInfo.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: GetUserInfo.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetUserInfo.IRequest);

        /** Request c2s. */
        public c2s: GetUserInfo.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: GetUserInfo.IRequest): GetUserInfo.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link GetUserInfo.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetUserInfo.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link GetUserInfo.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetUserInfo.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetUserInfo.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetUserInfo.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): GetUserInfo.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetUserInfo.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (GetUserInfo.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetUserInfo.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (GetUserInfo.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: GetUserInfo.IResponse): GetUserInfo.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link GetUserInfo.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetUserInfo.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link GetUserInfo.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetUserInfo.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetUserInfo.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetUserInfo.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): GetUserInfo.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetUserInfo.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace InitConnect. */
export namespace InitConnect {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S clientVer */
        clientVer: number;

        /** C2S clientID */
        clientID: string;

        /** C2S recvNotify */
        recvNotify?: (boolean|null);

        /** C2S packetEncAlgo */
        packetEncAlgo?: (number|null);

        /** C2S pushProtoFmt */
        pushProtoFmt?: (number|null);

        /** C2S programmingLanguage */
        programmingLanguage?: (string|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: InitConnect.IC2S);

        /** C2S clientVer. */
        public clientVer: number;

        /** C2S clientID. */
        public clientID: string;

        /** C2S recvNotify. */
        public recvNotify: boolean;

        /** C2S packetEncAlgo. */
        public packetEncAlgo: number;

        /** C2S pushProtoFmt. */
        public pushProtoFmt: number;

        /** C2S programmingLanguage. */
        public programmingLanguage: string;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: InitConnect.IC2S): InitConnect.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link InitConnect.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: InitConnect.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link InitConnect.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: InitConnect.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InitConnect.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InitConnect.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): InitConnect.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: InitConnect.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C serverVer */
        serverVer: number;

        /** S2C loginUserID */
        loginUserID: Long;

        /** S2C connID */
        connID: Long;

        /** S2C connAESKey */
        connAESKey: string;

        /** S2C keepAliveInterval */
        keepAliveInterval: number;

        /** S2C aesCBCiv */
        aesCBCiv?: (string|null);

        /** S2C userAttribution */
        userAttribution?: (number|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: InitConnect.IS2C);

        /** S2C serverVer. */
        public serverVer: number;

        /** S2C loginUserID. */
        public loginUserID: Long;

        /** S2C connID. */
        public connID: Long;

        /** S2C connAESKey. */
        public connAESKey: string;

        /** S2C keepAliveInterval. */
        public keepAliveInterval: number;

        /** S2C aesCBCiv. */
        public aesCBCiv: string;

        /** S2C userAttribution. */
        public userAttribution: number;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: InitConnect.IS2C): InitConnect.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link InitConnect.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: InitConnect.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link InitConnect.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: InitConnect.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InitConnect.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InitConnect.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): InitConnect.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: InitConnect.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: InitConnect.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: InitConnect.IRequest);

        /** Request c2s. */
        public c2s: InitConnect.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: InitConnect.IRequest): InitConnect.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link InitConnect.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: InitConnect.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link InitConnect.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: InitConnect.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InitConnect.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InitConnect.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): InitConnect.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: InitConnect.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (InitConnect.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: InitConnect.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (InitConnect.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: InitConnect.IResponse): InitConnect.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link InitConnect.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: InitConnect.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link InitConnect.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: InitConnect.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InitConnect.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InitConnect.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): InitConnect.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: InitConnect.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace InitWebSocket. */
export namespace InitWebSocket {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S IP */
        IP?: (string|null);

        /** C2S Port */
        Port?: (number|null);

        /** C2S RSAPrivateKey */
        RSAPrivateKey?: (string|null);

        /** C2S websocketKey */
        websocketKey?: (string|null);

        /** C2S clientID */
        clientID?: (string|null);

        /** C2S programmingLanguage */
        programmingLanguage?: (string|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: InitWebSocket.IC2S);

        /** C2S IP. */
        public IP: string;

        /** C2S Port. */
        public Port: number;

        /** C2S RSAPrivateKey. */
        public RSAPrivateKey: string;

        /** C2S websocketKey. */
        public websocketKey: string;

        /** C2S clientID. */
        public clientID: string;

        /** C2S programmingLanguage. */
        public programmingLanguage: string;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: InitWebSocket.IC2S): InitWebSocket.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link InitWebSocket.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: InitWebSocket.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link InitWebSocket.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: InitWebSocket.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InitWebSocket.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InitWebSocket.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): InitWebSocket.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: InitWebSocket.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C serverTime */
        serverTime?: (Long|null);

        /** S2C connID */
        connID?: (Long|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: InitWebSocket.IS2C);

        /** S2C serverTime. */
        public serverTime: Long;

        /** S2C connID. */
        public connID: Long;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: InitWebSocket.IS2C): InitWebSocket.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link InitWebSocket.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: InitWebSocket.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link InitWebSocket.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: InitWebSocket.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InitWebSocket.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InitWebSocket.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): InitWebSocket.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: InitWebSocket.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s?: (InitWebSocket.IC2S|null);
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: InitWebSocket.IRequest);

        /** Request c2s. */
        public c2s?: (InitWebSocket.IC2S|null);

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: InitWebSocket.IRequest): InitWebSocket.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link InitWebSocket.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: InitWebSocket.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link InitWebSocket.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: InitWebSocket.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InitWebSocket.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InitWebSocket.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): InitWebSocket.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: InitWebSocket.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (InitWebSocket.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: InitWebSocket.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (InitWebSocket.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: InitWebSocket.IResponse): InitWebSocket.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link InitWebSocket.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: InitWebSocket.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link InitWebSocket.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: InitWebSocket.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InitWebSocket.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InitWebSocket.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): InitWebSocket.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: InitWebSocket.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace KeepAlive. */
export namespace KeepAlive {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S time */
        time: Long;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: KeepAlive.IC2S);

        /** C2S time. */
        public time: Long;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: KeepAlive.IC2S): KeepAlive.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link KeepAlive.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: KeepAlive.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link KeepAlive.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: KeepAlive.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): KeepAlive.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): KeepAlive.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): KeepAlive.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: KeepAlive.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C time */
        time: Long;
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: KeepAlive.IS2C);

        /** S2C time. */
        public time: Long;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: KeepAlive.IS2C): KeepAlive.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link KeepAlive.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: KeepAlive.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link KeepAlive.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: KeepAlive.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): KeepAlive.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): KeepAlive.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): KeepAlive.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: KeepAlive.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: KeepAlive.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: KeepAlive.IRequest);

        /** Request c2s. */
        public c2s: KeepAlive.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: KeepAlive.IRequest): KeepAlive.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link KeepAlive.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: KeepAlive.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link KeepAlive.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: KeepAlive.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): KeepAlive.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): KeepAlive.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): KeepAlive.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: KeepAlive.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (KeepAlive.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: KeepAlive.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (KeepAlive.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: KeepAlive.IResponse): KeepAlive.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link KeepAlive.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: KeepAlive.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link KeepAlive.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: KeepAlive.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): KeepAlive.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): KeepAlive.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): KeepAlive.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: KeepAlive.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Notify. */
export namespace Notify {

    /** NotifyType enum. */
    enum NotifyType {
        NotifyType_None = 0,
        NotifyType_GtwEvent = 1,
        NotifyType_ProgramStatus = 2,
        NotifyType_ConnStatus = 3,
        NotifyType_QotRight = 4,
        NotifyType_APILevel = 5,
        NotifyType_APIQuota = 6,
        NotifyType_UsedQuota = 7
    }

    /** GtwEventType enum. */
    enum GtwEventType {
        GtwEventType_None = 0,
        GtwEventType_LocalCfgLoadFailed = 1,
        GtwEventType_APISvrRunFailed = 2,
        GtwEventType_ForceUpdate = 3,
        GtwEventType_LoginFailed = 4,
        GtwEventType_UnAgreeDisclaimer = 5,
        GtwEventType_NetCfgMissing = 6,
        GtwEventType_KickedOut = 7,
        GtwEventType_LoginPwdChanged = 8,
        GtwEventType_BanLogin = 9,
        GtwEventType_NeedPicVerifyCode = 10,
        GtwEventType_NeedPhoneVerifyCode = 11,
        GtwEventType_AppDataNotExist = 12,
        GtwEventType_NessaryDataMissing = 13,
        GtwEventType_TradePwdChanged = 14,
        GtwEventType_EnableDeviceLock = 15
    }

    /** Properties of a GtwEvent. */
    interface IGtwEvent {

        /** GtwEvent eventType */
        eventType: number;

        /** GtwEvent desc */
        desc: string;
    }

    /** Represents a GtwEvent. */
    class GtwEvent implements IGtwEvent {

        /**
         * Constructs a new GtwEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: Notify.IGtwEvent);

        /** GtwEvent eventType. */
        public eventType: number;

        /** GtwEvent desc. */
        public desc: string;

        /**
         * Creates a new GtwEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GtwEvent instance
         */
        public static create(properties?: Notify.IGtwEvent): Notify.GtwEvent;

        /**
         * Encodes the specified GtwEvent message. Does not implicitly {@link Notify.GtwEvent.verify|verify} messages.
         * @param message GtwEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Notify.IGtwEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GtwEvent message, length delimited. Does not implicitly {@link Notify.GtwEvent.verify|verify} messages.
         * @param message GtwEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Notify.IGtwEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GtwEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GtwEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Notify.GtwEvent;

        /**
         * Decodes a GtwEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GtwEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Notify.GtwEvent;

        /**
         * Verifies a GtwEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GtwEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GtwEvent
         */
        public static fromObject(object: { [k: string]: any }): Notify.GtwEvent;

        /**
         * Creates a plain object from a GtwEvent message. Also converts values to other types if specified.
         * @param message GtwEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Notify.GtwEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GtwEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for GtwEvent
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a ProgramStatus. */
    interface IProgramStatus {

        /** ProgramStatus programStatus */
        programStatus: Common.IProgramStatus;
    }

    /** Represents a ProgramStatus. */
    class ProgramStatus implements IProgramStatus {

        /**
         * Constructs a new ProgramStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: Notify.IProgramStatus);

        /** ProgramStatus programStatus. */
        public programStatus: Common.IProgramStatus;

        /**
         * Creates a new ProgramStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ProgramStatus instance
         */
        public static create(properties?: Notify.IProgramStatus): Notify.ProgramStatus;

        /**
         * Encodes the specified ProgramStatus message. Does not implicitly {@link Notify.ProgramStatus.verify|verify} messages.
         * @param message ProgramStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Notify.IProgramStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ProgramStatus message, length delimited. Does not implicitly {@link Notify.ProgramStatus.verify|verify} messages.
         * @param message ProgramStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Notify.IProgramStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ProgramStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ProgramStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Notify.ProgramStatus;

        /**
         * Decodes a ProgramStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ProgramStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Notify.ProgramStatus;

        /**
         * Verifies a ProgramStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ProgramStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ProgramStatus
         */
        public static fromObject(object: { [k: string]: any }): Notify.ProgramStatus;

        /**
         * Creates a plain object from a ProgramStatus message. Also converts values to other types if specified.
         * @param message ProgramStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Notify.ProgramStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ProgramStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for ProgramStatus
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a ConnectStatus. */
    interface IConnectStatus {

        /** ConnectStatus qotLogined */
        qotLogined: boolean;

        /** ConnectStatus trdLogined */
        trdLogined: boolean;
    }

    /** Represents a ConnectStatus. */
    class ConnectStatus implements IConnectStatus {

        /**
         * Constructs a new ConnectStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: Notify.IConnectStatus);

        /** ConnectStatus qotLogined. */
        public qotLogined: boolean;

        /** ConnectStatus trdLogined. */
        public trdLogined: boolean;

        /**
         * Creates a new ConnectStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConnectStatus instance
         */
        public static create(properties?: Notify.IConnectStatus): Notify.ConnectStatus;

        /**
         * Encodes the specified ConnectStatus message. Does not implicitly {@link Notify.ConnectStatus.verify|verify} messages.
         * @param message ConnectStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Notify.IConnectStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConnectStatus message, length delimited. Does not implicitly {@link Notify.ConnectStatus.verify|verify} messages.
         * @param message ConnectStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Notify.IConnectStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConnectStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConnectStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Notify.ConnectStatus;

        /**
         * Decodes a ConnectStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConnectStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Notify.ConnectStatus;

        /**
         * Verifies a ConnectStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConnectStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConnectStatus
         */
        public static fromObject(object: { [k: string]: any }): Notify.ConnectStatus;

        /**
         * Creates a plain object from a ConnectStatus message. Also converts values to other types if specified.
         * @param message ConnectStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Notify.ConnectStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConnectStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for ConnectStatus
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a QotRight. */
    interface IQotRight {

        /** QotRight hkQotRight */
        hkQotRight: number;

        /** QotRight usQotRight */
        usQotRight: number;

        /** QotRight cnQotRight */
        cnQotRight: number;

        /** QotRight hkOptionQotRight */
        hkOptionQotRight?: (number|null);

        /** QotRight hasUSOptionQotRight */
        hasUSOptionQotRight?: (boolean|null);

        /** QotRight hkFutureQotRight */
        hkFutureQotRight?: (number|null);

        /** QotRight usFutureQotRight */
        usFutureQotRight?: (number|null);

        /** QotRight usOptionQotRight */
        usOptionQotRight?: (number|null);

        /** QotRight usIndexQotRight */
        usIndexQotRight?: (number|null);

        /** QotRight usOtcQotRight */
        usOtcQotRight?: (number|null);

        /** QotRight sgFutureQotRight */
        sgFutureQotRight?: (number|null);

        /** QotRight jpFutureQotRight */
        jpFutureQotRight?: (number|null);

        /** QotRight usCMEFutureQotRight */
        usCMEFutureQotRight?: (number|null);

        /** QotRight usCBOTFutureQotRight */
        usCBOTFutureQotRight?: (number|null);

        /** QotRight usNYMEXFutureQotRight */
        usNYMEXFutureQotRight?: (number|null);

        /** QotRight usCOMEXFutureQotRight */
        usCOMEXFutureQotRight?: (number|null);

        /** QotRight usCBOEFutureQotRight */
        usCBOEFutureQotRight?: (number|null);

        /** QotRight shQotRight */
        shQotRight?: (number|null);

        /** QotRight szQotRight */
        szQotRight?: (number|null);
    }

    /** Represents a QotRight. */
    class QotRight implements IQotRight {

        /**
         * Constructs a new QotRight.
         * @param [properties] Properties to set
         */
        constructor(properties?: Notify.IQotRight);

        /** QotRight hkQotRight. */
        public hkQotRight: number;

        /** QotRight usQotRight. */
        public usQotRight: number;

        /** QotRight cnQotRight. */
        public cnQotRight: number;

        /** QotRight hkOptionQotRight. */
        public hkOptionQotRight: number;

        /** QotRight hasUSOptionQotRight. */
        public hasUSOptionQotRight: boolean;

        /** QotRight hkFutureQotRight. */
        public hkFutureQotRight: number;

        /** QotRight usFutureQotRight. */
        public usFutureQotRight: number;

        /** QotRight usOptionQotRight. */
        public usOptionQotRight: number;

        /** QotRight usIndexQotRight. */
        public usIndexQotRight: number;

        /** QotRight usOtcQotRight. */
        public usOtcQotRight: number;

        /** QotRight sgFutureQotRight. */
        public sgFutureQotRight: number;

        /** QotRight jpFutureQotRight. */
        public jpFutureQotRight: number;

        /** QotRight usCMEFutureQotRight. */
        public usCMEFutureQotRight: number;

        /** QotRight usCBOTFutureQotRight. */
        public usCBOTFutureQotRight: number;

        /** QotRight usNYMEXFutureQotRight. */
        public usNYMEXFutureQotRight: number;

        /** QotRight usCOMEXFutureQotRight. */
        public usCOMEXFutureQotRight: number;

        /** QotRight usCBOEFutureQotRight. */
        public usCBOEFutureQotRight: number;

        /** QotRight shQotRight. */
        public shQotRight: number;

        /** QotRight szQotRight. */
        public szQotRight: number;

        /**
         * Creates a new QotRight instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QotRight instance
         */
        public static create(properties?: Notify.IQotRight): Notify.QotRight;

        /**
         * Encodes the specified QotRight message. Does not implicitly {@link Notify.QotRight.verify|verify} messages.
         * @param message QotRight message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Notify.IQotRight, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QotRight message, length delimited. Does not implicitly {@link Notify.QotRight.verify|verify} messages.
         * @param message QotRight message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Notify.IQotRight, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QotRight message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QotRight
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Notify.QotRight;

        /**
         * Decodes a QotRight message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QotRight
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Notify.QotRight;

        /**
         * Verifies a QotRight message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QotRight message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QotRight
         */
        public static fromObject(object: { [k: string]: any }): Notify.QotRight;

        /**
         * Creates a plain object from a QotRight message. Also converts values to other types if specified.
         * @param message QotRight
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Notify.QotRight, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QotRight to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for QotRight
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a APILevel. */
    interface IAPILevel {

        /** APILevel apiLevel */
        apiLevel: string;
    }

    /** Represents a APILevel. */
    class APILevel implements IAPILevel {

        /**
         * Constructs a new APILevel.
         * @param [properties] Properties to set
         */
        constructor(properties?: Notify.IAPILevel);

        /** APILevel apiLevel. */
        public apiLevel: string;

        /**
         * Creates a new APILevel instance using the specified properties.
         * @param [properties] Properties to set
         * @returns APILevel instance
         */
        public static create(properties?: Notify.IAPILevel): Notify.APILevel;

        /**
         * Encodes the specified APILevel message. Does not implicitly {@link Notify.APILevel.verify|verify} messages.
         * @param message APILevel message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Notify.IAPILevel, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified APILevel message, length delimited. Does not implicitly {@link Notify.APILevel.verify|verify} messages.
         * @param message APILevel message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Notify.IAPILevel, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a APILevel message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns APILevel
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Notify.APILevel;

        /**
         * Decodes a APILevel message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns APILevel
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Notify.APILevel;

        /**
         * Verifies a APILevel message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a APILevel message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns APILevel
         */
        public static fromObject(object: { [k: string]: any }): Notify.APILevel;

        /**
         * Creates a plain object from a APILevel message. Also converts values to other types if specified.
         * @param message APILevel
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Notify.APILevel, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this APILevel to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for APILevel
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a APIQuota. */
    interface IAPIQuota {

        /** APIQuota subQuota */
        subQuota: number;

        /** APIQuota historyKLQuota */
        historyKLQuota: number;
    }

    /** Represents a APIQuota. */
    class APIQuota implements IAPIQuota {

        /**
         * Constructs a new APIQuota.
         * @param [properties] Properties to set
         */
        constructor(properties?: Notify.IAPIQuota);

        /** APIQuota subQuota. */
        public subQuota: number;

        /** APIQuota historyKLQuota. */
        public historyKLQuota: number;

        /**
         * Creates a new APIQuota instance using the specified properties.
         * @param [properties] Properties to set
         * @returns APIQuota instance
         */
        public static create(properties?: Notify.IAPIQuota): Notify.APIQuota;

        /**
         * Encodes the specified APIQuota message. Does not implicitly {@link Notify.APIQuota.verify|verify} messages.
         * @param message APIQuota message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Notify.IAPIQuota, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified APIQuota message, length delimited. Does not implicitly {@link Notify.APIQuota.verify|verify} messages.
         * @param message APIQuota message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Notify.IAPIQuota, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a APIQuota message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns APIQuota
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Notify.APIQuota;

        /**
         * Decodes a APIQuota message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns APIQuota
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Notify.APIQuota;

        /**
         * Verifies a APIQuota message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a APIQuota message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns APIQuota
         */
        public static fromObject(object: { [k: string]: any }): Notify.APIQuota;

        /**
         * Creates a plain object from a APIQuota message. Also converts values to other types if specified.
         * @param message APIQuota
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Notify.APIQuota, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this APIQuota to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for APIQuota
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a UsedQuota. */
    interface IUsedQuota {

        /** UsedQuota usedSubQuota */
        usedSubQuota?: (number|null);

        /** UsedQuota usedKLineQuota */
        usedKLineQuota?: (number|null);
    }

    /** Represents a UsedQuota. */
    class UsedQuota implements IUsedQuota {

        /**
         * Constructs a new UsedQuota.
         * @param [properties] Properties to set
         */
        constructor(properties?: Notify.IUsedQuota);

        /** UsedQuota usedSubQuota. */
        public usedSubQuota: number;

        /** UsedQuota usedKLineQuota. */
        public usedKLineQuota: number;

        /**
         * Creates a new UsedQuota instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UsedQuota instance
         */
        public static create(properties?: Notify.IUsedQuota): Notify.UsedQuota;

        /**
         * Encodes the specified UsedQuota message. Does not implicitly {@link Notify.UsedQuota.verify|verify} messages.
         * @param message UsedQuota message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Notify.IUsedQuota, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UsedQuota message, length delimited. Does not implicitly {@link Notify.UsedQuota.verify|verify} messages.
         * @param message UsedQuota message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Notify.IUsedQuota, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UsedQuota message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UsedQuota
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Notify.UsedQuota;

        /**
         * Decodes a UsedQuota message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UsedQuota
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Notify.UsedQuota;

        /**
         * Verifies a UsedQuota message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UsedQuota message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UsedQuota
         */
        public static fromObject(object: { [k: string]: any }): Notify.UsedQuota;

        /**
         * Creates a plain object from a UsedQuota message. Also converts values to other types if specified.
         * @param message UsedQuota
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Notify.UsedQuota, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UsedQuota to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for UsedQuota
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C type */
        type: number;

        /** S2C event */
        event?: (Notify.IGtwEvent|null);

        /** S2C programStatus */
        programStatus?: (Notify.IProgramStatus|null);

        /** S2C connectStatus */
        connectStatus?: (Notify.IConnectStatus|null);

        /** S2C qotRight */
        qotRight?: (Notify.IQotRight|null);

        /** S2C apiLevel */
        apiLevel?: (Notify.IAPILevel|null);

        /** S2C apiQuota */
        apiQuota?: (Notify.IAPIQuota|null);

        /** S2C usedQuota */
        usedQuota?: (Notify.IUsedQuota|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Notify.IS2C);

        /** S2C type. */
        public type: number;

        /** S2C event. */
        public event?: (Notify.IGtwEvent|null);

        /** S2C programStatus. */
        public programStatus?: (Notify.IProgramStatus|null);

        /** S2C connectStatus. */
        public connectStatus?: (Notify.IConnectStatus|null);

        /** S2C qotRight. */
        public qotRight?: (Notify.IQotRight|null);

        /** S2C apiLevel. */
        public apiLevel?: (Notify.IAPILevel|null);

        /** S2C apiQuota. */
        public apiQuota?: (Notify.IAPIQuota|null);

        /** S2C usedQuota. */
        public usedQuota?: (Notify.IUsedQuota|null);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Notify.IS2C): Notify.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Notify.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Notify.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Notify.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Notify.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Notify.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Notify.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Notify.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Notify.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Notify.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Notify.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Notify.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Notify.IResponse): Notify.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Notify.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Notify.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Notify.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Notify.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Notify.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Notify.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Notify.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Notify.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetBasicQot. */
export namespace Qot_GetBasicQot {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetBasicQot.IC2S);

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetBasicQot.IC2S): Qot_GetBasicQot.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetBasicQot.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetBasicQot.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetBasicQot.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetBasicQot.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetBasicQot.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetBasicQot.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetBasicQot.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetBasicQot.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C basicQotList */
        basicQotList?: (Qot_Common.IBasicQot[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetBasicQot.IS2C);

        /** S2C basicQotList. */
        public basicQotList: Qot_Common.IBasicQot[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetBasicQot.IS2C): Qot_GetBasicQot.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetBasicQot.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetBasicQot.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetBasicQot.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetBasicQot.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetBasicQot.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetBasicQot.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetBasicQot.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetBasicQot.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetBasicQot.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetBasicQot.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetBasicQot.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetBasicQot.IRequest): Qot_GetBasicQot.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetBasicQot.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetBasicQot.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetBasicQot.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetBasicQot.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetBasicQot.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetBasicQot.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetBasicQot.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetBasicQot.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetBasicQot.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetBasicQot.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetBasicQot.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetBasicQot.IResponse): Qot_GetBasicQot.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetBasicQot.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetBasicQot.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetBasicQot.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetBasicQot.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetBasicQot.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetBasicQot.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetBasicQot.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetBasicQot.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetBroker. */
export namespace Qot_GetBroker {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetBroker.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetBroker.IC2S): Qot_GetBroker.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetBroker.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetBroker.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetBroker.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetBroker.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetBroker.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetBroker.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetBroker.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetBroker.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C name */
        name?: (string|null);

        /** S2C brokerAskList */
        brokerAskList?: (Qot_Common.IBroker[]|null);

        /** S2C brokerBidList */
        brokerBidList?: (Qot_Common.IBroker[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetBroker.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C name. */
        public name: string;

        /** S2C brokerAskList. */
        public brokerAskList: Qot_Common.IBroker[];

        /** S2C brokerBidList. */
        public brokerBidList: Qot_Common.IBroker[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetBroker.IS2C): Qot_GetBroker.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetBroker.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetBroker.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetBroker.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetBroker.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetBroker.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetBroker.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetBroker.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetBroker.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetBroker.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetBroker.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetBroker.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetBroker.IRequest): Qot_GetBroker.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetBroker.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetBroker.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetBroker.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetBroker.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetBroker.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetBroker.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetBroker.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetBroker.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetBroker.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetBroker.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetBroker.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetBroker.IResponse): Qot_GetBroker.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetBroker.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetBroker.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetBroker.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetBroker.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetBroker.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetBroker.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetBroker.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetBroker.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetCapitalDistribution. */
export namespace Qot_GetCapitalDistribution {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetCapitalDistribution.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetCapitalDistribution.IC2S): Qot_GetCapitalDistribution.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetCapitalDistribution.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetCapitalDistribution.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetCapitalDistribution.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetCapitalDistribution.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetCapitalDistribution.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetCapitalDistribution.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetCapitalDistribution.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetCapitalDistribution.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C capitalInSuper */
        capitalInSuper?: (number|null);

        /** S2C capitalInBig */
        capitalInBig: number;

        /** S2C capitalInMid */
        capitalInMid: number;

        /** S2C capitalInSmall */
        capitalInSmall: number;

        /** S2C capitalOutSuper */
        capitalOutSuper?: (number|null);

        /** S2C capitalOutBig */
        capitalOutBig: number;

        /** S2C capitalOutMid */
        capitalOutMid: number;

        /** S2C capitalOutSmall */
        capitalOutSmall: number;

        /** S2C updateTime */
        updateTime?: (string|null);

        /** S2C updateTimestamp */
        updateTimestamp?: (number|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetCapitalDistribution.IS2C);

        /** S2C capitalInSuper. */
        public capitalInSuper: number;

        /** S2C capitalInBig. */
        public capitalInBig: number;

        /** S2C capitalInMid. */
        public capitalInMid: number;

        /** S2C capitalInSmall. */
        public capitalInSmall: number;

        /** S2C capitalOutSuper. */
        public capitalOutSuper: number;

        /** S2C capitalOutBig. */
        public capitalOutBig: number;

        /** S2C capitalOutMid. */
        public capitalOutMid: number;

        /** S2C capitalOutSmall. */
        public capitalOutSmall: number;

        /** S2C updateTime. */
        public updateTime: string;

        /** S2C updateTimestamp. */
        public updateTimestamp: number;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetCapitalDistribution.IS2C): Qot_GetCapitalDistribution.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetCapitalDistribution.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetCapitalDistribution.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetCapitalDistribution.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetCapitalDistribution.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetCapitalDistribution.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetCapitalDistribution.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetCapitalDistribution.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetCapitalDistribution.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetCapitalDistribution.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetCapitalDistribution.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetCapitalDistribution.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetCapitalDistribution.IRequest): Qot_GetCapitalDistribution.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetCapitalDistribution.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetCapitalDistribution.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetCapitalDistribution.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetCapitalDistribution.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetCapitalDistribution.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetCapitalDistribution.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetCapitalDistribution.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetCapitalDistribution.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetCapitalDistribution.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetCapitalDistribution.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetCapitalDistribution.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetCapitalDistribution.IResponse): Qot_GetCapitalDistribution.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetCapitalDistribution.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetCapitalDistribution.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetCapitalDistribution.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetCapitalDistribution.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetCapitalDistribution.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetCapitalDistribution.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetCapitalDistribution.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetCapitalDistribution.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetCapitalFlow. */
export namespace Qot_GetCapitalFlow {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;

        /** C2S periodType */
        periodType?: (number|null);

        /** C2S beginTime */
        beginTime?: (string|null);

        /** C2S endTime */
        endTime?: (string|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetCapitalFlow.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /** C2S periodType. */
        public periodType: number;

        /** C2S beginTime. */
        public beginTime: string;

        /** C2S endTime. */
        public endTime: string;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetCapitalFlow.IC2S): Qot_GetCapitalFlow.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetCapitalFlow.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetCapitalFlow.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetCapitalFlow.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetCapitalFlow.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetCapitalFlow.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetCapitalFlow.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetCapitalFlow.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetCapitalFlow.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a CapitalFlowItem. */
    interface ICapitalFlowItem {

        /** CapitalFlowItem inFlow */
        inFlow: number;

        /** CapitalFlowItem time */
        time?: (string|null);

        /** CapitalFlowItem timestamp */
        timestamp?: (number|null);

        /** CapitalFlowItem mainInFlow */
        mainInFlow?: (number|null);

        /** CapitalFlowItem superInFlow */
        superInFlow?: (number|null);

        /** CapitalFlowItem bigInFlow */
        bigInFlow?: (number|null);

        /** CapitalFlowItem midInFlow */
        midInFlow?: (number|null);

        /** CapitalFlowItem smlInFlow */
        smlInFlow?: (number|null);
    }

    /** Represents a CapitalFlowItem. */
    class CapitalFlowItem implements ICapitalFlowItem {

        /**
         * Constructs a new CapitalFlowItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetCapitalFlow.ICapitalFlowItem);

        /** CapitalFlowItem inFlow. */
        public inFlow: number;

        /** CapitalFlowItem time. */
        public time: string;

        /** CapitalFlowItem timestamp. */
        public timestamp: number;

        /** CapitalFlowItem mainInFlow. */
        public mainInFlow: number;

        /** CapitalFlowItem superInFlow. */
        public superInFlow: number;

        /** CapitalFlowItem bigInFlow. */
        public bigInFlow: number;

        /** CapitalFlowItem midInFlow. */
        public midInFlow: number;

        /** CapitalFlowItem smlInFlow. */
        public smlInFlow: number;

        /**
         * Creates a new CapitalFlowItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CapitalFlowItem instance
         */
        public static create(properties?: Qot_GetCapitalFlow.ICapitalFlowItem): Qot_GetCapitalFlow.CapitalFlowItem;

        /**
         * Encodes the specified CapitalFlowItem message. Does not implicitly {@link Qot_GetCapitalFlow.CapitalFlowItem.verify|verify} messages.
         * @param message CapitalFlowItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetCapitalFlow.ICapitalFlowItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CapitalFlowItem message, length delimited. Does not implicitly {@link Qot_GetCapitalFlow.CapitalFlowItem.verify|verify} messages.
         * @param message CapitalFlowItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetCapitalFlow.ICapitalFlowItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CapitalFlowItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CapitalFlowItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetCapitalFlow.CapitalFlowItem;

        /**
         * Decodes a CapitalFlowItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CapitalFlowItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetCapitalFlow.CapitalFlowItem;

        /**
         * Verifies a CapitalFlowItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CapitalFlowItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CapitalFlowItem
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetCapitalFlow.CapitalFlowItem;

        /**
         * Creates a plain object from a CapitalFlowItem message. Also converts values to other types if specified.
         * @param message CapitalFlowItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetCapitalFlow.CapitalFlowItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CapitalFlowItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for CapitalFlowItem
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C flowItemList */
        flowItemList?: (Qot_GetCapitalFlow.ICapitalFlowItem[]|null);

        /** S2C lastValidTime */
        lastValidTime?: (string|null);

        /** S2C lastValidTimestamp */
        lastValidTimestamp?: (number|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetCapitalFlow.IS2C);

        /** S2C flowItemList. */
        public flowItemList: Qot_GetCapitalFlow.ICapitalFlowItem[];

        /** S2C lastValidTime. */
        public lastValidTime: string;

        /** S2C lastValidTimestamp. */
        public lastValidTimestamp: number;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetCapitalFlow.IS2C): Qot_GetCapitalFlow.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetCapitalFlow.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetCapitalFlow.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetCapitalFlow.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetCapitalFlow.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetCapitalFlow.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetCapitalFlow.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetCapitalFlow.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetCapitalFlow.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetCapitalFlow.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetCapitalFlow.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetCapitalFlow.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetCapitalFlow.IRequest): Qot_GetCapitalFlow.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetCapitalFlow.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetCapitalFlow.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetCapitalFlow.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetCapitalFlow.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetCapitalFlow.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetCapitalFlow.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetCapitalFlow.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetCapitalFlow.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetCapitalFlow.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetCapitalFlow.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetCapitalFlow.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetCapitalFlow.IResponse): Qot_GetCapitalFlow.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetCapitalFlow.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetCapitalFlow.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetCapitalFlow.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetCapitalFlow.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetCapitalFlow.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetCapitalFlow.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetCapitalFlow.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetCapitalFlow.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetCodeChange. */
export namespace Qot_GetCodeChange {

    /** CodeChangeType enum. */
    enum CodeChangeType {
        CodeChangeType_Unkown = 0,
        CodeChangeType_GemToMain = 1,
        CodeChangeType_Unpaid = 2,
        CodeChangeType_ChangeLot = 3,
        CodeChangeType_Split = 4,
        CodeChangeType_Joint = 5,
        CodeChangeType_JointSplit = 6,
        CodeChangeType_SplitJoint = 7,
        CodeChangeType_Other = 8
    }

    /** Properties of a CodeChangeInfo. */
    interface ICodeChangeInfo {

        /** CodeChangeInfo type */
        type: number;

        /** CodeChangeInfo security */
        security: Qot_Common.ISecurity;

        /** CodeChangeInfo relatedSecurity */
        relatedSecurity: Qot_Common.ISecurity;

        /** CodeChangeInfo publicTime */
        publicTime?: (string|null);

        /** CodeChangeInfo publicTimestamp */
        publicTimestamp?: (number|null);

        /** CodeChangeInfo effectiveTime */
        effectiveTime?: (string|null);

        /** CodeChangeInfo effectiveTimestamp */
        effectiveTimestamp?: (number|null);

        /** CodeChangeInfo endTime */
        endTime?: (string|null);

        /** CodeChangeInfo endTimestamp */
        endTimestamp?: (number|null);
    }

    /** Represents a CodeChangeInfo. */
    class CodeChangeInfo implements ICodeChangeInfo {

        /**
         * Constructs a new CodeChangeInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetCodeChange.ICodeChangeInfo);

        /** CodeChangeInfo type. */
        public type: number;

        /** CodeChangeInfo security. */
        public security: Qot_Common.ISecurity;

        /** CodeChangeInfo relatedSecurity. */
        public relatedSecurity: Qot_Common.ISecurity;

        /** CodeChangeInfo publicTime. */
        public publicTime: string;

        /** CodeChangeInfo publicTimestamp. */
        public publicTimestamp: number;

        /** CodeChangeInfo effectiveTime. */
        public effectiveTime: string;

        /** CodeChangeInfo effectiveTimestamp. */
        public effectiveTimestamp: number;

        /** CodeChangeInfo endTime. */
        public endTime: string;

        /** CodeChangeInfo endTimestamp. */
        public endTimestamp: number;

        /**
         * Creates a new CodeChangeInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CodeChangeInfo instance
         */
        public static create(properties?: Qot_GetCodeChange.ICodeChangeInfo): Qot_GetCodeChange.CodeChangeInfo;

        /**
         * Encodes the specified CodeChangeInfo message. Does not implicitly {@link Qot_GetCodeChange.CodeChangeInfo.verify|verify} messages.
         * @param message CodeChangeInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetCodeChange.ICodeChangeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CodeChangeInfo message, length delimited. Does not implicitly {@link Qot_GetCodeChange.CodeChangeInfo.verify|verify} messages.
         * @param message CodeChangeInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetCodeChange.ICodeChangeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CodeChangeInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CodeChangeInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetCodeChange.CodeChangeInfo;

        /**
         * Decodes a CodeChangeInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CodeChangeInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetCodeChange.CodeChangeInfo;

        /**
         * Verifies a CodeChangeInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CodeChangeInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CodeChangeInfo
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetCodeChange.CodeChangeInfo;

        /**
         * Creates a plain object from a CodeChangeInfo message. Also converts values to other types if specified.
         * @param message CodeChangeInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetCodeChange.CodeChangeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CodeChangeInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for CodeChangeInfo
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** TimeFilterType enum. */
    enum TimeFilterType {
        TimeFilterType_Unknow = 0,
        TimeFilterType_Public = 1,
        TimeFilterType_Effective = 2,
        TimeFilterType_End = 3
    }

    /** Properties of a TimeFilter. */
    interface ITimeFilter {

        /** TimeFilter type */
        type: number;

        /** TimeFilter beginTime */
        beginTime?: (string|null);

        /** TimeFilter endTime */
        endTime?: (string|null);
    }

    /** Represents a TimeFilter. */
    class TimeFilter implements ITimeFilter {

        /**
         * Constructs a new TimeFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetCodeChange.ITimeFilter);

        /** TimeFilter type. */
        public type: number;

        /** TimeFilter beginTime. */
        public beginTime: string;

        /** TimeFilter endTime. */
        public endTime: string;

        /**
         * Creates a new TimeFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TimeFilter instance
         */
        public static create(properties?: Qot_GetCodeChange.ITimeFilter): Qot_GetCodeChange.TimeFilter;

        /**
         * Encodes the specified TimeFilter message. Does not implicitly {@link Qot_GetCodeChange.TimeFilter.verify|verify} messages.
         * @param message TimeFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetCodeChange.ITimeFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TimeFilter message, length delimited. Does not implicitly {@link Qot_GetCodeChange.TimeFilter.verify|verify} messages.
         * @param message TimeFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetCodeChange.ITimeFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TimeFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TimeFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetCodeChange.TimeFilter;

        /**
         * Decodes a TimeFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TimeFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetCodeChange.TimeFilter;

        /**
         * Verifies a TimeFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TimeFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TimeFilter
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetCodeChange.TimeFilter;

        /**
         * Creates a plain object from a TimeFilter message. Also converts values to other types if specified.
         * @param message TimeFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetCodeChange.TimeFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TimeFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for TimeFilter
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S placeHolder */
        placeHolder?: (number|null);

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);

        /** C2S timeFilterList */
        timeFilterList?: (Qot_GetCodeChange.ITimeFilter[]|null);

        /** C2S typeList */
        typeList?: (number[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetCodeChange.IC2S);

        /** C2S placeHolder. */
        public placeHolder: number;

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /** C2S timeFilterList. */
        public timeFilterList: Qot_GetCodeChange.ITimeFilter[];

        /** C2S typeList. */
        public typeList: number[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetCodeChange.IC2S): Qot_GetCodeChange.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetCodeChange.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetCodeChange.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetCodeChange.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetCodeChange.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetCodeChange.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetCodeChange.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetCodeChange.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetCodeChange.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C codeChangeList */
        codeChangeList?: (Qot_GetCodeChange.ICodeChangeInfo[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetCodeChange.IS2C);

        /** S2C codeChangeList. */
        public codeChangeList: Qot_GetCodeChange.ICodeChangeInfo[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetCodeChange.IS2C): Qot_GetCodeChange.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetCodeChange.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetCodeChange.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetCodeChange.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetCodeChange.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetCodeChange.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetCodeChange.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetCodeChange.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetCodeChange.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetCodeChange.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetCodeChange.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetCodeChange.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetCodeChange.IRequest): Qot_GetCodeChange.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetCodeChange.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetCodeChange.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetCodeChange.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetCodeChange.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetCodeChange.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetCodeChange.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetCodeChange.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetCodeChange.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetCodeChange.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetCodeChange.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetCodeChange.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetCodeChange.IResponse): Qot_GetCodeChange.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetCodeChange.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetCodeChange.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetCodeChange.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetCodeChange.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetCodeChange.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetCodeChange.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetCodeChange.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetCodeChange.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetFutureInfo. */
export namespace Qot_GetFutureInfo {

    /** Properties of a TradeTime. */
    interface ITradeTime {

        /** TradeTime begin */
        begin?: (number|null);

        /** TradeTime end */
        end?: (number|null);
    }

    /** Represents a TradeTime. */
    class TradeTime implements ITradeTime {

        /**
         * Constructs a new TradeTime.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetFutureInfo.ITradeTime);

        /** TradeTime begin. */
        public begin: number;

        /** TradeTime end. */
        public end: number;

        /**
         * Creates a new TradeTime instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TradeTime instance
         */
        public static create(properties?: Qot_GetFutureInfo.ITradeTime): Qot_GetFutureInfo.TradeTime;

        /**
         * Encodes the specified TradeTime message. Does not implicitly {@link Qot_GetFutureInfo.TradeTime.verify|verify} messages.
         * @param message TradeTime message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetFutureInfo.ITradeTime, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TradeTime message, length delimited. Does not implicitly {@link Qot_GetFutureInfo.TradeTime.verify|verify} messages.
         * @param message TradeTime message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetFutureInfo.ITradeTime, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TradeTime message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TradeTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetFutureInfo.TradeTime;

        /**
         * Decodes a TradeTime message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TradeTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetFutureInfo.TradeTime;

        /**
         * Verifies a TradeTime message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TradeTime message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TradeTime
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetFutureInfo.TradeTime;

        /**
         * Creates a plain object from a TradeTime message. Also converts values to other types if specified.
         * @param message TradeTime
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetFutureInfo.TradeTime, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TradeTime to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for TradeTime
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a FutureInfo. */
    interface IFutureInfo {

        /** FutureInfo name */
        name: string;

        /** FutureInfo security */
        security: Qot_Common.ISecurity;

        /** FutureInfo lastTradeTime */
        lastTradeTime: string;

        /** FutureInfo lastTradeTimestamp */
        lastTradeTimestamp?: (number|null);

        /** FutureInfo owner */
        owner?: (Qot_Common.ISecurity|null);

        /** FutureInfo ownerOther */
        ownerOther: string;

        /** FutureInfo exchange */
        exchange: string;

        /** FutureInfo contractType */
        contractType: string;

        /** FutureInfo contractSize */
        contractSize: number;

        /** FutureInfo contractSizeUnit */
        contractSizeUnit: string;

        /** FutureInfo quoteCurrency */
        quoteCurrency: string;

        /** FutureInfo minVar */
        minVar: number;

        /** FutureInfo minVarUnit */
        minVarUnit: string;

        /** FutureInfo quoteUnit */
        quoteUnit?: (string|null);

        /** FutureInfo tradeTime */
        tradeTime?: (Qot_GetFutureInfo.ITradeTime[]|null);

        /** FutureInfo timeZone */
        timeZone: string;

        /** FutureInfo exchangeFormatUrl */
        exchangeFormatUrl: string;

        /** FutureInfo origin */
        origin?: (Qot_Common.ISecurity|null);
    }

    /** Represents a FutureInfo. */
    class FutureInfo implements IFutureInfo {

        /**
         * Constructs a new FutureInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetFutureInfo.IFutureInfo);

        /** FutureInfo name. */
        public name: string;

        /** FutureInfo security. */
        public security: Qot_Common.ISecurity;

        /** FutureInfo lastTradeTime. */
        public lastTradeTime: string;

        /** FutureInfo lastTradeTimestamp. */
        public lastTradeTimestamp: number;

        /** FutureInfo owner. */
        public owner?: (Qot_Common.ISecurity|null);

        /** FutureInfo ownerOther. */
        public ownerOther: string;

        /** FutureInfo exchange. */
        public exchange: string;

        /** FutureInfo contractType. */
        public contractType: string;

        /** FutureInfo contractSize. */
        public contractSize: number;

        /** FutureInfo contractSizeUnit. */
        public contractSizeUnit: string;

        /** FutureInfo quoteCurrency. */
        public quoteCurrency: string;

        /** FutureInfo minVar. */
        public minVar: number;

        /** FutureInfo minVarUnit. */
        public minVarUnit: string;

        /** FutureInfo quoteUnit. */
        public quoteUnit: string;

        /** FutureInfo tradeTime. */
        public tradeTime: Qot_GetFutureInfo.ITradeTime[];

        /** FutureInfo timeZone. */
        public timeZone: string;

        /** FutureInfo exchangeFormatUrl. */
        public exchangeFormatUrl: string;

        /** FutureInfo origin. */
        public origin?: (Qot_Common.ISecurity|null);

        /**
         * Creates a new FutureInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FutureInfo instance
         */
        public static create(properties?: Qot_GetFutureInfo.IFutureInfo): Qot_GetFutureInfo.FutureInfo;

        /**
         * Encodes the specified FutureInfo message. Does not implicitly {@link Qot_GetFutureInfo.FutureInfo.verify|verify} messages.
         * @param message FutureInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetFutureInfo.IFutureInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FutureInfo message, length delimited. Does not implicitly {@link Qot_GetFutureInfo.FutureInfo.verify|verify} messages.
         * @param message FutureInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetFutureInfo.IFutureInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FutureInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FutureInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetFutureInfo.FutureInfo;

        /**
         * Decodes a FutureInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FutureInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetFutureInfo.FutureInfo;

        /**
         * Verifies a FutureInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FutureInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FutureInfo
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetFutureInfo.FutureInfo;

        /**
         * Creates a plain object from a FutureInfo message. Also converts values to other types if specified.
         * @param message FutureInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetFutureInfo.FutureInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FutureInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for FutureInfo
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetFutureInfo.IC2S);

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetFutureInfo.IC2S): Qot_GetFutureInfo.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetFutureInfo.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetFutureInfo.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetFutureInfo.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetFutureInfo.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetFutureInfo.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetFutureInfo.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetFutureInfo.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetFutureInfo.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C futureInfoList */
        futureInfoList?: (Qot_GetFutureInfo.IFutureInfo[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetFutureInfo.IS2C);

        /** S2C futureInfoList. */
        public futureInfoList: Qot_GetFutureInfo.IFutureInfo[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetFutureInfo.IS2C): Qot_GetFutureInfo.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetFutureInfo.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetFutureInfo.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetFutureInfo.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetFutureInfo.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetFutureInfo.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetFutureInfo.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetFutureInfo.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetFutureInfo.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetFutureInfo.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetFutureInfo.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetFutureInfo.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetFutureInfo.IRequest): Qot_GetFutureInfo.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetFutureInfo.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetFutureInfo.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetFutureInfo.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetFutureInfo.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetFutureInfo.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetFutureInfo.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetFutureInfo.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetFutureInfo.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetFutureInfo.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetFutureInfo.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetFutureInfo.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetFutureInfo.IResponse): Qot_GetFutureInfo.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetFutureInfo.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetFutureInfo.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetFutureInfo.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetFutureInfo.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetFutureInfo.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetFutureInfo.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetFutureInfo.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetFutureInfo.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetHistoryKL. */
export namespace Qot_GetHistoryKL {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S rehabType */
        rehabType: number;

        /** C2S klType */
        klType: number;

        /** C2S security */
        security: Qot_Common.ISecurity;

        /** C2S beginTime */
        beginTime: string;

        /** C2S endTime */
        endTime: string;

        /** C2S maxAckKLNum */
        maxAckKLNum?: (number|null);

        /** C2S needKLFieldsFlag */
        needKLFieldsFlag?: (Long|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKL.IC2S);

        /** C2S rehabType. */
        public rehabType: number;

        /** C2S klType. */
        public klType: number;

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /** C2S beginTime. */
        public beginTime: string;

        /** C2S endTime. */
        public endTime: string;

        /** C2S maxAckKLNum. */
        public maxAckKLNum: number;

        /** C2S needKLFieldsFlag. */
        public needKLFieldsFlag: Long;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetHistoryKL.IC2S): Qot_GetHistoryKL.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetHistoryKL.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKL.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetHistoryKL.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKL.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKL.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKL.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKL.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKL.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C klList */
        klList?: (Qot_Common.IKLine[]|null);

        /** S2C nextKLTime */
        nextKLTime?: (string|null);

        /** S2C nextKLTimestamp */
        nextKLTimestamp?: (number|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKL.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C klList. */
        public klList: Qot_Common.IKLine[];

        /** S2C nextKLTime. */
        public nextKLTime: string;

        /** S2C nextKLTimestamp. */
        public nextKLTimestamp: number;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetHistoryKL.IS2C): Qot_GetHistoryKL.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetHistoryKL.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKL.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetHistoryKL.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKL.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKL.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKL.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKL.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKL.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetHistoryKL.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKL.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetHistoryKL.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetHistoryKL.IRequest): Qot_GetHistoryKL.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetHistoryKL.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKL.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetHistoryKL.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKL.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKL.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKL.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKL.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKL.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetHistoryKL.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKL.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetHistoryKL.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetHistoryKL.IResponse): Qot_GetHistoryKL.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetHistoryKL.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKL.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetHistoryKL.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKL.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKL.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKL.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKL.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKL.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetHistoryKLPoints. */
export namespace Qot_GetHistoryKLPoints {

    /** NoDataMode enum. */
    enum NoDataMode {
        NoDataMode_Null = 0,
        NoDataMode_Forward = 1,
        NoDataMode_Backward = 2
    }

    /** DataStatus enum. */
    enum DataStatus {
        DataStatus_Null = 0,
        DataStatus_Current = 1,
        DataStatus_Previous = 2,
        DataStatus_Back = 3
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S rehabType */
        rehabType: number;

        /** C2S klType */
        klType: number;

        /** C2S noDataMode */
        noDataMode: number;

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);

        /** C2S timeList */
        timeList?: (string[]|null);

        /** C2S maxReqSecurityNum */
        maxReqSecurityNum?: (number|null);

        /** C2S needKLFieldsFlag */
        needKLFieldsFlag?: (Long|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKLPoints.IC2S);

        /** C2S rehabType. */
        public rehabType: number;

        /** C2S klType. */
        public klType: number;

        /** C2S noDataMode. */
        public noDataMode: number;

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /** C2S timeList. */
        public timeList: string[];

        /** C2S maxReqSecurityNum. */
        public maxReqSecurityNum: number;

        /** C2S needKLFieldsFlag. */
        public needKLFieldsFlag: Long;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetHistoryKLPoints.IC2S): Qot_GetHistoryKLPoints.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetHistoryKLPoints.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKLPoints.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetHistoryKLPoints.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKLPoints.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKLPoints.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKLPoints.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKLPoints.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKLPoints.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a HistoryPointsKL. */
    interface IHistoryPointsKL {

        /** HistoryPointsKL status */
        status: number;

        /** HistoryPointsKL reqTime */
        reqTime: string;

        /** HistoryPointsKL kl */
        kl: Qot_Common.IKLine;
    }

    /** Represents a HistoryPointsKL. */
    class HistoryPointsKL implements IHistoryPointsKL {

        /**
         * Constructs a new HistoryPointsKL.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKLPoints.IHistoryPointsKL);

        /** HistoryPointsKL status. */
        public status: number;

        /** HistoryPointsKL reqTime. */
        public reqTime: string;

        /** HistoryPointsKL kl. */
        public kl: Qot_Common.IKLine;

        /**
         * Creates a new HistoryPointsKL instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HistoryPointsKL instance
         */
        public static create(properties?: Qot_GetHistoryKLPoints.IHistoryPointsKL): Qot_GetHistoryKLPoints.HistoryPointsKL;

        /**
         * Encodes the specified HistoryPointsKL message. Does not implicitly {@link Qot_GetHistoryKLPoints.HistoryPointsKL.verify|verify} messages.
         * @param message HistoryPointsKL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKLPoints.IHistoryPointsKL, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HistoryPointsKL message, length delimited. Does not implicitly {@link Qot_GetHistoryKLPoints.HistoryPointsKL.verify|verify} messages.
         * @param message HistoryPointsKL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKLPoints.IHistoryPointsKL, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HistoryPointsKL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HistoryPointsKL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKLPoints.HistoryPointsKL;

        /**
         * Decodes a HistoryPointsKL message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HistoryPointsKL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKLPoints.HistoryPointsKL;

        /**
         * Verifies a HistoryPointsKL message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HistoryPointsKL message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HistoryPointsKL
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKLPoints.HistoryPointsKL;

        /**
         * Creates a plain object from a HistoryPointsKL message. Also converts values to other types if specified.
         * @param message HistoryPointsKL
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKLPoints.HistoryPointsKL, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HistoryPointsKL to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for HistoryPointsKL
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a SecurityHistoryKLPoints. */
    interface ISecurityHistoryKLPoints {

        /** SecurityHistoryKLPoints security */
        security: Qot_Common.ISecurity;

        /** SecurityHistoryKLPoints klList */
        klList?: (Qot_GetHistoryKLPoints.IHistoryPointsKL[]|null);
    }

    /** Represents a SecurityHistoryKLPoints. */
    class SecurityHistoryKLPoints implements ISecurityHistoryKLPoints {

        /**
         * Constructs a new SecurityHistoryKLPoints.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKLPoints.ISecurityHistoryKLPoints);

        /** SecurityHistoryKLPoints security. */
        public security: Qot_Common.ISecurity;

        /** SecurityHistoryKLPoints klList. */
        public klList: Qot_GetHistoryKLPoints.IHistoryPointsKL[];

        /**
         * Creates a new SecurityHistoryKLPoints instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityHistoryKLPoints instance
         */
        public static create(properties?: Qot_GetHistoryKLPoints.ISecurityHistoryKLPoints): Qot_GetHistoryKLPoints.SecurityHistoryKLPoints;

        /**
         * Encodes the specified SecurityHistoryKLPoints message. Does not implicitly {@link Qot_GetHistoryKLPoints.SecurityHistoryKLPoints.verify|verify} messages.
         * @param message SecurityHistoryKLPoints message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKLPoints.ISecurityHistoryKLPoints, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityHistoryKLPoints message, length delimited. Does not implicitly {@link Qot_GetHistoryKLPoints.SecurityHistoryKLPoints.verify|verify} messages.
         * @param message SecurityHistoryKLPoints message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKLPoints.ISecurityHistoryKLPoints, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityHistoryKLPoints message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityHistoryKLPoints
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKLPoints.SecurityHistoryKLPoints;

        /**
         * Decodes a SecurityHistoryKLPoints message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityHistoryKLPoints
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKLPoints.SecurityHistoryKLPoints;

        /**
         * Verifies a SecurityHistoryKLPoints message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityHistoryKLPoints message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityHistoryKLPoints
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKLPoints.SecurityHistoryKLPoints;

        /**
         * Creates a plain object from a SecurityHistoryKLPoints message. Also converts values to other types if specified.
         * @param message SecurityHistoryKLPoints
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKLPoints.SecurityHistoryKLPoints, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityHistoryKLPoints to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for SecurityHistoryKLPoints
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C klPointList */
        klPointList?: (Qot_GetHistoryKLPoints.ISecurityHistoryKLPoints[]|null);

        /** S2C hasNext */
        hasNext?: (boolean|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKLPoints.IS2C);

        /** S2C klPointList. */
        public klPointList: Qot_GetHistoryKLPoints.ISecurityHistoryKLPoints[];

        /** S2C hasNext. */
        public hasNext: boolean;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetHistoryKLPoints.IS2C): Qot_GetHistoryKLPoints.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetHistoryKLPoints.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKLPoints.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetHistoryKLPoints.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKLPoints.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKLPoints.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKLPoints.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKLPoints.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKLPoints.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetHistoryKLPoints.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKLPoints.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetHistoryKLPoints.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetHistoryKLPoints.IRequest): Qot_GetHistoryKLPoints.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetHistoryKLPoints.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKLPoints.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetHistoryKLPoints.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKLPoints.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKLPoints.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKLPoints.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKLPoints.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKLPoints.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetHistoryKLPoints.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKLPoints.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetHistoryKLPoints.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetHistoryKLPoints.IResponse): Qot_GetHistoryKLPoints.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetHistoryKLPoints.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKLPoints.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetHistoryKLPoints.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKLPoints.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKLPoints.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKLPoints.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKLPoints.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKLPoints.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetHoldingChangeList. */
export namespace Qot_GetHoldingChangeList {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;

        /** C2S holderCategory */
        holderCategory: number;

        /** C2S beginTime */
        beginTime?: (string|null);

        /** C2S endTime */
        endTime?: (string|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHoldingChangeList.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /** C2S holderCategory. */
        public holderCategory: number;

        /** C2S beginTime. */
        public beginTime: string;

        /** C2S endTime. */
        public endTime: string;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetHoldingChangeList.IC2S): Qot_GetHoldingChangeList.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetHoldingChangeList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHoldingChangeList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetHoldingChangeList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHoldingChangeList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHoldingChangeList.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHoldingChangeList.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHoldingChangeList.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHoldingChangeList.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C holdingChangeList */
        holdingChangeList?: (Qot_Common.IShareHoldingChange[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHoldingChangeList.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C holdingChangeList. */
        public holdingChangeList: Qot_Common.IShareHoldingChange[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetHoldingChangeList.IS2C): Qot_GetHoldingChangeList.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetHoldingChangeList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHoldingChangeList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetHoldingChangeList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHoldingChangeList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHoldingChangeList.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHoldingChangeList.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHoldingChangeList.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHoldingChangeList.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetHoldingChangeList.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHoldingChangeList.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetHoldingChangeList.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetHoldingChangeList.IRequest): Qot_GetHoldingChangeList.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetHoldingChangeList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHoldingChangeList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetHoldingChangeList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHoldingChangeList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHoldingChangeList.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHoldingChangeList.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHoldingChangeList.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHoldingChangeList.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetHoldingChangeList.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHoldingChangeList.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetHoldingChangeList.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetHoldingChangeList.IResponse): Qot_GetHoldingChangeList.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetHoldingChangeList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHoldingChangeList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetHoldingChangeList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHoldingChangeList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHoldingChangeList.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHoldingChangeList.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHoldingChangeList.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHoldingChangeList.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetIpoList. */
export namespace Qot_GetIpoList {

    /** Properties of a BasicIpoData. */
    interface IBasicIpoData {

        /** BasicIpoData security */
        security: Qot_Common.ISecurity;

        /** BasicIpoData name */
        name: string;

        /** BasicIpoData listTime */
        listTime?: (string|null);

        /** BasicIpoData listTimestamp */
        listTimestamp?: (number|null);
    }

    /** Represents a BasicIpoData. */
    class BasicIpoData implements IBasicIpoData {

        /**
         * Constructs a new BasicIpoData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetIpoList.IBasicIpoData);

        /** BasicIpoData security. */
        public security: Qot_Common.ISecurity;

        /** BasicIpoData name. */
        public name: string;

        /** BasicIpoData listTime. */
        public listTime: string;

        /** BasicIpoData listTimestamp. */
        public listTimestamp: number;

        /**
         * Creates a new BasicIpoData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BasicIpoData instance
         */
        public static create(properties?: Qot_GetIpoList.IBasicIpoData): Qot_GetIpoList.BasicIpoData;

        /**
         * Encodes the specified BasicIpoData message. Does not implicitly {@link Qot_GetIpoList.BasicIpoData.verify|verify} messages.
         * @param message BasicIpoData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetIpoList.IBasicIpoData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BasicIpoData message, length delimited. Does not implicitly {@link Qot_GetIpoList.BasicIpoData.verify|verify} messages.
         * @param message BasicIpoData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetIpoList.IBasicIpoData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BasicIpoData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BasicIpoData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetIpoList.BasicIpoData;

        /**
         * Decodes a BasicIpoData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BasicIpoData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetIpoList.BasicIpoData;

        /**
         * Verifies a BasicIpoData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BasicIpoData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BasicIpoData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetIpoList.BasicIpoData;

        /**
         * Creates a plain object from a BasicIpoData message. Also converts values to other types if specified.
         * @param message BasicIpoData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetIpoList.BasicIpoData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BasicIpoData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for BasicIpoData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a CNIpoExData. */
    interface ICNIpoExData {

        /** CNIpoExData applyCode */
        applyCode: string;

        /** CNIpoExData issueSize */
        issueSize: Long;

        /** CNIpoExData onlineIssueSize */
        onlineIssueSize: Long;

        /** CNIpoExData applyUpperLimit */
        applyUpperLimit: Long;

        /** CNIpoExData applyLimitMarketValue */
        applyLimitMarketValue: Long;

        /** CNIpoExData isEstimateIpoPrice */
        isEstimateIpoPrice: boolean;

        /** CNIpoExData ipoPrice */
        ipoPrice: number;

        /** CNIpoExData industryPeRate */
        industryPeRate: number;

        /** CNIpoExData isEstimateWinningRatio */
        isEstimateWinningRatio: boolean;

        /** CNIpoExData winningRatio */
        winningRatio: number;

        /** CNIpoExData issuePeRate */
        issuePeRate: number;

        /** CNIpoExData applyTime */
        applyTime?: (string|null);

        /** CNIpoExData applyTimestamp */
        applyTimestamp?: (number|null);

        /** CNIpoExData winningTime */
        winningTime?: (string|null);

        /** CNIpoExData winningTimestamp */
        winningTimestamp?: (number|null);

        /** CNIpoExData isHasWon */
        isHasWon: boolean;

        /** CNIpoExData winningNumData */
        winningNumData?: (Qot_GetIpoList.IWinningNumData[]|null);
    }

    /** Represents a CNIpoExData. */
    class CNIpoExData implements ICNIpoExData {

        /**
         * Constructs a new CNIpoExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetIpoList.ICNIpoExData);

        /** CNIpoExData applyCode. */
        public applyCode: string;

        /** CNIpoExData issueSize. */
        public issueSize: Long;

        /** CNIpoExData onlineIssueSize. */
        public onlineIssueSize: Long;

        /** CNIpoExData applyUpperLimit. */
        public applyUpperLimit: Long;

        /** CNIpoExData applyLimitMarketValue. */
        public applyLimitMarketValue: Long;

        /** CNIpoExData isEstimateIpoPrice. */
        public isEstimateIpoPrice: boolean;

        /** CNIpoExData ipoPrice. */
        public ipoPrice: number;

        /** CNIpoExData industryPeRate. */
        public industryPeRate: number;

        /** CNIpoExData isEstimateWinningRatio. */
        public isEstimateWinningRatio: boolean;

        /** CNIpoExData winningRatio. */
        public winningRatio: number;

        /** CNIpoExData issuePeRate. */
        public issuePeRate: number;

        /** CNIpoExData applyTime. */
        public applyTime: string;

        /** CNIpoExData applyTimestamp. */
        public applyTimestamp: number;

        /** CNIpoExData winningTime. */
        public winningTime: string;

        /** CNIpoExData winningTimestamp. */
        public winningTimestamp: number;

        /** CNIpoExData isHasWon. */
        public isHasWon: boolean;

        /** CNIpoExData winningNumData. */
        public winningNumData: Qot_GetIpoList.IWinningNumData[];

        /**
         * Creates a new CNIpoExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CNIpoExData instance
         */
        public static create(properties?: Qot_GetIpoList.ICNIpoExData): Qot_GetIpoList.CNIpoExData;

        /**
         * Encodes the specified CNIpoExData message. Does not implicitly {@link Qot_GetIpoList.CNIpoExData.verify|verify} messages.
         * @param message CNIpoExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetIpoList.ICNIpoExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CNIpoExData message, length delimited. Does not implicitly {@link Qot_GetIpoList.CNIpoExData.verify|verify} messages.
         * @param message CNIpoExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetIpoList.ICNIpoExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CNIpoExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CNIpoExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetIpoList.CNIpoExData;

        /**
         * Decodes a CNIpoExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CNIpoExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetIpoList.CNIpoExData;

        /**
         * Verifies a CNIpoExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CNIpoExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CNIpoExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetIpoList.CNIpoExData;

        /**
         * Creates a plain object from a CNIpoExData message. Also converts values to other types if specified.
         * @param message CNIpoExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetIpoList.CNIpoExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CNIpoExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for CNIpoExData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a WinningNumData. */
    interface IWinningNumData {

        /** WinningNumData winningName */
        winningName: string;

        /** WinningNumData winningInfo */
        winningInfo: string;
    }

    /** Represents a WinningNumData. */
    class WinningNumData implements IWinningNumData {

        /**
         * Constructs a new WinningNumData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetIpoList.IWinningNumData);

        /** WinningNumData winningName. */
        public winningName: string;

        /** WinningNumData winningInfo. */
        public winningInfo: string;

        /**
         * Creates a new WinningNumData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WinningNumData instance
         */
        public static create(properties?: Qot_GetIpoList.IWinningNumData): Qot_GetIpoList.WinningNumData;

        /**
         * Encodes the specified WinningNumData message. Does not implicitly {@link Qot_GetIpoList.WinningNumData.verify|verify} messages.
         * @param message WinningNumData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetIpoList.IWinningNumData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WinningNumData message, length delimited. Does not implicitly {@link Qot_GetIpoList.WinningNumData.verify|verify} messages.
         * @param message WinningNumData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetIpoList.IWinningNumData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WinningNumData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WinningNumData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetIpoList.WinningNumData;

        /**
         * Decodes a WinningNumData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WinningNumData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetIpoList.WinningNumData;

        /**
         * Verifies a WinningNumData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WinningNumData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WinningNumData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetIpoList.WinningNumData;

        /**
         * Creates a plain object from a WinningNumData message. Also converts values to other types if specified.
         * @param message WinningNumData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetIpoList.WinningNumData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WinningNumData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for WinningNumData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a HKIpoExData. */
    interface IHKIpoExData {

        /** HKIpoExData ipoPriceMin */
        ipoPriceMin: number;

        /** HKIpoExData ipoPriceMax */
        ipoPriceMax: number;

        /** HKIpoExData listPrice */
        listPrice: number;

        /** HKIpoExData lotSize */
        lotSize: number;

        /** HKIpoExData entrancePrice */
        entrancePrice: number;

        /** HKIpoExData isSubscribeStatus */
        isSubscribeStatus: boolean;

        /** HKIpoExData applyEndTime */
        applyEndTime?: (string|null);

        /** HKIpoExData applyEndTimestamp */
        applyEndTimestamp?: (number|null);
    }

    /** Represents a HKIpoExData. */
    class HKIpoExData implements IHKIpoExData {

        /**
         * Constructs a new HKIpoExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetIpoList.IHKIpoExData);

        /** HKIpoExData ipoPriceMin. */
        public ipoPriceMin: number;

        /** HKIpoExData ipoPriceMax. */
        public ipoPriceMax: number;

        /** HKIpoExData listPrice. */
        public listPrice: number;

        /** HKIpoExData lotSize. */
        public lotSize: number;

        /** HKIpoExData entrancePrice. */
        public entrancePrice: number;

        /** HKIpoExData isSubscribeStatus. */
        public isSubscribeStatus: boolean;

        /** HKIpoExData applyEndTime. */
        public applyEndTime: string;

        /** HKIpoExData applyEndTimestamp. */
        public applyEndTimestamp: number;

        /**
         * Creates a new HKIpoExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HKIpoExData instance
         */
        public static create(properties?: Qot_GetIpoList.IHKIpoExData): Qot_GetIpoList.HKIpoExData;

        /**
         * Encodes the specified HKIpoExData message. Does not implicitly {@link Qot_GetIpoList.HKIpoExData.verify|verify} messages.
         * @param message HKIpoExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetIpoList.IHKIpoExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HKIpoExData message, length delimited. Does not implicitly {@link Qot_GetIpoList.HKIpoExData.verify|verify} messages.
         * @param message HKIpoExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetIpoList.IHKIpoExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HKIpoExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HKIpoExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetIpoList.HKIpoExData;

        /**
         * Decodes a HKIpoExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HKIpoExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetIpoList.HKIpoExData;

        /**
         * Verifies a HKIpoExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HKIpoExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HKIpoExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetIpoList.HKIpoExData;

        /**
         * Creates a plain object from a HKIpoExData message. Also converts values to other types if specified.
         * @param message HKIpoExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetIpoList.HKIpoExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HKIpoExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for HKIpoExData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a USIpoExData. */
    interface IUSIpoExData {

        /** USIpoExData ipoPriceMin */
        ipoPriceMin: number;

        /** USIpoExData ipoPriceMax */
        ipoPriceMax: number;

        /** USIpoExData issueSize */
        issueSize: Long;
    }

    /** Represents a USIpoExData. */
    class USIpoExData implements IUSIpoExData {

        /**
         * Constructs a new USIpoExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetIpoList.IUSIpoExData);

        /** USIpoExData ipoPriceMin. */
        public ipoPriceMin: number;

        /** USIpoExData ipoPriceMax. */
        public ipoPriceMax: number;

        /** USIpoExData issueSize. */
        public issueSize: Long;

        /**
         * Creates a new USIpoExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns USIpoExData instance
         */
        public static create(properties?: Qot_GetIpoList.IUSIpoExData): Qot_GetIpoList.USIpoExData;

        /**
         * Encodes the specified USIpoExData message. Does not implicitly {@link Qot_GetIpoList.USIpoExData.verify|verify} messages.
         * @param message USIpoExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetIpoList.IUSIpoExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified USIpoExData message, length delimited. Does not implicitly {@link Qot_GetIpoList.USIpoExData.verify|verify} messages.
         * @param message USIpoExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetIpoList.IUSIpoExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a USIpoExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns USIpoExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetIpoList.USIpoExData;

        /**
         * Decodes a USIpoExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns USIpoExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetIpoList.USIpoExData;

        /**
         * Verifies a USIpoExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a USIpoExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns USIpoExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetIpoList.USIpoExData;

        /**
         * Creates a plain object from a USIpoExData message. Also converts values to other types if specified.
         * @param message USIpoExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetIpoList.USIpoExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this USIpoExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for USIpoExData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an IpoData. */
    interface IIpoData {

        /** IpoData basic */
        basic: Qot_GetIpoList.IBasicIpoData;

        /** IpoData cnExData */
        cnExData?: (Qot_GetIpoList.ICNIpoExData|null);

        /** IpoData hkExData */
        hkExData?: (Qot_GetIpoList.IHKIpoExData|null);

        /** IpoData usExData */
        usExData?: (Qot_GetIpoList.IUSIpoExData|null);
    }

    /** Represents an IpoData. */
    class IpoData implements IIpoData {

        /**
         * Constructs a new IpoData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetIpoList.IIpoData);

        /** IpoData basic. */
        public basic: Qot_GetIpoList.IBasicIpoData;

        /** IpoData cnExData. */
        public cnExData?: (Qot_GetIpoList.ICNIpoExData|null);

        /** IpoData hkExData. */
        public hkExData?: (Qot_GetIpoList.IHKIpoExData|null);

        /** IpoData usExData. */
        public usExData?: (Qot_GetIpoList.IUSIpoExData|null);

        /**
         * Creates a new IpoData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IpoData instance
         */
        public static create(properties?: Qot_GetIpoList.IIpoData): Qot_GetIpoList.IpoData;

        /**
         * Encodes the specified IpoData message. Does not implicitly {@link Qot_GetIpoList.IpoData.verify|verify} messages.
         * @param message IpoData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetIpoList.IIpoData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IpoData message, length delimited. Does not implicitly {@link Qot_GetIpoList.IpoData.verify|verify} messages.
         * @param message IpoData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetIpoList.IIpoData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IpoData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IpoData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetIpoList.IpoData;

        /**
         * Decodes an IpoData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IpoData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetIpoList.IpoData;

        /**
         * Verifies an IpoData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IpoData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IpoData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetIpoList.IpoData;

        /**
         * Creates a plain object from an IpoData message. Also converts values to other types if specified.
         * @param message IpoData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetIpoList.IpoData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IpoData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for IpoData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S market */
        market: number;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetIpoList.IC2S);

        /** C2S market. */
        public market: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetIpoList.IC2S): Qot_GetIpoList.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetIpoList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetIpoList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetIpoList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetIpoList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetIpoList.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetIpoList.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetIpoList.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetIpoList.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C ipoList */
        ipoList?: (Qot_GetIpoList.IIpoData[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetIpoList.IS2C);

        /** S2C ipoList. */
        public ipoList: Qot_GetIpoList.IIpoData[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetIpoList.IS2C): Qot_GetIpoList.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetIpoList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetIpoList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetIpoList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetIpoList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetIpoList.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetIpoList.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetIpoList.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetIpoList.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetIpoList.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetIpoList.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetIpoList.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetIpoList.IRequest): Qot_GetIpoList.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetIpoList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetIpoList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetIpoList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetIpoList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetIpoList.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetIpoList.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetIpoList.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetIpoList.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetIpoList.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetIpoList.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetIpoList.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetIpoList.IResponse): Qot_GetIpoList.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetIpoList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetIpoList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetIpoList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetIpoList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetIpoList.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetIpoList.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetIpoList.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetIpoList.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetKL. */
export namespace Qot_GetKL {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S rehabType */
        rehabType: number;

        /** C2S klType */
        klType: number;

        /** C2S security */
        security: Qot_Common.ISecurity;

        /** C2S reqNum */
        reqNum: number;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetKL.IC2S);

        /** C2S rehabType. */
        public rehabType: number;

        /** C2S klType. */
        public klType: number;

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /** C2S reqNum. */
        public reqNum: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetKL.IC2S): Qot_GetKL.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetKL.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetKL.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetKL.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetKL.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetKL.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetKL.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetKL.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetKL.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C name */
        name?: (string|null);

        /** S2C klList */
        klList?: (Qot_Common.IKLine[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetKL.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C name. */
        public name: string;

        /** S2C klList. */
        public klList: Qot_Common.IKLine[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetKL.IS2C): Qot_GetKL.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetKL.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetKL.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetKL.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetKL.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetKL.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetKL.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetKL.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetKL.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetKL.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetKL.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetKL.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetKL.IRequest): Qot_GetKL.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetKL.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetKL.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetKL.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetKL.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetKL.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetKL.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetKL.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetKL.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetKL.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetKL.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetKL.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetKL.IResponse): Qot_GetKL.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetKL.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetKL.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetKL.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetKL.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetKL.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetKL.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetKL.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetKL.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetMarketState. */
export namespace Qot_GetMarketState {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetMarketState.IC2S);

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetMarketState.IC2S): Qot_GetMarketState.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetMarketState.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetMarketState.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetMarketState.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetMarketState.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetMarketState.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetMarketState.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetMarketState.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetMarketState.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a MarketInfo. */
    interface IMarketInfo {

        /** MarketInfo security */
        security: Qot_Common.ISecurity;

        /** MarketInfo name */
        name: string;

        /** MarketInfo marketState */
        marketState: number;
    }

    /** Represents a MarketInfo. */
    class MarketInfo implements IMarketInfo {

        /**
         * Constructs a new MarketInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetMarketState.IMarketInfo);

        /** MarketInfo security. */
        public security: Qot_Common.ISecurity;

        /** MarketInfo name. */
        public name: string;

        /** MarketInfo marketState. */
        public marketState: number;

        /**
         * Creates a new MarketInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MarketInfo instance
         */
        public static create(properties?: Qot_GetMarketState.IMarketInfo): Qot_GetMarketState.MarketInfo;

        /**
         * Encodes the specified MarketInfo message. Does not implicitly {@link Qot_GetMarketState.MarketInfo.verify|verify} messages.
         * @param message MarketInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetMarketState.IMarketInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MarketInfo message, length delimited. Does not implicitly {@link Qot_GetMarketState.MarketInfo.verify|verify} messages.
         * @param message MarketInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetMarketState.IMarketInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MarketInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MarketInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetMarketState.MarketInfo;

        /**
         * Decodes a MarketInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MarketInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetMarketState.MarketInfo;

        /**
         * Verifies a MarketInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MarketInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MarketInfo
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetMarketState.MarketInfo;

        /**
         * Creates a plain object from a MarketInfo message. Also converts values to other types if specified.
         * @param message MarketInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetMarketState.MarketInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MarketInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for MarketInfo
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C marketInfoList */
        marketInfoList?: (Qot_GetMarketState.IMarketInfo[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetMarketState.IS2C);

        /** S2C marketInfoList. */
        public marketInfoList: Qot_GetMarketState.IMarketInfo[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetMarketState.IS2C): Qot_GetMarketState.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetMarketState.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetMarketState.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetMarketState.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetMarketState.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetMarketState.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetMarketState.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetMarketState.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetMarketState.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetMarketState.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetMarketState.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetMarketState.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetMarketState.IRequest): Qot_GetMarketState.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetMarketState.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetMarketState.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetMarketState.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetMarketState.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetMarketState.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetMarketState.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetMarketState.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetMarketState.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetMarketState.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetMarketState.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetMarketState.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetMarketState.IResponse): Qot_GetMarketState.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetMarketState.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetMarketState.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetMarketState.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetMarketState.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetMarketState.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetMarketState.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetMarketState.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetMarketState.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetOptionChain. */
export namespace Qot_GetOptionChain {

    /** OptionCondType enum. */
    enum OptionCondType {
        OptionCondType_Unknow = 0,
        OptionCondType_WithIn = 1,
        OptionCondType_Outside = 2
    }

    /** Properties of a DataFilter. */
    interface IDataFilter {

        /** DataFilter impliedVolatilityMin */
        impliedVolatilityMin?: (number|null);

        /** DataFilter impliedVolatilityMax */
        impliedVolatilityMax?: (number|null);

        /** DataFilter deltaMin */
        deltaMin?: (number|null);

        /** DataFilter deltaMax */
        deltaMax?: (number|null);

        /** DataFilter gammaMin */
        gammaMin?: (number|null);

        /** DataFilter gammaMax */
        gammaMax?: (number|null);

        /** DataFilter vegaMin */
        vegaMin?: (number|null);

        /** DataFilter vegaMax */
        vegaMax?: (number|null);

        /** DataFilter thetaMin */
        thetaMin?: (number|null);

        /** DataFilter thetaMax */
        thetaMax?: (number|null);

        /** DataFilter rhoMin */
        rhoMin?: (number|null);

        /** DataFilter rhoMax */
        rhoMax?: (number|null);

        /** DataFilter netOpenInterestMin */
        netOpenInterestMin?: (number|null);

        /** DataFilter netOpenInterestMax */
        netOpenInterestMax?: (number|null);

        /** DataFilter openInterestMin */
        openInterestMin?: (number|null);

        /** DataFilter openInterestMax */
        openInterestMax?: (number|null);

        /** DataFilter volMin */
        volMin?: (number|null);

        /** DataFilter volMax */
        volMax?: (number|null);
    }

    /** Represents a DataFilter. */
    class DataFilter implements IDataFilter {

        /**
         * Constructs a new DataFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionChain.IDataFilter);

        /** DataFilter impliedVolatilityMin. */
        public impliedVolatilityMin: number;

        /** DataFilter impliedVolatilityMax. */
        public impliedVolatilityMax: number;

        /** DataFilter deltaMin. */
        public deltaMin: number;

        /** DataFilter deltaMax. */
        public deltaMax: number;

        /** DataFilter gammaMin. */
        public gammaMin: number;

        /** DataFilter gammaMax. */
        public gammaMax: number;

        /** DataFilter vegaMin. */
        public vegaMin: number;

        /** DataFilter vegaMax. */
        public vegaMax: number;

        /** DataFilter thetaMin. */
        public thetaMin: number;

        /** DataFilter thetaMax. */
        public thetaMax: number;

        /** DataFilter rhoMin. */
        public rhoMin: number;

        /** DataFilter rhoMax. */
        public rhoMax: number;

        /** DataFilter netOpenInterestMin. */
        public netOpenInterestMin: number;

        /** DataFilter netOpenInterestMax. */
        public netOpenInterestMax: number;

        /** DataFilter openInterestMin. */
        public openInterestMin: number;

        /** DataFilter openInterestMax. */
        public openInterestMax: number;

        /** DataFilter volMin. */
        public volMin: number;

        /** DataFilter volMax. */
        public volMax: number;

        /**
         * Creates a new DataFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataFilter instance
         */
        public static create(properties?: Qot_GetOptionChain.IDataFilter): Qot_GetOptionChain.DataFilter;

        /**
         * Encodes the specified DataFilter message. Does not implicitly {@link Qot_GetOptionChain.DataFilter.verify|verify} messages.
         * @param message DataFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionChain.IDataFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DataFilter message, length delimited. Does not implicitly {@link Qot_GetOptionChain.DataFilter.verify|verify} messages.
         * @param message DataFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionChain.IDataFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DataFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionChain.DataFilter;

        /**
         * Decodes a DataFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionChain.DataFilter;

        /**
         * Verifies a DataFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataFilter
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionChain.DataFilter;

        /**
         * Creates a plain object from a DataFilter message. Also converts values to other types if specified.
         * @param message DataFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionChain.DataFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for DataFilter
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S owner */
        owner: Qot_Common.ISecurity;

        /** C2S indexOptionType */
        indexOptionType?: (number|null);

        /** C2S type */
        type?: (number|null);

        /** C2S condition */
        condition?: (number|null);

        /** C2S beginTime */
        beginTime: string;

        /** C2S endTime */
        endTime: string;

        /** C2S dataFilter */
        dataFilter?: (Qot_GetOptionChain.IDataFilter|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionChain.IC2S);

        /** C2S owner. */
        public owner: Qot_Common.ISecurity;

        /** C2S indexOptionType. */
        public indexOptionType: number;

        /** C2S type. */
        public type: number;

        /** C2S condition. */
        public condition: number;

        /** C2S beginTime. */
        public beginTime: string;

        /** C2S endTime. */
        public endTime: string;

        /** C2S dataFilter. */
        public dataFilter?: (Qot_GetOptionChain.IDataFilter|null);

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetOptionChain.IC2S): Qot_GetOptionChain.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetOptionChain.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionChain.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetOptionChain.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionChain.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionChain.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionChain.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionChain.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionChain.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an OptionItem. */
    interface IOptionItem {

        /** OptionItem call */
        call?: (Qot_Common.ISecurityStaticInfo|null);

        /** OptionItem put */
        put?: (Qot_Common.ISecurityStaticInfo|null);
    }

    /** Represents an OptionItem. */
    class OptionItem implements IOptionItem {

        /**
         * Constructs a new OptionItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionChain.IOptionItem);

        /** OptionItem call. */
        public call?: (Qot_Common.ISecurityStaticInfo|null);

        /** OptionItem put. */
        public put?: (Qot_Common.ISecurityStaticInfo|null);

        /**
         * Creates a new OptionItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OptionItem instance
         */
        public static create(properties?: Qot_GetOptionChain.IOptionItem): Qot_GetOptionChain.OptionItem;

        /**
         * Encodes the specified OptionItem message. Does not implicitly {@link Qot_GetOptionChain.OptionItem.verify|verify} messages.
         * @param message OptionItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionChain.IOptionItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OptionItem message, length delimited. Does not implicitly {@link Qot_GetOptionChain.OptionItem.verify|verify} messages.
         * @param message OptionItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionChain.IOptionItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OptionItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OptionItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionChain.OptionItem;

        /**
         * Decodes an OptionItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OptionItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionChain.OptionItem;

        /**
         * Verifies an OptionItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OptionItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OptionItem
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionChain.OptionItem;

        /**
         * Creates a plain object from an OptionItem message. Also converts values to other types if specified.
         * @param message OptionItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionChain.OptionItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OptionItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for OptionItem
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an OptionChain. */
    interface IOptionChain {

        /** OptionChain strikeTime */
        strikeTime: string;

        /** OptionChain option */
        option?: (Qot_GetOptionChain.IOptionItem[]|null);

        /** OptionChain strikeTimestamp */
        strikeTimestamp?: (number|null);
    }

    /** Represents an OptionChain. */
    class OptionChain implements IOptionChain {

        /**
         * Constructs a new OptionChain.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionChain.IOptionChain);

        /** OptionChain strikeTime. */
        public strikeTime: string;

        /** OptionChain option. */
        public option: Qot_GetOptionChain.IOptionItem[];

        /** OptionChain strikeTimestamp. */
        public strikeTimestamp: number;

        /**
         * Creates a new OptionChain instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OptionChain instance
         */
        public static create(properties?: Qot_GetOptionChain.IOptionChain): Qot_GetOptionChain.OptionChain;

        /**
         * Encodes the specified OptionChain message. Does not implicitly {@link Qot_GetOptionChain.OptionChain.verify|verify} messages.
         * @param message OptionChain message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionChain.IOptionChain, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OptionChain message, length delimited. Does not implicitly {@link Qot_GetOptionChain.OptionChain.verify|verify} messages.
         * @param message OptionChain message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionChain.IOptionChain, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OptionChain message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OptionChain
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionChain.OptionChain;

        /**
         * Decodes an OptionChain message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OptionChain
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionChain.OptionChain;

        /**
         * Verifies an OptionChain message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OptionChain message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OptionChain
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionChain.OptionChain;

        /**
         * Creates a plain object from an OptionChain message. Also converts values to other types if specified.
         * @param message OptionChain
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionChain.OptionChain, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OptionChain to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for OptionChain
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C optionChain */
        optionChain?: (Qot_GetOptionChain.IOptionChain[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionChain.IS2C);

        /** S2C optionChain. */
        public optionChain: Qot_GetOptionChain.IOptionChain[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetOptionChain.IS2C): Qot_GetOptionChain.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetOptionChain.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionChain.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetOptionChain.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionChain.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionChain.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionChain.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionChain.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionChain.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetOptionChain.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionChain.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetOptionChain.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetOptionChain.IRequest): Qot_GetOptionChain.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetOptionChain.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionChain.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetOptionChain.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionChain.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionChain.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionChain.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionChain.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionChain.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetOptionChain.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionChain.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetOptionChain.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetOptionChain.IResponse): Qot_GetOptionChain.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetOptionChain.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionChain.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetOptionChain.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionChain.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionChain.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionChain.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionChain.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionChain.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetOptionExpirationDate. */
export namespace Qot_GetOptionExpirationDate {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S owner */
        owner: Qot_Common.ISecurity;

        /** C2S indexOptionType */
        indexOptionType?: (number|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionExpirationDate.IC2S);

        /** C2S owner. */
        public owner: Qot_Common.ISecurity;

        /** C2S indexOptionType. */
        public indexOptionType: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetOptionExpirationDate.IC2S): Qot_GetOptionExpirationDate.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetOptionExpirationDate.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionExpirationDate.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetOptionExpirationDate.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionExpirationDate.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionExpirationDate.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionExpirationDate.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionExpirationDate.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionExpirationDate.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an OptionExpirationDate. */
    interface IOptionExpirationDate {

        /** OptionExpirationDate strikeTime */
        strikeTime?: (string|null);

        /** OptionExpirationDate strikeTimestamp */
        strikeTimestamp?: (number|null);

        /** OptionExpirationDate optionExpiryDateDistance */
        optionExpiryDateDistance: number;

        /** OptionExpirationDate cycle */
        cycle?: (number|null);
    }

    /** Represents an OptionExpirationDate. */
    class OptionExpirationDate implements IOptionExpirationDate {

        /**
         * Constructs a new OptionExpirationDate.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionExpirationDate.IOptionExpirationDate);

        /** OptionExpirationDate strikeTime. */
        public strikeTime: string;

        /** OptionExpirationDate strikeTimestamp. */
        public strikeTimestamp: number;

        /** OptionExpirationDate optionExpiryDateDistance. */
        public optionExpiryDateDistance: number;

        /** OptionExpirationDate cycle. */
        public cycle: number;

        /**
         * Creates a new OptionExpirationDate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OptionExpirationDate instance
         */
        public static create(properties?: Qot_GetOptionExpirationDate.IOptionExpirationDate): Qot_GetOptionExpirationDate.OptionExpirationDate;

        /**
         * Encodes the specified OptionExpirationDate message. Does not implicitly {@link Qot_GetOptionExpirationDate.OptionExpirationDate.verify|verify} messages.
         * @param message OptionExpirationDate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionExpirationDate.IOptionExpirationDate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OptionExpirationDate message, length delimited. Does not implicitly {@link Qot_GetOptionExpirationDate.OptionExpirationDate.verify|verify} messages.
         * @param message OptionExpirationDate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionExpirationDate.IOptionExpirationDate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OptionExpirationDate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OptionExpirationDate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionExpirationDate.OptionExpirationDate;

        /**
         * Decodes an OptionExpirationDate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OptionExpirationDate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionExpirationDate.OptionExpirationDate;

        /**
         * Verifies an OptionExpirationDate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OptionExpirationDate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OptionExpirationDate
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionExpirationDate.OptionExpirationDate;

        /**
         * Creates a plain object from an OptionExpirationDate message. Also converts values to other types if specified.
         * @param message OptionExpirationDate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionExpirationDate.OptionExpirationDate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OptionExpirationDate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for OptionExpirationDate
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C dateList */
        dateList?: (Qot_GetOptionExpirationDate.IOptionExpirationDate[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionExpirationDate.IS2C);

        /** S2C dateList. */
        public dateList: Qot_GetOptionExpirationDate.IOptionExpirationDate[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetOptionExpirationDate.IS2C): Qot_GetOptionExpirationDate.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetOptionExpirationDate.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionExpirationDate.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetOptionExpirationDate.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionExpirationDate.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionExpirationDate.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionExpirationDate.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionExpirationDate.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionExpirationDate.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetOptionExpirationDate.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionExpirationDate.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetOptionExpirationDate.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetOptionExpirationDate.IRequest): Qot_GetOptionExpirationDate.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetOptionExpirationDate.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionExpirationDate.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetOptionExpirationDate.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionExpirationDate.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionExpirationDate.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionExpirationDate.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionExpirationDate.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionExpirationDate.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetOptionExpirationDate.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionExpirationDate.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetOptionExpirationDate.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetOptionExpirationDate.IResponse): Qot_GetOptionExpirationDate.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetOptionExpirationDate.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionExpirationDate.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetOptionExpirationDate.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionExpirationDate.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionExpirationDate.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionExpirationDate.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionExpirationDate.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionExpirationDate.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetOrderBook. */
export namespace Qot_GetOrderBook {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;

        /** C2S num */
        num: number;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOrderBook.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /** C2S num. */
        public num: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetOrderBook.IC2S): Qot_GetOrderBook.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetOrderBook.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOrderBook.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetOrderBook.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOrderBook.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOrderBook.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOrderBook.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOrderBook.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOrderBook.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C name */
        name?: (string|null);

        /** S2C orderBookAskList */
        orderBookAskList?: (Qot_Common.IOrderBook[]|null);

        /** S2C orderBookBidList */
        orderBookBidList?: (Qot_Common.IOrderBook[]|null);

        /** S2C svrRecvTimeBid */
        svrRecvTimeBid?: (string|null);

        /** S2C svrRecvTimeBidTimestamp */
        svrRecvTimeBidTimestamp?: (number|null);

        /** S2C svrRecvTimeAsk */
        svrRecvTimeAsk?: (string|null);

        /** S2C svrRecvTimeAskTimestamp */
        svrRecvTimeAskTimestamp?: (number|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOrderBook.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C name. */
        public name: string;

        /** S2C orderBookAskList. */
        public orderBookAskList: Qot_Common.IOrderBook[];

        /** S2C orderBookBidList. */
        public orderBookBidList: Qot_Common.IOrderBook[];

        /** S2C svrRecvTimeBid. */
        public svrRecvTimeBid: string;

        /** S2C svrRecvTimeBidTimestamp. */
        public svrRecvTimeBidTimestamp: number;

        /** S2C svrRecvTimeAsk. */
        public svrRecvTimeAsk: string;

        /** S2C svrRecvTimeAskTimestamp. */
        public svrRecvTimeAskTimestamp: number;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetOrderBook.IS2C): Qot_GetOrderBook.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetOrderBook.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOrderBook.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetOrderBook.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOrderBook.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOrderBook.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOrderBook.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOrderBook.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOrderBook.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetOrderBook.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOrderBook.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetOrderBook.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetOrderBook.IRequest): Qot_GetOrderBook.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetOrderBook.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOrderBook.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetOrderBook.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOrderBook.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOrderBook.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOrderBook.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOrderBook.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOrderBook.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetOrderBook.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOrderBook.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetOrderBook.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetOrderBook.IResponse): Qot_GetOrderBook.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetOrderBook.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOrderBook.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetOrderBook.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOrderBook.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOrderBook.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOrderBook.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOrderBook.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOrderBook.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetOwnerPlate. */
export namespace Qot_GetOwnerPlate {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOwnerPlate.IC2S);

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetOwnerPlate.IC2S): Qot_GetOwnerPlate.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetOwnerPlate.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOwnerPlate.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetOwnerPlate.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOwnerPlate.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOwnerPlate.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOwnerPlate.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOwnerPlate.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOwnerPlate.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a SecurityOwnerPlate. */
    interface ISecurityOwnerPlate {

        /** SecurityOwnerPlate security */
        security: Qot_Common.ISecurity;

        /** SecurityOwnerPlate name */
        name?: (string|null);

        /** SecurityOwnerPlate plateInfoList */
        plateInfoList?: (Qot_Common.IPlateInfo[]|null);
    }

    /** Represents a SecurityOwnerPlate. */
    class SecurityOwnerPlate implements ISecurityOwnerPlate {

        /**
         * Constructs a new SecurityOwnerPlate.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOwnerPlate.ISecurityOwnerPlate);

        /** SecurityOwnerPlate security. */
        public security: Qot_Common.ISecurity;

        /** SecurityOwnerPlate name. */
        public name: string;

        /** SecurityOwnerPlate plateInfoList. */
        public plateInfoList: Qot_Common.IPlateInfo[];

        /**
         * Creates a new SecurityOwnerPlate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityOwnerPlate instance
         */
        public static create(properties?: Qot_GetOwnerPlate.ISecurityOwnerPlate): Qot_GetOwnerPlate.SecurityOwnerPlate;

        /**
         * Encodes the specified SecurityOwnerPlate message. Does not implicitly {@link Qot_GetOwnerPlate.SecurityOwnerPlate.verify|verify} messages.
         * @param message SecurityOwnerPlate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOwnerPlate.ISecurityOwnerPlate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityOwnerPlate message, length delimited. Does not implicitly {@link Qot_GetOwnerPlate.SecurityOwnerPlate.verify|verify} messages.
         * @param message SecurityOwnerPlate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOwnerPlate.ISecurityOwnerPlate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityOwnerPlate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityOwnerPlate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOwnerPlate.SecurityOwnerPlate;

        /**
         * Decodes a SecurityOwnerPlate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityOwnerPlate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOwnerPlate.SecurityOwnerPlate;

        /**
         * Verifies a SecurityOwnerPlate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityOwnerPlate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityOwnerPlate
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOwnerPlate.SecurityOwnerPlate;

        /**
         * Creates a plain object from a SecurityOwnerPlate message. Also converts values to other types if specified.
         * @param message SecurityOwnerPlate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOwnerPlate.SecurityOwnerPlate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityOwnerPlate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for SecurityOwnerPlate
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C ownerPlateList */
        ownerPlateList?: (Qot_GetOwnerPlate.ISecurityOwnerPlate[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOwnerPlate.IS2C);

        /** S2C ownerPlateList. */
        public ownerPlateList: Qot_GetOwnerPlate.ISecurityOwnerPlate[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetOwnerPlate.IS2C): Qot_GetOwnerPlate.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetOwnerPlate.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOwnerPlate.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetOwnerPlate.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOwnerPlate.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOwnerPlate.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOwnerPlate.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOwnerPlate.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOwnerPlate.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetOwnerPlate.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOwnerPlate.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetOwnerPlate.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetOwnerPlate.IRequest): Qot_GetOwnerPlate.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetOwnerPlate.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOwnerPlate.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetOwnerPlate.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOwnerPlate.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOwnerPlate.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOwnerPlate.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOwnerPlate.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOwnerPlate.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetOwnerPlate.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOwnerPlate.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetOwnerPlate.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetOwnerPlate.IResponse): Qot_GetOwnerPlate.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetOwnerPlate.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOwnerPlate.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetOwnerPlate.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOwnerPlate.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOwnerPlate.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOwnerPlate.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOwnerPlate.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOwnerPlate.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetPlateSecurity. */
export namespace Qot_GetPlateSecurity {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S plate */
        plate: Qot_Common.ISecurity;

        /** C2S sortField */
        sortField?: (number|null);

        /** C2S ascend */
        ascend?: (boolean|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPlateSecurity.IC2S);

        /** C2S plate. */
        public plate: Qot_Common.ISecurity;

        /** C2S sortField. */
        public sortField: number;

        /** C2S ascend. */
        public ascend: boolean;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetPlateSecurity.IC2S): Qot_GetPlateSecurity.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetPlateSecurity.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPlateSecurity.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetPlateSecurity.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPlateSecurity.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPlateSecurity.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPlateSecurity.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPlateSecurity.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPlateSecurity.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C staticInfoList */
        staticInfoList?: (Qot_Common.ISecurityStaticInfo[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPlateSecurity.IS2C);

        /** S2C staticInfoList. */
        public staticInfoList: Qot_Common.ISecurityStaticInfo[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetPlateSecurity.IS2C): Qot_GetPlateSecurity.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetPlateSecurity.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPlateSecurity.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetPlateSecurity.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPlateSecurity.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPlateSecurity.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPlateSecurity.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPlateSecurity.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPlateSecurity.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetPlateSecurity.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPlateSecurity.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetPlateSecurity.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetPlateSecurity.IRequest): Qot_GetPlateSecurity.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetPlateSecurity.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPlateSecurity.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetPlateSecurity.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPlateSecurity.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPlateSecurity.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPlateSecurity.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPlateSecurity.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPlateSecurity.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetPlateSecurity.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPlateSecurity.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetPlateSecurity.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetPlateSecurity.IResponse): Qot_GetPlateSecurity.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetPlateSecurity.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPlateSecurity.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetPlateSecurity.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPlateSecurity.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPlateSecurity.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPlateSecurity.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPlateSecurity.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPlateSecurity.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetPlateSet. */
export namespace Qot_GetPlateSet {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S market */
        market: number;

        /** C2S plateSetType */
        plateSetType: number;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPlateSet.IC2S);

        /** C2S market. */
        public market: number;

        /** C2S plateSetType. */
        public plateSetType: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetPlateSet.IC2S): Qot_GetPlateSet.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetPlateSet.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPlateSet.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetPlateSet.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPlateSet.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPlateSet.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPlateSet.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPlateSet.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPlateSet.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C plateInfoList */
        plateInfoList?: (Qot_Common.IPlateInfo[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPlateSet.IS2C);

        /** S2C plateInfoList. */
        public plateInfoList: Qot_Common.IPlateInfo[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetPlateSet.IS2C): Qot_GetPlateSet.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetPlateSet.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPlateSet.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetPlateSet.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPlateSet.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPlateSet.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPlateSet.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPlateSet.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPlateSet.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetPlateSet.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPlateSet.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetPlateSet.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetPlateSet.IRequest): Qot_GetPlateSet.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetPlateSet.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPlateSet.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetPlateSet.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPlateSet.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPlateSet.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPlateSet.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPlateSet.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPlateSet.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetPlateSet.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPlateSet.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetPlateSet.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetPlateSet.IResponse): Qot_GetPlateSet.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetPlateSet.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPlateSet.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetPlateSet.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPlateSet.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPlateSet.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPlateSet.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPlateSet.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPlateSet.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetPriceReminder. */
export namespace Qot_GetPriceReminder {

    /** Properties of a PriceReminderItem. */
    interface IPriceReminderItem {

        /** PriceReminderItem key */
        key: Long;

        /** PriceReminderItem type */
        type: number;

        /** PriceReminderItem value */
        value: number;

        /** PriceReminderItem note */
        note: string;

        /** PriceReminderItem freq */
        freq: number;

        /** PriceReminderItem isEnable */
        isEnable: boolean;
    }

    /** Represents a PriceReminderItem. */
    class PriceReminderItem implements IPriceReminderItem {

        /**
         * Constructs a new PriceReminderItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPriceReminder.IPriceReminderItem);

        /** PriceReminderItem key. */
        public key: Long;

        /** PriceReminderItem type. */
        public type: number;

        /** PriceReminderItem value. */
        public value: number;

        /** PriceReminderItem note. */
        public note: string;

        /** PriceReminderItem freq. */
        public freq: number;

        /** PriceReminderItem isEnable. */
        public isEnable: boolean;

        /**
         * Creates a new PriceReminderItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PriceReminderItem instance
         */
        public static create(properties?: Qot_GetPriceReminder.IPriceReminderItem): Qot_GetPriceReminder.PriceReminderItem;

        /**
         * Encodes the specified PriceReminderItem message. Does not implicitly {@link Qot_GetPriceReminder.PriceReminderItem.verify|verify} messages.
         * @param message PriceReminderItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPriceReminder.IPriceReminderItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PriceReminderItem message, length delimited. Does not implicitly {@link Qot_GetPriceReminder.PriceReminderItem.verify|verify} messages.
         * @param message PriceReminderItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPriceReminder.IPriceReminderItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PriceReminderItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PriceReminderItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPriceReminder.PriceReminderItem;

        /**
         * Decodes a PriceReminderItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PriceReminderItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPriceReminder.PriceReminderItem;

        /**
         * Verifies a PriceReminderItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PriceReminderItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PriceReminderItem
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPriceReminder.PriceReminderItem;

        /**
         * Creates a plain object from a PriceReminderItem message. Also converts values to other types if specified.
         * @param message PriceReminderItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPriceReminder.PriceReminderItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PriceReminderItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for PriceReminderItem
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a PriceReminder. */
    interface IPriceReminder {

        /** PriceReminder security */
        security: Qot_Common.ISecurity;

        /** PriceReminder name */
        name?: (string|null);

        /** PriceReminder itemList */
        itemList?: (Qot_GetPriceReminder.IPriceReminderItem[]|null);
    }

    /** Represents a PriceReminder. */
    class PriceReminder implements IPriceReminder {

        /**
         * Constructs a new PriceReminder.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPriceReminder.IPriceReminder);

        /** PriceReminder security. */
        public security: Qot_Common.ISecurity;

        /** PriceReminder name. */
        public name: string;

        /** PriceReminder itemList. */
        public itemList: Qot_GetPriceReminder.IPriceReminderItem[];

        /**
         * Creates a new PriceReminder instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PriceReminder instance
         */
        public static create(properties?: Qot_GetPriceReminder.IPriceReminder): Qot_GetPriceReminder.PriceReminder;

        /**
         * Encodes the specified PriceReminder message. Does not implicitly {@link Qot_GetPriceReminder.PriceReminder.verify|verify} messages.
         * @param message PriceReminder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPriceReminder.IPriceReminder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PriceReminder message, length delimited. Does not implicitly {@link Qot_GetPriceReminder.PriceReminder.verify|verify} messages.
         * @param message PriceReminder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPriceReminder.IPriceReminder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PriceReminder message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PriceReminder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPriceReminder.PriceReminder;

        /**
         * Decodes a PriceReminder message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PriceReminder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPriceReminder.PriceReminder;

        /**
         * Verifies a PriceReminder message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PriceReminder message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PriceReminder
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPriceReminder.PriceReminder;

        /**
         * Creates a plain object from a PriceReminder message. Also converts values to other types if specified.
         * @param message PriceReminder
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPriceReminder.PriceReminder, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PriceReminder to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for PriceReminder
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security?: (Qot_Common.ISecurity|null);

        /** C2S market */
        market?: (number|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPriceReminder.IC2S);

        /** C2S security. */
        public security?: (Qot_Common.ISecurity|null);

        /** C2S market. */
        public market: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetPriceReminder.IC2S): Qot_GetPriceReminder.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetPriceReminder.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPriceReminder.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetPriceReminder.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPriceReminder.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPriceReminder.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPriceReminder.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPriceReminder.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPriceReminder.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C priceReminderList */
        priceReminderList?: (Qot_GetPriceReminder.IPriceReminder[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPriceReminder.IS2C);

        /** S2C priceReminderList. */
        public priceReminderList: Qot_GetPriceReminder.IPriceReminder[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetPriceReminder.IS2C): Qot_GetPriceReminder.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetPriceReminder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPriceReminder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetPriceReminder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPriceReminder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPriceReminder.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPriceReminder.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPriceReminder.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPriceReminder.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetPriceReminder.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPriceReminder.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetPriceReminder.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetPriceReminder.IRequest): Qot_GetPriceReminder.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetPriceReminder.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPriceReminder.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetPriceReminder.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPriceReminder.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPriceReminder.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPriceReminder.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPriceReminder.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPriceReminder.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetPriceReminder.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPriceReminder.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetPriceReminder.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetPriceReminder.IResponse): Qot_GetPriceReminder.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetPriceReminder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPriceReminder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetPriceReminder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPriceReminder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPriceReminder.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPriceReminder.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPriceReminder.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPriceReminder.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetRT. */
export namespace Qot_GetRT {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRT.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetRT.IC2S): Qot_GetRT.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetRT.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRT.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetRT.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRT.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRT.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRT.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRT.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRT.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C name */
        name?: (string|null);

        /** S2C rtList */
        rtList?: (Qot_Common.ITimeShare[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRT.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C name. */
        public name: string;

        /** S2C rtList. */
        public rtList: Qot_Common.ITimeShare[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetRT.IS2C): Qot_GetRT.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetRT.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRT.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetRT.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRT.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRT.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRT.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRT.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRT.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetRT.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRT.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetRT.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetRT.IRequest): Qot_GetRT.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetRT.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRT.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetRT.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRT.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRT.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRT.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRT.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRT.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetRT.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRT.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetRT.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetRT.IResponse): Qot_GetRT.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetRT.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRT.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetRT.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRT.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRT.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRT.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRT.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRT.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetReference. */
export namespace Qot_GetReference {

    /** ReferenceType enum. */
    enum ReferenceType {
        ReferenceType_Unknow = 0,
        ReferenceType_Warrant = 1,
        ReferenceType_Future = 2
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;

        /** C2S referenceType */
        referenceType: number;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetReference.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /** C2S referenceType. */
        public referenceType: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetReference.IC2S): Qot_GetReference.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetReference.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetReference.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetReference.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetReference.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetReference.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetReference.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetReference.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetReference.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C staticInfoList */
        staticInfoList?: (Qot_Common.ISecurityStaticInfo[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetReference.IS2C);

        /** S2C staticInfoList. */
        public staticInfoList: Qot_Common.ISecurityStaticInfo[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetReference.IS2C): Qot_GetReference.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetReference.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetReference.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetReference.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetReference.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetReference.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetReference.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetReference.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetReference.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetReference.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetReference.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetReference.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetReference.IRequest): Qot_GetReference.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetReference.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetReference.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetReference.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetReference.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetReference.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetReference.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetReference.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetReference.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetReference.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetReference.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetReference.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetReference.IResponse): Qot_GetReference.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetReference.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetReference.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetReference.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetReference.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetReference.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetReference.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetReference.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetReference.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetRehab. */
export namespace Qot_GetRehab {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRehab.IC2S);

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetRehab.IC2S): Qot_GetRehab.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetRehab.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRehab.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetRehab.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRehab.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRehab.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRehab.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRehab.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRehab.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a SecurityRehab. */
    interface ISecurityRehab {

        /** SecurityRehab security */
        security: Qot_Common.ISecurity;

        /** SecurityRehab rehabList */
        rehabList?: (Qot_Common.IRehab[]|null);
    }

    /** Represents a SecurityRehab. */
    class SecurityRehab implements ISecurityRehab {

        /**
         * Constructs a new SecurityRehab.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRehab.ISecurityRehab);

        /** SecurityRehab security. */
        public security: Qot_Common.ISecurity;

        /** SecurityRehab rehabList. */
        public rehabList: Qot_Common.IRehab[];

        /**
         * Creates a new SecurityRehab instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityRehab instance
         */
        public static create(properties?: Qot_GetRehab.ISecurityRehab): Qot_GetRehab.SecurityRehab;

        /**
         * Encodes the specified SecurityRehab message. Does not implicitly {@link Qot_GetRehab.SecurityRehab.verify|verify} messages.
         * @param message SecurityRehab message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRehab.ISecurityRehab, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityRehab message, length delimited. Does not implicitly {@link Qot_GetRehab.SecurityRehab.verify|verify} messages.
         * @param message SecurityRehab message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRehab.ISecurityRehab, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityRehab message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityRehab
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRehab.SecurityRehab;

        /**
         * Decodes a SecurityRehab message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityRehab
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRehab.SecurityRehab;

        /**
         * Verifies a SecurityRehab message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityRehab message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityRehab
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRehab.SecurityRehab;

        /**
         * Creates a plain object from a SecurityRehab message. Also converts values to other types if specified.
         * @param message SecurityRehab
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRehab.SecurityRehab, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityRehab to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for SecurityRehab
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C securityRehabList */
        securityRehabList?: (Qot_GetRehab.ISecurityRehab[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRehab.IS2C);

        /** S2C securityRehabList. */
        public securityRehabList: Qot_GetRehab.ISecurityRehab[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetRehab.IS2C): Qot_GetRehab.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetRehab.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRehab.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetRehab.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRehab.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRehab.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRehab.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRehab.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRehab.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetRehab.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRehab.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetRehab.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetRehab.IRequest): Qot_GetRehab.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetRehab.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRehab.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetRehab.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRehab.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRehab.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRehab.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRehab.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRehab.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetRehab.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRehab.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetRehab.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetRehab.IResponse): Qot_GetRehab.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetRehab.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRehab.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetRehab.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRehab.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRehab.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRehab.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRehab.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRehab.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetSecuritySnapshot. */
export namespace Qot_GetSecuritySnapshot {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.IC2S);

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.IC2S): Qot_GetSecuritySnapshot.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetSecuritySnapshot.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an EquitySnapshotExData. */
    interface IEquitySnapshotExData {

        /** EquitySnapshotExData issuedShares */
        issuedShares: Long;

        /** EquitySnapshotExData issuedMarketVal */
        issuedMarketVal: number;

        /** EquitySnapshotExData netAsset */
        netAsset: number;

        /** EquitySnapshotExData netProfit */
        netProfit: number;

        /** EquitySnapshotExData earningsPershare */
        earningsPershare: number;

        /** EquitySnapshotExData outstandingShares */
        outstandingShares: Long;

        /** EquitySnapshotExData outstandingMarketVal */
        outstandingMarketVal: number;

        /** EquitySnapshotExData netAssetPershare */
        netAssetPershare: number;

        /** EquitySnapshotExData eyRate */
        eyRate: number;

        /** EquitySnapshotExData peRate */
        peRate: number;

        /** EquitySnapshotExData pbRate */
        pbRate: number;

        /** EquitySnapshotExData peTTMRate */
        peTTMRate: number;

        /** EquitySnapshotExData dividendTTM */
        dividendTTM?: (number|null);

        /** EquitySnapshotExData dividendRatioTTM */
        dividendRatioTTM?: (number|null);

        /** EquitySnapshotExData dividendLFY */
        dividendLFY?: (number|null);

        /** EquitySnapshotExData dividendLFYRatio */
        dividendLFYRatio?: (number|null);
    }

    /** Represents an EquitySnapshotExData. */
    class EquitySnapshotExData implements IEquitySnapshotExData {

        /**
         * Constructs a new EquitySnapshotExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.IEquitySnapshotExData);

        /** EquitySnapshotExData issuedShares. */
        public issuedShares: Long;

        /** EquitySnapshotExData issuedMarketVal. */
        public issuedMarketVal: number;

        /** EquitySnapshotExData netAsset. */
        public netAsset: number;

        /** EquitySnapshotExData netProfit. */
        public netProfit: number;

        /** EquitySnapshotExData earningsPershare. */
        public earningsPershare: number;

        /** EquitySnapshotExData outstandingShares. */
        public outstandingShares: Long;

        /** EquitySnapshotExData outstandingMarketVal. */
        public outstandingMarketVal: number;

        /** EquitySnapshotExData netAssetPershare. */
        public netAssetPershare: number;

        /** EquitySnapshotExData eyRate. */
        public eyRate: number;

        /** EquitySnapshotExData peRate. */
        public peRate: number;

        /** EquitySnapshotExData pbRate. */
        public pbRate: number;

        /** EquitySnapshotExData peTTMRate. */
        public peTTMRate: number;

        /** EquitySnapshotExData dividendTTM. */
        public dividendTTM: number;

        /** EquitySnapshotExData dividendRatioTTM. */
        public dividendRatioTTM: number;

        /** EquitySnapshotExData dividendLFY. */
        public dividendLFY: number;

        /** EquitySnapshotExData dividendLFYRatio. */
        public dividendLFYRatio: number;

        /**
         * Creates a new EquitySnapshotExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EquitySnapshotExData instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.IEquitySnapshotExData): Qot_GetSecuritySnapshot.EquitySnapshotExData;

        /**
         * Encodes the specified EquitySnapshotExData message. Does not implicitly {@link Qot_GetSecuritySnapshot.EquitySnapshotExData.verify|verify} messages.
         * @param message EquitySnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.IEquitySnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EquitySnapshotExData message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.EquitySnapshotExData.verify|verify} messages.
         * @param message EquitySnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.IEquitySnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EquitySnapshotExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EquitySnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.EquitySnapshotExData;

        /**
         * Decodes an EquitySnapshotExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EquitySnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.EquitySnapshotExData;

        /**
         * Verifies an EquitySnapshotExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EquitySnapshotExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EquitySnapshotExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.EquitySnapshotExData;

        /**
         * Creates a plain object from an EquitySnapshotExData message. Also converts values to other types if specified.
         * @param message EquitySnapshotExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.EquitySnapshotExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EquitySnapshotExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for EquitySnapshotExData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a WarrantSnapshotExData. */
    interface IWarrantSnapshotExData {

        /** WarrantSnapshotExData conversionRate */
        conversionRate: number;

        /** WarrantSnapshotExData warrantType */
        warrantType: number;

        /** WarrantSnapshotExData strikePrice */
        strikePrice: number;

        /** WarrantSnapshotExData maturityTime */
        maturityTime: string;

        /** WarrantSnapshotExData endTradeTime */
        endTradeTime: string;

        /** WarrantSnapshotExData owner */
        owner: Qot_Common.ISecurity;

        /** WarrantSnapshotExData recoveryPrice */
        recoveryPrice: number;

        /** WarrantSnapshotExData streetVolumn */
        streetVolumn: Long;

        /** WarrantSnapshotExData issueVolumn */
        issueVolumn: Long;

        /** WarrantSnapshotExData streetRate */
        streetRate: number;

        /** WarrantSnapshotExData delta */
        delta: number;

        /** WarrantSnapshotExData impliedVolatility */
        impliedVolatility: number;

        /** WarrantSnapshotExData premium */
        premium: number;

        /** WarrantSnapshotExData maturityTimestamp */
        maturityTimestamp?: (number|null);

        /** WarrantSnapshotExData endTradeTimestamp */
        endTradeTimestamp?: (number|null);

        /** WarrantSnapshotExData leverage */
        leverage?: (number|null);

        /** WarrantSnapshotExData ipop */
        ipop?: (number|null);

        /** WarrantSnapshotExData breakEvenPoint */
        breakEvenPoint?: (number|null);

        /** WarrantSnapshotExData conversionPrice */
        conversionPrice?: (number|null);

        /** WarrantSnapshotExData priceRecoveryRatio */
        priceRecoveryRatio?: (number|null);

        /** WarrantSnapshotExData score */
        score?: (number|null);

        /** WarrantSnapshotExData upperStrikePrice */
        upperStrikePrice?: (number|null);

        /** WarrantSnapshotExData lowerStrikePrice */
        lowerStrikePrice?: (number|null);

        /** WarrantSnapshotExData inLinePriceStatus */
        inLinePriceStatus?: (number|null);

        /** WarrantSnapshotExData issuerCode */
        issuerCode?: (string|null);
    }

    /** Represents a WarrantSnapshotExData. */
    class WarrantSnapshotExData implements IWarrantSnapshotExData {

        /**
         * Constructs a new WarrantSnapshotExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.IWarrantSnapshotExData);

        /** WarrantSnapshotExData conversionRate. */
        public conversionRate: number;

        /** WarrantSnapshotExData warrantType. */
        public warrantType: number;

        /** WarrantSnapshotExData strikePrice. */
        public strikePrice: number;

        /** WarrantSnapshotExData maturityTime. */
        public maturityTime: string;

        /** WarrantSnapshotExData endTradeTime. */
        public endTradeTime: string;

        /** WarrantSnapshotExData owner. */
        public owner: Qot_Common.ISecurity;

        /** WarrantSnapshotExData recoveryPrice. */
        public recoveryPrice: number;

        /** WarrantSnapshotExData streetVolumn. */
        public streetVolumn: Long;

        /** WarrantSnapshotExData issueVolumn. */
        public issueVolumn: Long;

        /** WarrantSnapshotExData streetRate. */
        public streetRate: number;

        /** WarrantSnapshotExData delta. */
        public delta: number;

        /** WarrantSnapshotExData impliedVolatility. */
        public impliedVolatility: number;

        /** WarrantSnapshotExData premium. */
        public premium: number;

        /** WarrantSnapshotExData maturityTimestamp. */
        public maturityTimestamp: number;

        /** WarrantSnapshotExData endTradeTimestamp. */
        public endTradeTimestamp: number;

        /** WarrantSnapshotExData leverage. */
        public leverage: number;

        /** WarrantSnapshotExData ipop. */
        public ipop: number;

        /** WarrantSnapshotExData breakEvenPoint. */
        public breakEvenPoint: number;

        /** WarrantSnapshotExData conversionPrice. */
        public conversionPrice: number;

        /** WarrantSnapshotExData priceRecoveryRatio. */
        public priceRecoveryRatio: number;

        /** WarrantSnapshotExData score. */
        public score: number;

        /** WarrantSnapshotExData upperStrikePrice. */
        public upperStrikePrice: number;

        /** WarrantSnapshotExData lowerStrikePrice. */
        public lowerStrikePrice: number;

        /** WarrantSnapshotExData inLinePriceStatus. */
        public inLinePriceStatus: number;

        /** WarrantSnapshotExData issuerCode. */
        public issuerCode: string;

        /**
         * Creates a new WarrantSnapshotExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarrantSnapshotExData instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.IWarrantSnapshotExData): Qot_GetSecuritySnapshot.WarrantSnapshotExData;

        /**
         * Encodes the specified WarrantSnapshotExData message. Does not implicitly {@link Qot_GetSecuritySnapshot.WarrantSnapshotExData.verify|verify} messages.
         * @param message WarrantSnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.IWarrantSnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WarrantSnapshotExData message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.WarrantSnapshotExData.verify|verify} messages.
         * @param message WarrantSnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.IWarrantSnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WarrantSnapshotExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarrantSnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.WarrantSnapshotExData;

        /**
         * Decodes a WarrantSnapshotExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarrantSnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.WarrantSnapshotExData;

        /**
         * Verifies a WarrantSnapshotExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarrantSnapshotExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarrantSnapshotExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.WarrantSnapshotExData;

        /**
         * Creates a plain object from a WarrantSnapshotExData message. Also converts values to other types if specified.
         * @param message WarrantSnapshotExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.WarrantSnapshotExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarrantSnapshotExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for WarrantSnapshotExData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an OptionSnapshotExData. */
    interface IOptionSnapshotExData {

        /** OptionSnapshotExData type */
        type: number;

        /** OptionSnapshotExData owner */
        owner: Qot_Common.ISecurity;

        /** OptionSnapshotExData strikeTime */
        strikeTime: string;

        /** OptionSnapshotExData strikePrice */
        strikePrice: number;

        /** OptionSnapshotExData contractSize */
        contractSize: number;

        /** OptionSnapshotExData contractSizeFloat */
        contractSizeFloat?: (number|null);

        /** OptionSnapshotExData openInterest */
        openInterest: number;

        /** OptionSnapshotExData impliedVolatility */
        impliedVolatility: number;

        /** OptionSnapshotExData premium */
        premium: number;

        /** OptionSnapshotExData delta */
        delta: number;

        /** OptionSnapshotExData gamma */
        gamma: number;

        /** OptionSnapshotExData vega */
        vega: number;

        /** OptionSnapshotExData theta */
        theta: number;

        /** OptionSnapshotExData rho */
        rho: number;

        /** OptionSnapshotExData strikeTimestamp */
        strikeTimestamp?: (number|null);

        /** OptionSnapshotExData indexOptionType */
        indexOptionType?: (number|null);

        /** OptionSnapshotExData netOpenInterest */
        netOpenInterest?: (number|null);

        /** OptionSnapshotExData expiryDateDistance */
        expiryDateDistance?: (number|null);

        /** OptionSnapshotExData contractNominalValue */
        contractNominalValue?: (number|null);

        /** OptionSnapshotExData ownerLotMultiplier */
        ownerLotMultiplier?: (number|null);

        /** OptionSnapshotExData optionAreaType */
        optionAreaType?: (number|null);

        /** OptionSnapshotExData contractMultiplier */
        contractMultiplier?: (number|null);
    }

    /** Represents an OptionSnapshotExData. */
    class OptionSnapshotExData implements IOptionSnapshotExData {

        /**
         * Constructs a new OptionSnapshotExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.IOptionSnapshotExData);

        /** OptionSnapshotExData type. */
        public type: number;

        /** OptionSnapshotExData owner. */
        public owner: Qot_Common.ISecurity;

        /** OptionSnapshotExData strikeTime. */
        public strikeTime: string;

        /** OptionSnapshotExData strikePrice. */
        public strikePrice: number;

        /** OptionSnapshotExData contractSize. */
        public contractSize: number;

        /** OptionSnapshotExData contractSizeFloat. */
        public contractSizeFloat: number;

        /** OptionSnapshotExData openInterest. */
        public openInterest: number;

        /** OptionSnapshotExData impliedVolatility. */
        public impliedVolatility: number;

        /** OptionSnapshotExData premium. */
        public premium: number;

        /** OptionSnapshotExData delta. */
        public delta: number;

        /** OptionSnapshotExData gamma. */
        public gamma: number;

        /** OptionSnapshotExData vega. */
        public vega: number;

        /** OptionSnapshotExData theta. */
        public theta: number;

        /** OptionSnapshotExData rho. */
        public rho: number;

        /** OptionSnapshotExData strikeTimestamp. */
        public strikeTimestamp: number;

        /** OptionSnapshotExData indexOptionType. */
        public indexOptionType: number;

        /** OptionSnapshotExData netOpenInterest. */
        public netOpenInterest: number;

        /** OptionSnapshotExData expiryDateDistance. */
        public expiryDateDistance: number;

        /** OptionSnapshotExData contractNominalValue. */
        public contractNominalValue: number;

        /** OptionSnapshotExData ownerLotMultiplier. */
        public ownerLotMultiplier: number;

        /** OptionSnapshotExData optionAreaType. */
        public optionAreaType: number;

        /** OptionSnapshotExData contractMultiplier. */
        public contractMultiplier: number;

        /**
         * Creates a new OptionSnapshotExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OptionSnapshotExData instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.IOptionSnapshotExData): Qot_GetSecuritySnapshot.OptionSnapshotExData;

        /**
         * Encodes the specified OptionSnapshotExData message. Does not implicitly {@link Qot_GetSecuritySnapshot.OptionSnapshotExData.verify|verify} messages.
         * @param message OptionSnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.IOptionSnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OptionSnapshotExData message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.OptionSnapshotExData.verify|verify} messages.
         * @param message OptionSnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.IOptionSnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OptionSnapshotExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OptionSnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.OptionSnapshotExData;

        /**
         * Decodes an OptionSnapshotExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OptionSnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.OptionSnapshotExData;

        /**
         * Verifies an OptionSnapshotExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OptionSnapshotExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OptionSnapshotExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.OptionSnapshotExData;

        /**
         * Creates a plain object from an OptionSnapshotExData message. Also converts values to other types if specified.
         * @param message OptionSnapshotExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.OptionSnapshotExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OptionSnapshotExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for OptionSnapshotExData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an IndexSnapshotExData. */
    interface IIndexSnapshotExData {

        /** IndexSnapshotExData raiseCount */
        raiseCount: number;

        /** IndexSnapshotExData fallCount */
        fallCount: number;

        /** IndexSnapshotExData equalCount */
        equalCount: number;
    }

    /** Represents an IndexSnapshotExData. */
    class IndexSnapshotExData implements IIndexSnapshotExData {

        /**
         * Constructs a new IndexSnapshotExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.IIndexSnapshotExData);

        /** IndexSnapshotExData raiseCount. */
        public raiseCount: number;

        /** IndexSnapshotExData fallCount. */
        public fallCount: number;

        /** IndexSnapshotExData equalCount. */
        public equalCount: number;

        /**
         * Creates a new IndexSnapshotExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IndexSnapshotExData instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.IIndexSnapshotExData): Qot_GetSecuritySnapshot.IndexSnapshotExData;

        /**
         * Encodes the specified IndexSnapshotExData message. Does not implicitly {@link Qot_GetSecuritySnapshot.IndexSnapshotExData.verify|verify} messages.
         * @param message IndexSnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.IIndexSnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IndexSnapshotExData message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.IndexSnapshotExData.verify|verify} messages.
         * @param message IndexSnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.IIndexSnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IndexSnapshotExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IndexSnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.IndexSnapshotExData;

        /**
         * Decodes an IndexSnapshotExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IndexSnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.IndexSnapshotExData;

        /**
         * Verifies an IndexSnapshotExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IndexSnapshotExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IndexSnapshotExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.IndexSnapshotExData;

        /**
         * Creates a plain object from an IndexSnapshotExData message. Also converts values to other types if specified.
         * @param message IndexSnapshotExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.IndexSnapshotExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IndexSnapshotExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for IndexSnapshotExData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a PlateSnapshotExData. */
    interface IPlateSnapshotExData {

        /** PlateSnapshotExData raiseCount */
        raiseCount: number;

        /** PlateSnapshotExData fallCount */
        fallCount: number;

        /** PlateSnapshotExData equalCount */
        equalCount: number;
    }

    /** Represents a PlateSnapshotExData. */
    class PlateSnapshotExData implements IPlateSnapshotExData {

        /**
         * Constructs a new PlateSnapshotExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.IPlateSnapshotExData);

        /** PlateSnapshotExData raiseCount. */
        public raiseCount: number;

        /** PlateSnapshotExData fallCount. */
        public fallCount: number;

        /** PlateSnapshotExData equalCount. */
        public equalCount: number;

        /**
         * Creates a new PlateSnapshotExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlateSnapshotExData instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.IPlateSnapshotExData): Qot_GetSecuritySnapshot.PlateSnapshotExData;

        /**
         * Encodes the specified PlateSnapshotExData message. Does not implicitly {@link Qot_GetSecuritySnapshot.PlateSnapshotExData.verify|verify} messages.
         * @param message PlateSnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.IPlateSnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PlateSnapshotExData message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.PlateSnapshotExData.verify|verify} messages.
         * @param message PlateSnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.IPlateSnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PlateSnapshotExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlateSnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.PlateSnapshotExData;

        /**
         * Decodes a PlateSnapshotExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlateSnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.PlateSnapshotExData;

        /**
         * Verifies a PlateSnapshotExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlateSnapshotExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlateSnapshotExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.PlateSnapshotExData;

        /**
         * Creates a plain object from a PlateSnapshotExData message. Also converts values to other types if specified.
         * @param message PlateSnapshotExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.PlateSnapshotExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlateSnapshotExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for PlateSnapshotExData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a FutureSnapshotExData. */
    interface IFutureSnapshotExData {

        /** FutureSnapshotExData lastSettlePrice */
        lastSettlePrice: number;

        /** FutureSnapshotExData position */
        position: number;

        /** FutureSnapshotExData positionChange */
        positionChange: number;

        /** FutureSnapshotExData lastTradeTime */
        lastTradeTime: string;

        /** FutureSnapshotExData lastTradeTimestamp */
        lastTradeTimestamp?: (number|null);

        /** FutureSnapshotExData isMainContract */
        isMainContract: boolean;
    }

    /** Represents a FutureSnapshotExData. */
    class FutureSnapshotExData implements IFutureSnapshotExData {

        /**
         * Constructs a new FutureSnapshotExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.IFutureSnapshotExData);

        /** FutureSnapshotExData lastSettlePrice. */
        public lastSettlePrice: number;

        /** FutureSnapshotExData position. */
        public position: number;

        /** FutureSnapshotExData positionChange. */
        public positionChange: number;

        /** FutureSnapshotExData lastTradeTime. */
        public lastTradeTime: string;

        /** FutureSnapshotExData lastTradeTimestamp. */
        public lastTradeTimestamp: number;

        /** FutureSnapshotExData isMainContract. */
        public isMainContract: boolean;

        /**
         * Creates a new FutureSnapshotExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FutureSnapshotExData instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.IFutureSnapshotExData): Qot_GetSecuritySnapshot.FutureSnapshotExData;

        /**
         * Encodes the specified FutureSnapshotExData message. Does not implicitly {@link Qot_GetSecuritySnapshot.FutureSnapshotExData.verify|verify} messages.
         * @param message FutureSnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.IFutureSnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FutureSnapshotExData message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.FutureSnapshotExData.verify|verify} messages.
         * @param message FutureSnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.IFutureSnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FutureSnapshotExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FutureSnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.FutureSnapshotExData;

        /**
         * Decodes a FutureSnapshotExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FutureSnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.FutureSnapshotExData;

        /**
         * Verifies a FutureSnapshotExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FutureSnapshotExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FutureSnapshotExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.FutureSnapshotExData;

        /**
         * Creates a plain object from a FutureSnapshotExData message. Also converts values to other types if specified.
         * @param message FutureSnapshotExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.FutureSnapshotExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FutureSnapshotExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for FutureSnapshotExData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a TrustSnapshotExData. */
    interface ITrustSnapshotExData {

        /** TrustSnapshotExData dividendYield */
        dividendYield: number;

        /** TrustSnapshotExData aum */
        aum: number;

        /** TrustSnapshotExData outstandingUnits */
        outstandingUnits: Long;

        /** TrustSnapshotExData netAssetValue */
        netAssetValue: number;

        /** TrustSnapshotExData premium */
        premium: number;

        /** TrustSnapshotExData assetClass */
        assetClass: number;
    }

    /** Represents a TrustSnapshotExData. */
    class TrustSnapshotExData implements ITrustSnapshotExData {

        /**
         * Constructs a new TrustSnapshotExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.ITrustSnapshotExData);

        /** TrustSnapshotExData dividendYield. */
        public dividendYield: number;

        /** TrustSnapshotExData aum. */
        public aum: number;

        /** TrustSnapshotExData outstandingUnits. */
        public outstandingUnits: Long;

        /** TrustSnapshotExData netAssetValue. */
        public netAssetValue: number;

        /** TrustSnapshotExData premium. */
        public premium: number;

        /** TrustSnapshotExData assetClass. */
        public assetClass: number;

        /**
         * Creates a new TrustSnapshotExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrustSnapshotExData instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.ITrustSnapshotExData): Qot_GetSecuritySnapshot.TrustSnapshotExData;

        /**
         * Encodes the specified TrustSnapshotExData message. Does not implicitly {@link Qot_GetSecuritySnapshot.TrustSnapshotExData.verify|verify} messages.
         * @param message TrustSnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.ITrustSnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrustSnapshotExData message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.TrustSnapshotExData.verify|verify} messages.
         * @param message TrustSnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.ITrustSnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrustSnapshotExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrustSnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.TrustSnapshotExData;

        /**
         * Decodes a TrustSnapshotExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrustSnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.TrustSnapshotExData;

        /**
         * Verifies a TrustSnapshotExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrustSnapshotExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrustSnapshotExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.TrustSnapshotExData;

        /**
         * Creates a plain object from a TrustSnapshotExData message. Also converts values to other types if specified.
         * @param message TrustSnapshotExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.TrustSnapshotExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrustSnapshotExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for TrustSnapshotExData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a SnapshotBasicData. */
    interface ISnapshotBasicData {

        /** SnapshotBasicData security */
        security: Qot_Common.ISecurity;

        /** SnapshotBasicData name */
        name?: (string|null);

        /** SnapshotBasicData type */
        type: number;

        /** SnapshotBasicData isSuspend */
        isSuspend: boolean;

        /** SnapshotBasicData listTime */
        listTime: string;

        /** SnapshotBasicData lotSize */
        lotSize: number;

        /** SnapshotBasicData priceSpread */
        priceSpread: number;

        /** SnapshotBasicData updateTime */
        updateTime: string;

        /** SnapshotBasicData highPrice */
        highPrice: number;

        /** SnapshotBasicData openPrice */
        openPrice: number;

        /** SnapshotBasicData lowPrice */
        lowPrice: number;

        /** SnapshotBasicData lastClosePrice */
        lastClosePrice: number;

        /** SnapshotBasicData curPrice */
        curPrice: number;

        /** SnapshotBasicData volume */
        volume: Long;

        /** SnapshotBasicData turnover */
        turnover: number;

        /** SnapshotBasicData turnoverRate */
        turnoverRate: number;

        /** SnapshotBasicData listTimestamp */
        listTimestamp?: (number|null);

        /** SnapshotBasicData updateTimestamp */
        updateTimestamp?: (number|null);

        /** SnapshotBasicData askPrice */
        askPrice?: (number|null);

        /** SnapshotBasicData bidPrice */
        bidPrice?: (number|null);

        /** SnapshotBasicData askVol */
        askVol?: (Long|null);

        /** SnapshotBasicData bidVol */
        bidVol?: (Long|null);

        /** SnapshotBasicData enableMargin */
        enableMargin?: (boolean|null);

        /** SnapshotBasicData mortgageRatio */
        mortgageRatio?: (number|null);

        /** SnapshotBasicData longMarginInitialRatio */
        longMarginInitialRatio?: (number|null);

        /** SnapshotBasicData enableShortSell */
        enableShortSell?: (boolean|null);

        /** SnapshotBasicData shortSellRate */
        shortSellRate?: (number|null);

        /** SnapshotBasicData shortAvailableVolume */
        shortAvailableVolume?: (Long|null);

        /** SnapshotBasicData shortMarginInitialRatio */
        shortMarginInitialRatio?: (number|null);

        /** SnapshotBasicData amplitude */
        amplitude?: (number|null);

        /** SnapshotBasicData avgPrice */
        avgPrice?: (number|null);

        /** SnapshotBasicData bidAskRatio */
        bidAskRatio?: (number|null);

        /** SnapshotBasicData volumeRatio */
        volumeRatio?: (number|null);

        /** SnapshotBasicData highest52WeeksPrice */
        highest52WeeksPrice?: (number|null);

        /** SnapshotBasicData lowest52WeeksPrice */
        lowest52WeeksPrice?: (number|null);

        /** SnapshotBasicData highestHistoryPrice */
        highestHistoryPrice?: (number|null);

        /** SnapshotBasicData lowestHistoryPrice */
        lowestHistoryPrice?: (number|null);

        /** SnapshotBasicData preMarket */
        preMarket?: (Qot_Common.IPreAfterMarketData|null);

        /** SnapshotBasicData afterMarket */
        afterMarket?: (Qot_Common.IPreAfterMarketData|null);

        /** SnapshotBasicData secStatus */
        secStatus?: (number|null);

        /** SnapshotBasicData closePrice5Minute */
        closePrice5Minute?: (number|null);
    }

    /** Represents a SnapshotBasicData. */
    class SnapshotBasicData implements ISnapshotBasicData {

        /**
         * Constructs a new SnapshotBasicData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.ISnapshotBasicData);

        /** SnapshotBasicData security. */
        public security: Qot_Common.ISecurity;

        /** SnapshotBasicData name. */
        public name: string;

        /** SnapshotBasicData type. */
        public type: number;

        /** SnapshotBasicData isSuspend. */
        public isSuspend: boolean;

        /** SnapshotBasicData listTime. */
        public listTime: string;

        /** SnapshotBasicData lotSize. */
        public lotSize: number;

        /** SnapshotBasicData priceSpread. */
        public priceSpread: number;

        /** SnapshotBasicData updateTime. */
        public updateTime: string;

        /** SnapshotBasicData highPrice. */
        public highPrice: number;

        /** SnapshotBasicData openPrice. */
        public openPrice: number;

        /** SnapshotBasicData lowPrice. */
        public lowPrice: number;

        /** SnapshotBasicData lastClosePrice. */
        public lastClosePrice: number;

        /** SnapshotBasicData curPrice. */
        public curPrice: number;

        /** SnapshotBasicData volume. */
        public volume: Long;

        /** SnapshotBasicData turnover. */
        public turnover: number;

        /** SnapshotBasicData turnoverRate. */
        public turnoverRate: number;

        /** SnapshotBasicData listTimestamp. */
        public listTimestamp: number;

        /** SnapshotBasicData updateTimestamp. */
        public updateTimestamp: number;

        /** SnapshotBasicData askPrice. */
        public askPrice: number;

        /** SnapshotBasicData bidPrice. */
        public bidPrice: number;

        /** SnapshotBasicData askVol. */
        public askVol: Long;

        /** SnapshotBasicData bidVol. */
        public bidVol: Long;

        /** SnapshotBasicData enableMargin. */
        public enableMargin: boolean;

        /** SnapshotBasicData mortgageRatio. */
        public mortgageRatio: number;

        /** SnapshotBasicData longMarginInitialRatio. */
        public longMarginInitialRatio: number;

        /** SnapshotBasicData enableShortSell. */
        public enableShortSell: boolean;

        /** SnapshotBasicData shortSellRate. */
        public shortSellRate: number;

        /** SnapshotBasicData shortAvailableVolume. */
        public shortAvailableVolume: Long;

        /** SnapshotBasicData shortMarginInitialRatio. */
        public shortMarginInitialRatio: number;

        /** SnapshotBasicData amplitude. */
        public amplitude: number;

        /** SnapshotBasicData avgPrice. */
        public avgPrice: number;

        /** SnapshotBasicData bidAskRatio. */
        public bidAskRatio: number;

        /** SnapshotBasicData volumeRatio. */
        public volumeRatio: number;

        /** SnapshotBasicData highest52WeeksPrice. */
        public highest52WeeksPrice: number;

        /** SnapshotBasicData lowest52WeeksPrice. */
        public lowest52WeeksPrice: number;

        /** SnapshotBasicData highestHistoryPrice. */
        public highestHistoryPrice: number;

        /** SnapshotBasicData lowestHistoryPrice. */
        public lowestHistoryPrice: number;

        /** SnapshotBasicData preMarket. */
        public preMarket?: (Qot_Common.IPreAfterMarketData|null);

        /** SnapshotBasicData afterMarket. */
        public afterMarket?: (Qot_Common.IPreAfterMarketData|null);

        /** SnapshotBasicData secStatus. */
        public secStatus: number;

        /** SnapshotBasicData closePrice5Minute. */
        public closePrice5Minute: number;

        /**
         * Creates a new SnapshotBasicData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SnapshotBasicData instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.ISnapshotBasicData): Qot_GetSecuritySnapshot.SnapshotBasicData;

        /**
         * Encodes the specified SnapshotBasicData message. Does not implicitly {@link Qot_GetSecuritySnapshot.SnapshotBasicData.verify|verify} messages.
         * @param message SnapshotBasicData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.ISnapshotBasicData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SnapshotBasicData message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.SnapshotBasicData.verify|verify} messages.
         * @param message SnapshotBasicData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.ISnapshotBasicData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SnapshotBasicData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SnapshotBasicData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.SnapshotBasicData;

        /**
         * Decodes a SnapshotBasicData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SnapshotBasicData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.SnapshotBasicData;

        /**
         * Verifies a SnapshotBasicData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SnapshotBasicData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SnapshotBasicData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.SnapshotBasicData;

        /**
         * Creates a plain object from a SnapshotBasicData message. Also converts values to other types if specified.
         * @param message SnapshotBasicData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.SnapshotBasicData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SnapshotBasicData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for SnapshotBasicData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Snapshot. */
    interface ISnapshot {

        /** Snapshot basic */
        basic: Qot_GetSecuritySnapshot.ISnapshotBasicData;

        /** Snapshot equityExData */
        equityExData?: (Qot_GetSecuritySnapshot.IEquitySnapshotExData|null);

        /** Snapshot warrantExData */
        warrantExData?: (Qot_GetSecuritySnapshot.IWarrantSnapshotExData|null);

        /** Snapshot optionExData */
        optionExData?: (Qot_GetSecuritySnapshot.IOptionSnapshotExData|null);

        /** Snapshot indexExData */
        indexExData?: (Qot_GetSecuritySnapshot.IIndexSnapshotExData|null);

        /** Snapshot plateExData */
        plateExData?: (Qot_GetSecuritySnapshot.IPlateSnapshotExData|null);

        /** Snapshot futureExData */
        futureExData?: (Qot_GetSecuritySnapshot.IFutureSnapshotExData|null);

        /** Snapshot trustExData */
        trustExData?: (Qot_GetSecuritySnapshot.ITrustSnapshotExData|null);
    }

    /** Represents a Snapshot. */
    class Snapshot implements ISnapshot {

        /**
         * Constructs a new Snapshot.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.ISnapshot);

        /** Snapshot basic. */
        public basic: Qot_GetSecuritySnapshot.ISnapshotBasicData;

        /** Snapshot equityExData. */
        public equityExData?: (Qot_GetSecuritySnapshot.IEquitySnapshotExData|null);

        /** Snapshot warrantExData. */
        public warrantExData?: (Qot_GetSecuritySnapshot.IWarrantSnapshotExData|null);

        /** Snapshot optionExData. */
        public optionExData?: (Qot_GetSecuritySnapshot.IOptionSnapshotExData|null);

        /** Snapshot indexExData. */
        public indexExData?: (Qot_GetSecuritySnapshot.IIndexSnapshotExData|null);

        /** Snapshot plateExData. */
        public plateExData?: (Qot_GetSecuritySnapshot.IPlateSnapshotExData|null);

        /** Snapshot futureExData. */
        public futureExData?: (Qot_GetSecuritySnapshot.IFutureSnapshotExData|null);

        /** Snapshot trustExData. */
        public trustExData?: (Qot_GetSecuritySnapshot.ITrustSnapshotExData|null);

        /**
         * Creates a new Snapshot instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Snapshot instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.ISnapshot): Qot_GetSecuritySnapshot.Snapshot;

        /**
         * Encodes the specified Snapshot message. Does not implicitly {@link Qot_GetSecuritySnapshot.Snapshot.verify|verify} messages.
         * @param message Snapshot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.ISnapshot, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Snapshot message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.Snapshot.verify|verify} messages.
         * @param message Snapshot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.ISnapshot, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Snapshot message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Snapshot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.Snapshot;

        /**
         * Decodes a Snapshot message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Snapshot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.Snapshot;

        /**
         * Verifies a Snapshot message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Snapshot message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Snapshot
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.Snapshot;

        /**
         * Creates a plain object from a Snapshot message. Also converts values to other types if specified.
         * @param message Snapshot
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.Snapshot, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Snapshot to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Snapshot
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C snapshotList */
        snapshotList?: (Qot_GetSecuritySnapshot.ISnapshot[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.IS2C);

        /** S2C snapshotList. */
        public snapshotList: Qot_GetSecuritySnapshot.ISnapshot[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.IS2C): Qot_GetSecuritySnapshot.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetSecuritySnapshot.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetSecuritySnapshot.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetSecuritySnapshot.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.IRequest): Qot_GetSecuritySnapshot.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetSecuritySnapshot.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetSecuritySnapshot.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetSecuritySnapshot.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.IResponse): Qot_GetSecuritySnapshot.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetSecuritySnapshot.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetStaticInfo. */
export namespace Qot_GetStaticInfo {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S market */
        market?: (number|null);

        /** C2S secType */
        secType?: (number|null);

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetStaticInfo.IC2S);

        /** C2S market. */
        public market: number;

        /** C2S secType. */
        public secType: number;

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetStaticInfo.IC2S): Qot_GetStaticInfo.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetStaticInfo.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetStaticInfo.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetStaticInfo.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetStaticInfo.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetStaticInfo.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetStaticInfo.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetStaticInfo.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetStaticInfo.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C staticInfoList */
        staticInfoList?: (Qot_Common.ISecurityStaticInfo[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetStaticInfo.IS2C);

        /** S2C staticInfoList. */
        public staticInfoList: Qot_Common.ISecurityStaticInfo[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetStaticInfo.IS2C): Qot_GetStaticInfo.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetStaticInfo.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetStaticInfo.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetStaticInfo.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetStaticInfo.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetStaticInfo.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetStaticInfo.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetStaticInfo.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetStaticInfo.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetStaticInfo.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetStaticInfo.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetStaticInfo.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetStaticInfo.IRequest): Qot_GetStaticInfo.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetStaticInfo.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetStaticInfo.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetStaticInfo.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetStaticInfo.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetStaticInfo.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetStaticInfo.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetStaticInfo.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetStaticInfo.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetStaticInfo.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetStaticInfo.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetStaticInfo.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetStaticInfo.IResponse): Qot_GetStaticInfo.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetStaticInfo.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetStaticInfo.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetStaticInfo.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetStaticInfo.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetStaticInfo.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetStaticInfo.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetStaticInfo.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetStaticInfo.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetSubInfo. */
export namespace Qot_GetSubInfo {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S isReqAllConn */
        isReqAllConn?: (boolean|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSubInfo.IC2S);

        /** C2S isReqAllConn. */
        public isReqAllConn: boolean;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetSubInfo.IC2S): Qot_GetSubInfo.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetSubInfo.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSubInfo.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetSubInfo.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSubInfo.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSubInfo.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSubInfo.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSubInfo.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSubInfo.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C connSubInfoList */
        connSubInfoList?: (Qot_Common.IConnSubInfo[]|null);

        /** S2C totalUsedQuota */
        totalUsedQuota: number;

        /** S2C remainQuota */
        remainQuota: number;
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSubInfo.IS2C);

        /** S2C connSubInfoList. */
        public connSubInfoList: Qot_Common.IConnSubInfo[];

        /** S2C totalUsedQuota. */
        public totalUsedQuota: number;

        /** S2C remainQuota. */
        public remainQuota: number;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetSubInfo.IS2C): Qot_GetSubInfo.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetSubInfo.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSubInfo.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetSubInfo.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSubInfo.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSubInfo.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSubInfo.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSubInfo.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSubInfo.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetSubInfo.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSubInfo.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetSubInfo.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetSubInfo.IRequest): Qot_GetSubInfo.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetSubInfo.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSubInfo.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetSubInfo.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSubInfo.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSubInfo.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSubInfo.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSubInfo.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSubInfo.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetSubInfo.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSubInfo.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetSubInfo.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetSubInfo.IResponse): Qot_GetSubInfo.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetSubInfo.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSubInfo.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetSubInfo.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSubInfo.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSubInfo.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSubInfo.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSubInfo.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSubInfo.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetSuspend. */
export namespace Qot_GetSuspend {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);

        /** C2S beginTime */
        beginTime: string;

        /** C2S endTime */
        endTime: string;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSuspend.IC2S);

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /** C2S beginTime. */
        public beginTime: string;

        /** C2S endTime. */
        public endTime: string;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetSuspend.IC2S): Qot_GetSuspend.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetSuspend.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSuspend.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetSuspend.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSuspend.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSuspend.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSuspend.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSuspend.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSuspend.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Suspend. */
    interface ISuspend {

        /** Suspend time */
        time: string;

        /** Suspend timestamp */
        timestamp?: (number|null);
    }

    /** Represents a Suspend. */
    class Suspend implements ISuspend {

        /**
         * Constructs a new Suspend.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSuspend.ISuspend);

        /** Suspend time. */
        public time: string;

        /** Suspend timestamp. */
        public timestamp: number;

        /**
         * Creates a new Suspend instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Suspend instance
         */
        public static create(properties?: Qot_GetSuspend.ISuspend): Qot_GetSuspend.Suspend;

        /**
         * Encodes the specified Suspend message. Does not implicitly {@link Qot_GetSuspend.Suspend.verify|verify} messages.
         * @param message Suspend message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSuspend.ISuspend, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Suspend message, length delimited. Does not implicitly {@link Qot_GetSuspend.Suspend.verify|verify} messages.
         * @param message Suspend message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSuspend.ISuspend, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Suspend message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Suspend
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSuspend.Suspend;

        /**
         * Decodes a Suspend message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Suspend
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSuspend.Suspend;

        /**
         * Verifies a Suspend message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Suspend message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Suspend
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSuspend.Suspend;

        /**
         * Creates a plain object from a Suspend message. Also converts values to other types if specified.
         * @param message Suspend
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSuspend.Suspend, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Suspend to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Suspend
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a SecuritySuspend. */
    interface ISecuritySuspend {

        /** SecuritySuspend security */
        security: Qot_Common.ISecurity;

        /** SecuritySuspend suspendList */
        suspendList?: (Qot_GetSuspend.ISuspend[]|null);
    }

    /** Represents a SecuritySuspend. */
    class SecuritySuspend implements ISecuritySuspend {

        /**
         * Constructs a new SecuritySuspend.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSuspend.ISecuritySuspend);

        /** SecuritySuspend security. */
        public security: Qot_Common.ISecurity;

        /** SecuritySuspend suspendList. */
        public suspendList: Qot_GetSuspend.ISuspend[];

        /**
         * Creates a new SecuritySuspend instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecuritySuspend instance
         */
        public static create(properties?: Qot_GetSuspend.ISecuritySuspend): Qot_GetSuspend.SecuritySuspend;

        /**
         * Encodes the specified SecuritySuspend message. Does not implicitly {@link Qot_GetSuspend.SecuritySuspend.verify|verify} messages.
         * @param message SecuritySuspend message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSuspend.ISecuritySuspend, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecuritySuspend message, length delimited. Does not implicitly {@link Qot_GetSuspend.SecuritySuspend.verify|verify} messages.
         * @param message SecuritySuspend message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSuspend.ISecuritySuspend, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecuritySuspend message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecuritySuspend
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSuspend.SecuritySuspend;

        /**
         * Decodes a SecuritySuspend message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecuritySuspend
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSuspend.SecuritySuspend;

        /**
         * Verifies a SecuritySuspend message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecuritySuspend message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecuritySuspend
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSuspend.SecuritySuspend;

        /**
         * Creates a plain object from a SecuritySuspend message. Also converts values to other types if specified.
         * @param message SecuritySuspend
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSuspend.SecuritySuspend, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecuritySuspend to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for SecuritySuspend
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C SecuritySuspendList */
        SecuritySuspendList?: (Qot_GetSuspend.ISecuritySuspend[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSuspend.IS2C);

        /** S2C SecuritySuspendList. */
        public SecuritySuspendList: Qot_GetSuspend.ISecuritySuspend[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetSuspend.IS2C): Qot_GetSuspend.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetSuspend.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSuspend.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetSuspend.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSuspend.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSuspend.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSuspend.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSuspend.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSuspend.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetSuspend.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSuspend.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetSuspend.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetSuspend.IRequest): Qot_GetSuspend.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetSuspend.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSuspend.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetSuspend.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSuspend.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSuspend.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSuspend.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSuspend.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSuspend.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetSuspend.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSuspend.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetSuspend.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetSuspend.IResponse): Qot_GetSuspend.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetSuspend.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSuspend.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetSuspend.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSuspend.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSuspend.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSuspend.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSuspend.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSuspend.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetTicker. */
export namespace Qot_GetTicker {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;

        /** C2S maxRetNum */
        maxRetNum: number;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetTicker.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /** C2S maxRetNum. */
        public maxRetNum: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetTicker.IC2S): Qot_GetTicker.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetTicker.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetTicker.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetTicker.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetTicker.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetTicker.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetTicker.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetTicker.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetTicker.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C name */
        name?: (string|null);

        /** S2C tickerList */
        tickerList?: (Qot_Common.ITicker[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetTicker.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C name. */
        public name: string;

        /** S2C tickerList. */
        public tickerList: Qot_Common.ITicker[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetTicker.IS2C): Qot_GetTicker.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetTicker.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetTicker.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetTicker.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetTicker.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetTicker.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetTicker.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetTicker.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetTicker.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetTicker.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetTicker.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetTicker.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetTicker.IRequest): Qot_GetTicker.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetTicker.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetTicker.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetTicker.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetTicker.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetTicker.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetTicker.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetTicker.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetTicker.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetTicker.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetTicker.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetTicker.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetTicker.IResponse): Qot_GetTicker.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetTicker.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetTicker.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetTicker.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetTicker.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetTicker.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetTicker.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetTicker.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetTicker.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetUserSecurity. */
export namespace Qot_GetUserSecurity {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S groupName */
        groupName: string;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetUserSecurity.IC2S);

        /** C2S groupName. */
        public groupName: string;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetUserSecurity.IC2S): Qot_GetUserSecurity.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetUserSecurity.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetUserSecurity.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetUserSecurity.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetUserSecurity.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetUserSecurity.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetUserSecurity.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetUserSecurity.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetUserSecurity.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C staticInfoList */
        staticInfoList?: (Qot_Common.ISecurityStaticInfo[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetUserSecurity.IS2C);

        /** S2C staticInfoList. */
        public staticInfoList: Qot_Common.ISecurityStaticInfo[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetUserSecurity.IS2C): Qot_GetUserSecurity.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetUserSecurity.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetUserSecurity.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetUserSecurity.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetUserSecurity.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetUserSecurity.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetUserSecurity.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetUserSecurity.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetUserSecurity.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetUserSecurity.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetUserSecurity.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetUserSecurity.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetUserSecurity.IRequest): Qot_GetUserSecurity.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetUserSecurity.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetUserSecurity.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetUserSecurity.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetUserSecurity.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetUserSecurity.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetUserSecurity.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetUserSecurity.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetUserSecurity.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetUserSecurity.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetUserSecurity.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetUserSecurity.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetUserSecurity.IResponse): Qot_GetUserSecurity.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetUserSecurity.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetUserSecurity.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetUserSecurity.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetUserSecurity.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetUserSecurity.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetUserSecurity.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetUserSecurity.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetUserSecurity.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetUserSecurityGroup. */
export namespace Qot_GetUserSecurityGroup {

    /** GroupType enum. */
    enum GroupType {
        GroupType_Unknown = 0,
        GroupType_Custom = 1,
        GroupType_System = 2,
        GroupType_All = 3
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S groupType */
        groupType: number;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetUserSecurityGroup.IC2S);

        /** C2S groupType. */
        public groupType: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetUserSecurityGroup.IC2S): Qot_GetUserSecurityGroup.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetUserSecurityGroup.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetUserSecurityGroup.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetUserSecurityGroup.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetUserSecurityGroup.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetUserSecurityGroup.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetUserSecurityGroup.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetUserSecurityGroup.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetUserSecurityGroup.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a GroupData. */
    interface IGroupData {

        /** GroupData groupName */
        groupName: string;

        /** GroupData groupType */
        groupType: number;
    }

    /** Represents a GroupData. */
    class GroupData implements IGroupData {

        /**
         * Constructs a new GroupData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetUserSecurityGroup.IGroupData);

        /** GroupData groupName. */
        public groupName: string;

        /** GroupData groupType. */
        public groupType: number;

        /**
         * Creates a new GroupData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GroupData instance
         */
        public static create(properties?: Qot_GetUserSecurityGroup.IGroupData): Qot_GetUserSecurityGroup.GroupData;

        /**
         * Encodes the specified GroupData message. Does not implicitly {@link Qot_GetUserSecurityGroup.GroupData.verify|verify} messages.
         * @param message GroupData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetUserSecurityGroup.IGroupData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GroupData message, length delimited. Does not implicitly {@link Qot_GetUserSecurityGroup.GroupData.verify|verify} messages.
         * @param message GroupData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetUserSecurityGroup.IGroupData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GroupData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GroupData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetUserSecurityGroup.GroupData;

        /**
         * Decodes a GroupData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GroupData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetUserSecurityGroup.GroupData;

        /**
         * Verifies a GroupData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GroupData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GroupData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetUserSecurityGroup.GroupData;

        /**
         * Creates a plain object from a GroupData message. Also converts values to other types if specified.
         * @param message GroupData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetUserSecurityGroup.GroupData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GroupData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for GroupData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C groupList */
        groupList?: (Qot_GetUserSecurityGroup.IGroupData[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetUserSecurityGroup.IS2C);

        /** S2C groupList. */
        public groupList: Qot_GetUserSecurityGroup.IGroupData[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetUserSecurityGroup.IS2C): Qot_GetUserSecurityGroup.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetUserSecurityGroup.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetUserSecurityGroup.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetUserSecurityGroup.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetUserSecurityGroup.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetUserSecurityGroup.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetUserSecurityGroup.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetUserSecurityGroup.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetUserSecurityGroup.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetUserSecurityGroup.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetUserSecurityGroup.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetUserSecurityGroup.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetUserSecurityGroup.IRequest): Qot_GetUserSecurityGroup.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetUserSecurityGroup.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetUserSecurityGroup.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetUserSecurityGroup.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetUserSecurityGroup.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetUserSecurityGroup.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetUserSecurityGroup.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetUserSecurityGroup.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetUserSecurityGroup.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetUserSecurityGroup.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetUserSecurityGroup.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetUserSecurityGroup.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetUserSecurityGroup.IResponse): Qot_GetUserSecurityGroup.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetUserSecurityGroup.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetUserSecurityGroup.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetUserSecurityGroup.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetUserSecurityGroup.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetUserSecurityGroup.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetUserSecurityGroup.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetUserSecurityGroup.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetUserSecurityGroup.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_GetWarrant. */
export namespace Qot_GetWarrant {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S begin */
        begin: number;

        /** C2S num */
        num: number;

        /** C2S sortField */
        sortField: number;

        /** C2S ascend */
        ascend: boolean;

        /** C2S owner */
        owner?: (Qot_Common.ISecurity|null);

        /** C2S typeList */
        typeList?: (number[]|null);

        /** C2S issuerList */
        issuerList?: (number[]|null);

        /** C2S maturityTimeMin */
        maturityTimeMin?: (string|null);

        /** C2S maturityTimeMax */
        maturityTimeMax?: (string|null);

        /** C2S ipoPeriod */
        ipoPeriod?: (number|null);

        /** C2S priceType */
        priceType?: (number|null);

        /** C2S status */
        status?: (number|null);

        /** C2S curPriceMin */
        curPriceMin?: (number|null);

        /** C2S curPriceMax */
        curPriceMax?: (number|null);

        /** C2S strikePriceMin */
        strikePriceMin?: (number|null);

        /** C2S strikePriceMax */
        strikePriceMax?: (number|null);

        /** C2S streetMin */
        streetMin?: (number|null);

        /** C2S streetMax */
        streetMax?: (number|null);

        /** C2S conversionMin */
        conversionMin?: (number|null);

        /** C2S conversionMax */
        conversionMax?: (number|null);

        /** C2S volMin */
        volMin?: (Long|null);

        /** C2S volMax */
        volMax?: (Long|null);

        /** C2S premiumMin */
        premiumMin?: (number|null);

        /** C2S premiumMax */
        premiumMax?: (number|null);

        /** C2S leverageRatioMin */
        leverageRatioMin?: (number|null);

        /** C2S leverageRatioMax */
        leverageRatioMax?: (number|null);

        /** C2S deltaMin */
        deltaMin?: (number|null);

        /** C2S deltaMax */
        deltaMax?: (number|null);

        /** C2S impliedMin */
        impliedMin?: (number|null);

        /** C2S impliedMax */
        impliedMax?: (number|null);

        /** C2S recoveryPriceMin */
        recoveryPriceMin?: (number|null);

        /** C2S recoveryPriceMax */
        recoveryPriceMax?: (number|null);

        /** C2S priceRecoveryRatioMin */
        priceRecoveryRatioMin?: (number|null);

        /** C2S priceRecoveryRatioMax */
        priceRecoveryRatioMax?: (number|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetWarrant.IC2S);

        /** C2S begin. */
        public begin: number;

        /** C2S num. */
        public num: number;

        /** C2S sortField. */
        public sortField: number;

        /** C2S ascend. */
        public ascend: boolean;

        /** C2S owner. */
        public owner?: (Qot_Common.ISecurity|null);

        /** C2S typeList. */
        public typeList: number[];

        /** C2S issuerList. */
        public issuerList: number[];

        /** C2S maturityTimeMin. */
        public maturityTimeMin: string;

        /** C2S maturityTimeMax. */
        public maturityTimeMax: string;

        /** C2S ipoPeriod. */
        public ipoPeriod: number;

        /** C2S priceType. */
        public priceType: number;

        /** C2S status. */
        public status: number;

        /** C2S curPriceMin. */
        public curPriceMin: number;

        /** C2S curPriceMax. */
        public curPriceMax: number;

        /** C2S strikePriceMin. */
        public strikePriceMin: number;

        /** C2S strikePriceMax. */
        public strikePriceMax: number;

        /** C2S streetMin. */
        public streetMin: number;

        /** C2S streetMax. */
        public streetMax: number;

        /** C2S conversionMin. */
        public conversionMin: number;

        /** C2S conversionMax. */
        public conversionMax: number;

        /** C2S volMin. */
        public volMin: Long;

        /** C2S volMax. */
        public volMax: Long;

        /** C2S premiumMin. */
        public premiumMin: number;

        /** C2S premiumMax. */
        public premiumMax: number;

        /** C2S leverageRatioMin. */
        public leverageRatioMin: number;

        /** C2S leverageRatioMax. */
        public leverageRatioMax: number;

        /** C2S deltaMin. */
        public deltaMin: number;

        /** C2S deltaMax. */
        public deltaMax: number;

        /** C2S impliedMin. */
        public impliedMin: number;

        /** C2S impliedMax. */
        public impliedMax: number;

        /** C2S recoveryPriceMin. */
        public recoveryPriceMin: number;

        /** C2S recoveryPriceMax. */
        public recoveryPriceMax: number;

        /** C2S priceRecoveryRatioMin. */
        public priceRecoveryRatioMin: number;

        /** C2S priceRecoveryRatioMax. */
        public priceRecoveryRatioMax: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetWarrant.IC2S): Qot_GetWarrant.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetWarrant.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetWarrant.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetWarrant.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetWarrant.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetWarrant.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetWarrant.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetWarrant.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetWarrant.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a WarrantData. */
    interface IWarrantData {

        /** WarrantData stock */
        stock: Qot_Common.ISecurity;

        /** WarrantData owner */
        owner: Qot_Common.ISecurity;

        /** WarrantData type */
        type: number;

        /** WarrantData issuer */
        issuer: number;

        /** WarrantData maturityTime */
        maturityTime: string;

        /** WarrantData maturityTimestamp */
        maturityTimestamp?: (number|null);

        /** WarrantData listTime */
        listTime: string;

        /** WarrantData listTimestamp */
        listTimestamp?: (number|null);

        /** WarrantData lastTradeTime */
        lastTradeTime: string;

        /** WarrantData lastTradeTimestamp */
        lastTradeTimestamp?: (number|null);

        /** WarrantData recoveryPrice */
        recoveryPrice?: (number|null);

        /** WarrantData conversionRatio */
        conversionRatio: number;

        /** WarrantData lotSize */
        lotSize: number;

        /** WarrantData strikePrice */
        strikePrice: number;

        /** WarrantData lastClosePrice */
        lastClosePrice: number;

        /** WarrantData name */
        name: string;

        /** WarrantData curPrice */
        curPrice: number;

        /** WarrantData priceChangeVal */
        priceChangeVal: number;

        /** WarrantData changeRate */
        changeRate: number;

        /** WarrantData status */
        status: number;

        /** WarrantData bidPrice */
        bidPrice: number;

        /** WarrantData askPrice */
        askPrice: number;

        /** WarrantData bidVol */
        bidVol: Long;

        /** WarrantData askVol */
        askVol: Long;

        /** WarrantData volume */
        volume: Long;

        /** WarrantData turnover */
        turnover: number;

        /** WarrantData score */
        score: number;

        /** WarrantData premium */
        premium: number;

        /** WarrantData breakEvenPoint */
        breakEvenPoint: number;

        /** WarrantData leverage */
        leverage: number;

        /** WarrantData ipop */
        ipop: number;

        /** WarrantData priceRecoveryRatio */
        priceRecoveryRatio?: (number|null);

        /** WarrantData conversionPrice */
        conversionPrice: number;

        /** WarrantData streetRate */
        streetRate: number;

        /** WarrantData streetVol */
        streetVol: Long;

        /** WarrantData amplitude */
        amplitude: number;

        /** WarrantData issueSize */
        issueSize: Long;

        /** WarrantData highPrice */
        highPrice: number;

        /** WarrantData lowPrice */
        lowPrice: number;

        /** WarrantData impliedVolatility */
        impliedVolatility?: (number|null);

        /** WarrantData delta */
        delta?: (number|null);

        /** WarrantData effectiveLeverage */
        effectiveLeverage: number;

        /** WarrantData upperStrikePrice */
        upperStrikePrice?: (number|null);

        /** WarrantData lowerStrikePrice */
        lowerStrikePrice?: (number|null);

        /** WarrantData inLinePriceStatus */
        inLinePriceStatus?: (number|null);
    }

    /** Represents a WarrantData. */
    class WarrantData implements IWarrantData {

        /**
         * Constructs a new WarrantData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetWarrant.IWarrantData);

        /** WarrantData stock. */
        public stock: Qot_Common.ISecurity;

        /** WarrantData owner. */
        public owner: Qot_Common.ISecurity;

        /** WarrantData type. */
        public type: number;

        /** WarrantData issuer. */
        public issuer: number;

        /** WarrantData maturityTime. */
        public maturityTime: string;

        /** WarrantData maturityTimestamp. */
        public maturityTimestamp: number;

        /** WarrantData listTime. */
        public listTime: string;

        /** WarrantData listTimestamp. */
        public listTimestamp: number;

        /** WarrantData lastTradeTime. */
        public lastTradeTime: string;

        /** WarrantData lastTradeTimestamp. */
        public lastTradeTimestamp: number;

        /** WarrantData recoveryPrice. */
        public recoveryPrice: number;

        /** WarrantData conversionRatio. */
        public conversionRatio: number;

        /** WarrantData lotSize. */
        public lotSize: number;

        /** WarrantData strikePrice. */
        public strikePrice: number;

        /** WarrantData lastClosePrice. */
        public lastClosePrice: number;

        /** WarrantData name. */
        public name: string;

        /** WarrantData curPrice. */
        public curPrice: number;

        /** WarrantData priceChangeVal. */
        public priceChangeVal: number;

        /** WarrantData changeRate. */
        public changeRate: number;

        /** WarrantData status. */
        public status: number;

        /** WarrantData bidPrice. */
        public bidPrice: number;

        /** WarrantData askPrice. */
        public askPrice: number;

        /** WarrantData bidVol. */
        public bidVol: Long;

        /** WarrantData askVol. */
        public askVol: Long;

        /** WarrantData volume. */
        public volume: Long;

        /** WarrantData turnover. */
        public turnover: number;

        /** WarrantData score. */
        public score: number;

        /** WarrantData premium. */
        public premium: number;

        /** WarrantData breakEvenPoint. */
        public breakEvenPoint: number;

        /** WarrantData leverage. */
        public leverage: number;

        /** WarrantData ipop. */
        public ipop: number;

        /** WarrantData priceRecoveryRatio. */
        public priceRecoveryRatio: number;

        /** WarrantData conversionPrice. */
        public conversionPrice: number;

        /** WarrantData streetRate. */
        public streetRate: number;

        /** WarrantData streetVol. */
        public streetVol: Long;

        /** WarrantData amplitude. */
        public amplitude: number;

        /** WarrantData issueSize. */
        public issueSize: Long;

        /** WarrantData highPrice. */
        public highPrice: number;

        /** WarrantData lowPrice. */
        public lowPrice: number;

        /** WarrantData impliedVolatility. */
        public impliedVolatility: number;

        /** WarrantData delta. */
        public delta: number;

        /** WarrantData effectiveLeverage. */
        public effectiveLeverage: number;

        /** WarrantData upperStrikePrice. */
        public upperStrikePrice: number;

        /** WarrantData lowerStrikePrice. */
        public lowerStrikePrice: number;

        /** WarrantData inLinePriceStatus. */
        public inLinePriceStatus: number;

        /**
         * Creates a new WarrantData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarrantData instance
         */
        public static create(properties?: Qot_GetWarrant.IWarrantData): Qot_GetWarrant.WarrantData;

        /**
         * Encodes the specified WarrantData message. Does not implicitly {@link Qot_GetWarrant.WarrantData.verify|verify} messages.
         * @param message WarrantData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetWarrant.IWarrantData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WarrantData message, length delimited. Does not implicitly {@link Qot_GetWarrant.WarrantData.verify|verify} messages.
         * @param message WarrantData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetWarrant.IWarrantData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WarrantData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarrantData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetWarrant.WarrantData;

        /**
         * Decodes a WarrantData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarrantData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetWarrant.WarrantData;

        /**
         * Verifies a WarrantData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarrantData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarrantData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetWarrant.WarrantData;

        /**
         * Creates a plain object from a WarrantData message. Also converts values to other types if specified.
         * @param message WarrantData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetWarrant.WarrantData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarrantData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for WarrantData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C lastPage */
        lastPage: boolean;

        /** S2C allCount */
        allCount: number;

        /** S2C warrantDataList */
        warrantDataList?: (Qot_GetWarrant.IWarrantData[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetWarrant.IS2C);

        /** S2C lastPage. */
        public lastPage: boolean;

        /** S2C allCount. */
        public allCount: number;

        /** S2C warrantDataList. */
        public warrantDataList: Qot_GetWarrant.IWarrantData[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetWarrant.IS2C): Qot_GetWarrant.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetWarrant.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetWarrant.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetWarrant.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetWarrant.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetWarrant.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetWarrant.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetWarrant.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetWarrant.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetWarrant.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetWarrant.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetWarrant.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetWarrant.IRequest): Qot_GetWarrant.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetWarrant.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetWarrant.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetWarrant.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetWarrant.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetWarrant.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetWarrant.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetWarrant.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetWarrant.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetWarrant.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetWarrant.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetWarrant.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetWarrant.IResponse): Qot_GetWarrant.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetWarrant.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetWarrant.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetWarrant.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetWarrant.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetWarrant.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetWarrant.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetWarrant.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetWarrant.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_ModifyUserSecurity. */
export namespace Qot_ModifyUserSecurity {

    /** ModifyUserSecurityOp enum. */
    enum ModifyUserSecurityOp {
        ModifyUserSecurityOp_Unknown = 0,
        ModifyUserSecurityOp_Add = 1,
        ModifyUserSecurityOp_Del = 2,
        ModifyUserSecurityOp_MoveOut = 3
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S groupName */
        groupName: string;

        /** C2S op */
        op: number;

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_ModifyUserSecurity.IC2S);

        /** C2S groupName. */
        public groupName: string;

        /** C2S op. */
        public op: number;

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_ModifyUserSecurity.IC2S): Qot_ModifyUserSecurity.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_ModifyUserSecurity.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_ModifyUserSecurity.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_ModifyUserSecurity.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_ModifyUserSecurity.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_ModifyUserSecurity.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_ModifyUserSecurity.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_ModifyUserSecurity.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_ModifyUserSecurity.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_ModifyUserSecurity.IS2C);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_ModifyUserSecurity.IS2C): Qot_ModifyUserSecurity.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_ModifyUserSecurity.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_ModifyUserSecurity.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_ModifyUserSecurity.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_ModifyUserSecurity.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_ModifyUserSecurity.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_ModifyUserSecurity.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_ModifyUserSecurity.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_ModifyUserSecurity.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_ModifyUserSecurity.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_ModifyUserSecurity.IRequest);

        /** Request c2s. */
        public c2s: Qot_ModifyUserSecurity.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_ModifyUserSecurity.IRequest): Qot_ModifyUserSecurity.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_ModifyUserSecurity.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_ModifyUserSecurity.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_ModifyUserSecurity.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_ModifyUserSecurity.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_ModifyUserSecurity.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_ModifyUserSecurity.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_ModifyUserSecurity.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_ModifyUserSecurity.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_ModifyUserSecurity.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_ModifyUserSecurity.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_ModifyUserSecurity.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_ModifyUserSecurity.IResponse): Qot_ModifyUserSecurity.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_ModifyUserSecurity.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_ModifyUserSecurity.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_ModifyUserSecurity.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_ModifyUserSecurity.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_ModifyUserSecurity.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_ModifyUserSecurity.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_ModifyUserSecurity.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_ModifyUserSecurity.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_RegQotPush. */
export namespace Qot_RegQotPush {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);

        /** C2S subTypeList */
        subTypeList?: (number[]|null);

        /** C2S rehabTypeList */
        rehabTypeList?: (number[]|null);

        /** C2S isRegOrUnReg */
        isRegOrUnReg: boolean;

        /** C2S isFirstPush */
        isFirstPush?: (boolean|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RegQotPush.IC2S);

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /** C2S subTypeList. */
        public subTypeList: number[];

        /** C2S rehabTypeList. */
        public rehabTypeList: number[];

        /** C2S isRegOrUnReg. */
        public isRegOrUnReg: boolean;

        /** C2S isFirstPush. */
        public isFirstPush: boolean;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_RegQotPush.IC2S): Qot_RegQotPush.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_RegQotPush.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RegQotPush.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_RegQotPush.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RegQotPush.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RegQotPush.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RegQotPush.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_RegQotPush.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RegQotPush.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RegQotPush.IS2C);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_RegQotPush.IS2C): Qot_RegQotPush.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_RegQotPush.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RegQotPush.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_RegQotPush.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RegQotPush.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RegQotPush.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RegQotPush.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_RegQotPush.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RegQotPush.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_RegQotPush.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RegQotPush.IRequest);

        /** Request c2s. */
        public c2s: Qot_RegQotPush.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_RegQotPush.IRequest): Qot_RegQotPush.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_RegQotPush.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RegQotPush.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_RegQotPush.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RegQotPush.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RegQotPush.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RegQotPush.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_RegQotPush.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RegQotPush.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_RegQotPush.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RegQotPush.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_RegQotPush.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_RegQotPush.IResponse): Qot_RegQotPush.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_RegQotPush.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RegQotPush.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_RegQotPush.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RegQotPush.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RegQotPush.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RegQotPush.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_RegQotPush.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RegQotPush.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_RequestHistoryKL. */
export namespace Qot_RequestHistoryKL {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S rehabType */
        rehabType: number;

        /** C2S klType */
        klType: number;

        /** C2S security */
        security: Qot_Common.ISecurity;

        /** C2S beginTime */
        beginTime: string;

        /** C2S endTime */
        endTime: string;

        /** C2S maxAckKLNum */
        maxAckKLNum?: (number|null);

        /** C2S needKLFieldsFlag */
        needKLFieldsFlag?: (Long|null);

        /** C2S nextReqKey */
        nextReqKey?: (Uint8Array|null);

        /** C2S extendedTime */
        extendedTime?: (boolean|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKL.IC2S);

        /** C2S rehabType. */
        public rehabType: number;

        /** C2S klType. */
        public klType: number;

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /** C2S beginTime. */
        public beginTime: string;

        /** C2S endTime. */
        public endTime: string;

        /** C2S maxAckKLNum. */
        public maxAckKLNum: number;

        /** C2S needKLFieldsFlag. */
        public needKLFieldsFlag: Long;

        /** C2S nextReqKey. */
        public nextReqKey: Uint8Array;

        /** C2S extendedTime. */
        public extendedTime: boolean;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_RequestHistoryKL.IC2S): Qot_RequestHistoryKL.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_RequestHistoryKL.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKL.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_RequestHistoryKL.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKL.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKL.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKL.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKL.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKL.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C name */
        name?: (string|null);

        /** S2C klList */
        klList?: (Qot_Common.IKLine[]|null);

        /** S2C nextReqKey */
        nextReqKey?: (Uint8Array|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKL.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C name. */
        public name: string;

        /** S2C klList. */
        public klList: Qot_Common.IKLine[];

        /** S2C nextReqKey. */
        public nextReqKey: Uint8Array;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_RequestHistoryKL.IS2C): Qot_RequestHistoryKL.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_RequestHistoryKL.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKL.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_RequestHistoryKL.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKL.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKL.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKL.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKL.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKL.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_RequestHistoryKL.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKL.IRequest);

        /** Request c2s. */
        public c2s: Qot_RequestHistoryKL.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_RequestHistoryKL.IRequest): Qot_RequestHistoryKL.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_RequestHistoryKL.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKL.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_RequestHistoryKL.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKL.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKL.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKL.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKL.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKL.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_RequestHistoryKL.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKL.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_RequestHistoryKL.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_RequestHistoryKL.IResponse): Qot_RequestHistoryKL.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_RequestHistoryKL.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKL.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_RequestHistoryKL.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKL.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKL.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKL.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKL.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKL.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_RequestHistoryKLQuota. */
export namespace Qot_RequestHistoryKLQuota {

    /** Properties of a DetailItem. */
    interface IDetailItem {

        /** DetailItem security */
        security: Qot_Common.ISecurity;

        /** DetailItem name */
        name?: (string|null);

        /** DetailItem requestTime */
        requestTime: string;

        /** DetailItem requestTimeStamp */
        requestTimeStamp?: (Long|null);
    }

    /** Represents a DetailItem. */
    class DetailItem implements IDetailItem {

        /**
         * Constructs a new DetailItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKLQuota.IDetailItem);

        /** DetailItem security. */
        public security: Qot_Common.ISecurity;

        /** DetailItem name. */
        public name: string;

        /** DetailItem requestTime. */
        public requestTime: string;

        /** DetailItem requestTimeStamp. */
        public requestTimeStamp: Long;

        /**
         * Creates a new DetailItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DetailItem instance
         */
        public static create(properties?: Qot_RequestHistoryKLQuota.IDetailItem): Qot_RequestHistoryKLQuota.DetailItem;

        /**
         * Encodes the specified DetailItem message. Does not implicitly {@link Qot_RequestHistoryKLQuota.DetailItem.verify|verify} messages.
         * @param message DetailItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKLQuota.IDetailItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DetailItem message, length delimited. Does not implicitly {@link Qot_RequestHistoryKLQuota.DetailItem.verify|verify} messages.
         * @param message DetailItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKLQuota.IDetailItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DetailItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DetailItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKLQuota.DetailItem;

        /**
         * Decodes a DetailItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DetailItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKLQuota.DetailItem;

        /**
         * Verifies a DetailItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DetailItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DetailItem
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKLQuota.DetailItem;

        /**
         * Creates a plain object from a DetailItem message. Also converts values to other types if specified.
         * @param message DetailItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKLQuota.DetailItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DetailItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for DetailItem
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S bGetDetail */
        bGetDetail?: (boolean|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKLQuota.IC2S);

        /** C2S bGetDetail. */
        public bGetDetail: boolean;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_RequestHistoryKLQuota.IC2S): Qot_RequestHistoryKLQuota.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_RequestHistoryKLQuota.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKLQuota.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_RequestHistoryKLQuota.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKLQuota.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKLQuota.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKLQuota.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKLQuota.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKLQuota.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C usedQuota */
        usedQuota: number;

        /** S2C remainQuota */
        remainQuota: number;

        /** S2C detailList */
        detailList?: (Qot_RequestHistoryKLQuota.IDetailItem[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKLQuota.IS2C);

        /** S2C usedQuota. */
        public usedQuota: number;

        /** S2C remainQuota. */
        public remainQuota: number;

        /** S2C detailList. */
        public detailList: Qot_RequestHistoryKLQuota.IDetailItem[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_RequestHistoryKLQuota.IS2C): Qot_RequestHistoryKLQuota.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_RequestHistoryKLQuota.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKLQuota.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_RequestHistoryKLQuota.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKLQuota.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKLQuota.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKLQuota.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKLQuota.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKLQuota.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_RequestHistoryKLQuota.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKLQuota.IRequest);

        /** Request c2s. */
        public c2s: Qot_RequestHistoryKLQuota.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_RequestHistoryKLQuota.IRequest): Qot_RequestHistoryKLQuota.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_RequestHistoryKLQuota.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKLQuota.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_RequestHistoryKLQuota.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKLQuota.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKLQuota.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKLQuota.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKLQuota.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKLQuota.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_RequestHistoryKLQuota.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKLQuota.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_RequestHistoryKLQuota.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_RequestHistoryKLQuota.IResponse): Qot_RequestHistoryKLQuota.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_RequestHistoryKLQuota.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKLQuota.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_RequestHistoryKLQuota.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKLQuota.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKLQuota.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKLQuota.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKLQuota.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKLQuota.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_RequestRehab. */
export namespace Qot_RequestRehab {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestRehab.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_RequestRehab.IC2S): Qot_RequestRehab.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_RequestRehab.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestRehab.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_RequestRehab.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestRehab.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestRehab.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestRehab.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestRehab.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestRehab.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C rehabList */
        rehabList?: (Qot_Common.IRehab[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestRehab.IS2C);

        /** S2C rehabList. */
        public rehabList: Qot_Common.IRehab[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_RequestRehab.IS2C): Qot_RequestRehab.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_RequestRehab.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestRehab.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_RequestRehab.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestRehab.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestRehab.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestRehab.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestRehab.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestRehab.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_RequestRehab.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestRehab.IRequest);

        /** Request c2s. */
        public c2s: Qot_RequestRehab.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_RequestRehab.IRequest): Qot_RequestRehab.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_RequestRehab.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestRehab.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_RequestRehab.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestRehab.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestRehab.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestRehab.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestRehab.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestRehab.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_RequestRehab.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestRehab.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_RequestRehab.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_RequestRehab.IResponse): Qot_RequestRehab.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_RequestRehab.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestRehab.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_RequestRehab.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestRehab.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestRehab.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestRehab.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestRehab.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestRehab.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_RequestTradeDate. */
export namespace Qot_RequestTradeDate {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S market */
        market: number;

        /** C2S beginTime */
        beginTime: string;

        /** C2S endTime */
        endTime: string;

        /** C2S security */
        security?: (Qot_Common.ISecurity|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestTradeDate.IC2S);

        /** C2S market. */
        public market: number;

        /** C2S beginTime. */
        public beginTime: string;

        /** C2S endTime. */
        public endTime: string;

        /** C2S security. */
        public security?: (Qot_Common.ISecurity|null);

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_RequestTradeDate.IC2S): Qot_RequestTradeDate.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_RequestTradeDate.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestTradeDate.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_RequestTradeDate.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestTradeDate.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestTradeDate.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestTradeDate.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestTradeDate.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestTradeDate.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a TradeDate. */
    interface ITradeDate {

        /** TradeDate time */
        time: string;

        /** TradeDate timestamp */
        timestamp?: (number|null);

        /** TradeDate tradeDateType */
        tradeDateType?: (number|null);
    }

    /** Represents a TradeDate. */
    class TradeDate implements ITradeDate {

        /**
         * Constructs a new TradeDate.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestTradeDate.ITradeDate);

        /** TradeDate time. */
        public time: string;

        /** TradeDate timestamp. */
        public timestamp: number;

        /** TradeDate tradeDateType. */
        public tradeDateType: number;

        /**
         * Creates a new TradeDate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TradeDate instance
         */
        public static create(properties?: Qot_RequestTradeDate.ITradeDate): Qot_RequestTradeDate.TradeDate;

        /**
         * Encodes the specified TradeDate message. Does not implicitly {@link Qot_RequestTradeDate.TradeDate.verify|verify} messages.
         * @param message TradeDate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestTradeDate.ITradeDate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TradeDate message, length delimited. Does not implicitly {@link Qot_RequestTradeDate.TradeDate.verify|verify} messages.
         * @param message TradeDate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestTradeDate.ITradeDate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TradeDate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TradeDate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestTradeDate.TradeDate;

        /**
         * Decodes a TradeDate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TradeDate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestTradeDate.TradeDate;

        /**
         * Verifies a TradeDate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TradeDate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TradeDate
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestTradeDate.TradeDate;

        /**
         * Creates a plain object from a TradeDate message. Also converts values to other types if specified.
         * @param message TradeDate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestTradeDate.TradeDate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TradeDate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for TradeDate
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C tradeDateList */
        tradeDateList?: (Qot_RequestTradeDate.ITradeDate[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestTradeDate.IS2C);

        /** S2C tradeDateList. */
        public tradeDateList: Qot_RequestTradeDate.ITradeDate[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_RequestTradeDate.IS2C): Qot_RequestTradeDate.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_RequestTradeDate.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestTradeDate.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_RequestTradeDate.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestTradeDate.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestTradeDate.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestTradeDate.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestTradeDate.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestTradeDate.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_RequestTradeDate.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestTradeDate.IRequest);

        /** Request c2s. */
        public c2s: Qot_RequestTradeDate.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_RequestTradeDate.IRequest): Qot_RequestTradeDate.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_RequestTradeDate.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestTradeDate.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_RequestTradeDate.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestTradeDate.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestTradeDate.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestTradeDate.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestTradeDate.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestTradeDate.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_RequestTradeDate.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestTradeDate.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_RequestTradeDate.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_RequestTradeDate.IResponse): Qot_RequestTradeDate.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_RequestTradeDate.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestTradeDate.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_RequestTradeDate.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestTradeDate.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestTradeDate.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestTradeDate.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestTradeDate.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestTradeDate.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_SetPriceReminder. */
export namespace Qot_SetPriceReminder {

    /** SetPriceReminderOp enum. */
    enum SetPriceReminderOp {
        SetPriceReminderOp_Unknown = 0,
        SetPriceReminderOp_Add = 1,
        SetPriceReminderOp_Del = 2,
        SetPriceReminderOp_Enable = 3,
        SetPriceReminderOp_Disable = 4,
        SetPriceReminderOp_Modify = 5,
        SetPriceReminderOp_DelAll = 6
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;

        /** C2S op */
        op: number;

        /** C2S key */
        key?: (Long|null);

        /** C2S type */
        type?: (number|null);

        /** C2S freq */
        freq?: (number|null);

        /** C2S value */
        value?: (number|null);

        /** C2S note */
        note?: (string|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_SetPriceReminder.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /** C2S op. */
        public op: number;

        /** C2S key. */
        public key: Long;

        /** C2S type. */
        public type: number;

        /** C2S freq. */
        public freq: number;

        /** C2S value. */
        public value: number;

        /** C2S note. */
        public note: string;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_SetPriceReminder.IC2S): Qot_SetPriceReminder.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_SetPriceReminder.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_SetPriceReminder.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_SetPriceReminder.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_SetPriceReminder.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_SetPriceReminder.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_SetPriceReminder.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_SetPriceReminder.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_SetPriceReminder.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C key */
        key: Long;
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_SetPriceReminder.IS2C);

        /** S2C key. */
        public key: Long;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_SetPriceReminder.IS2C): Qot_SetPriceReminder.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_SetPriceReminder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_SetPriceReminder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_SetPriceReminder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_SetPriceReminder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_SetPriceReminder.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_SetPriceReminder.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_SetPriceReminder.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_SetPriceReminder.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_SetPriceReminder.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_SetPriceReminder.IRequest);

        /** Request c2s. */
        public c2s: Qot_SetPriceReminder.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_SetPriceReminder.IRequest): Qot_SetPriceReminder.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_SetPriceReminder.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_SetPriceReminder.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_SetPriceReminder.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_SetPriceReminder.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_SetPriceReminder.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_SetPriceReminder.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_SetPriceReminder.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_SetPriceReminder.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_SetPriceReminder.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_SetPriceReminder.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_SetPriceReminder.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_SetPriceReminder.IResponse): Qot_SetPriceReminder.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_SetPriceReminder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_SetPriceReminder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_SetPriceReminder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_SetPriceReminder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_SetPriceReminder.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_SetPriceReminder.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_SetPriceReminder.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_SetPriceReminder.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_StockFilter. */
export namespace Qot_StockFilter {

    /** StockField enum. */
    enum StockField {
        StockField_Unknown = 0,
        StockField_StockCode = 1,
        StockField_StockName = 2,
        StockField_CurPrice = 3,
        StockField_CurPriceToHighest52WeeksRatio = 4,
        StockField_CurPriceToLowest52WeeksRatio = 5,
        StockField_HighPriceToHighest52WeeksRatio = 6,
        StockField_LowPriceToLowest52WeeksRatio = 7,
        StockField_VolumeRatio = 8,
        StockField_BidAskRatio = 9,
        StockField_LotPrice = 10,
        StockField_MarketVal = 11,
        StockField_PeAnnual = 12,
        StockField_PeTTM = 13,
        StockField_PbRate = 14,
        StockField_ChangeRate5min = 15,
        StockField_ChangeRateBeginYear = 16,
        StockField_PSTTM = 17,
        StockField_PCFTTM = 18,
        StockField_TotalShare = 19,
        StockField_FloatShare = 20,
        StockField_FloatMarketVal = 21
    }

    /** AccumulateField enum. */
    enum AccumulateField {
        AccumulateField_Unknown = 0,
        AccumulateField_ChangeRate = 1,
        AccumulateField_Amplitude = 2,
        AccumulateField_Volume = 3,
        AccumulateField_Turnover = 4,
        AccumulateField_TurnoverRate = 5
    }

    /** FinancialField enum. */
    enum FinancialField {
        FinancialField_Unknown = 0,
        FinancialField_NetProfit = 1,
        FinancialField_NetProfitGrowth = 2,
        FinancialField_SumOfBusiness = 3,
        FinancialField_SumOfBusinessGrowth = 4,
        FinancialField_NetProfitRate = 5,
        FinancialField_GrossProfitRate = 6,
        FinancialField_DebtAssetsRate = 7,
        FinancialField_ReturnOnEquityRate = 8,
        FinancialField_ROIC = 9,
        FinancialField_ROATTM = 10,
        FinancialField_EBITTTM = 11,
        FinancialField_EBITDA = 12,
        FinancialField_OperatingMarginTTM = 13,
        FinancialField_EBITMargin = 14,
        FinancialField_EBITDAMargin = 15,
        FinancialField_FinancialCostRate = 16,
        FinancialField_OperatingProfitTTM = 17,
        FinancialField_ShareholderNetProfitTTM = 18,
        FinancialField_NetProfitCashCoverTTM = 19,
        FinancialField_CurrentRatio = 20,
        FinancialField_QuickRatio = 21,
        FinancialField_CurrentAssetRatio = 22,
        FinancialField_CurrentDebtRatio = 23,
        FinancialField_EquityMultiplier = 24,
        FinancialField_PropertyRatio = 25,
        FinancialField_CashAndCashEquivalents = 26,
        FinancialField_TotalAssetTurnover = 27,
        FinancialField_FixedAssetTurnover = 28,
        FinancialField_InventoryTurnover = 29,
        FinancialField_OperatingCashFlowTTM = 30,
        FinancialField_AccountsReceivable = 31,
        FinancialField_EBITGrowthRate = 32,
        FinancialField_OperatingProfitGrowthRate = 33,
        FinancialField_TotalAssetsGrowthRate = 34,
        FinancialField_ProfitToShareholdersGrowthRate = 35,
        FinancialField_ProfitBeforeTaxGrowthRate = 36,
        FinancialField_EPSGrowthRate = 37,
        FinancialField_ROEGrowthRate = 38,
        FinancialField_ROICGrowthRate = 39,
        FinancialField_NOCFGrowthRate = 40,
        FinancialField_NOCFPerShareGrowthRate = 41,
        FinancialField_OperatingRevenueCashCover = 42,
        FinancialField_OperatingProfitToTotalProfit = 43,
        FinancialField_BasicEPS = 44,
        FinancialField_DilutedEPS = 45,
        FinancialField_NOCFPerShare = 46
    }

    /** CustomIndicatorField enum. */
    enum CustomIndicatorField {
        CustomIndicatorField_Unknown = 0,
        CustomIndicatorField_Price = 1,
        CustomIndicatorField_MA5 = 2,
        CustomIndicatorField_MA10 = 3,
        CustomIndicatorField_MA20 = 4,
        CustomIndicatorField_MA30 = 5,
        CustomIndicatorField_MA60 = 6,
        CustomIndicatorField_MA120 = 7,
        CustomIndicatorField_MA250 = 8,
        CustomIndicatorField_RSI = 9,
        CustomIndicatorField_EMA5 = 10,
        CustomIndicatorField_EMA10 = 11,
        CustomIndicatorField_EMA20 = 12,
        CustomIndicatorField_EMA30 = 13,
        CustomIndicatorField_EMA60 = 14,
        CustomIndicatorField_EMA120 = 15,
        CustomIndicatorField_EMA250 = 16,
        CustomIndicatorField_Value = 17,
        CustomIndicatorField_MA = 30,
        CustomIndicatorField_EMA = 40,
        CustomIndicatorField_KDJ_K = 50,
        CustomIndicatorField_KDJ_D = 51,
        CustomIndicatorField_KDJ_J = 52,
        CustomIndicatorField_MACD_DIFF = 60,
        CustomIndicatorField_MACD_DEA = 61,
        CustomIndicatorField_MACD = 62,
        CustomIndicatorField_BOLL_UPPER = 70,
        CustomIndicatorField_BOLL_MIDDLER = 71,
        CustomIndicatorField_BOLL_LOWER = 72
    }

    /** PatternField enum. */
    enum PatternField {
        PatternField_Unknown = 0,
        PatternField_MAAlignmentLong = 1,
        PatternField_MAAlignmentShort = 2,
        PatternField_EMAAlignmentLong = 3,
        PatternField_EMAAlignmentShort = 4,
        PatternField_RSIGoldCrossLow = 5,
        PatternField_RSIDeathCrossHigh = 6,
        PatternField_RSITopDivergence = 7,
        PatternField_RSIBottomDivergence = 8,
        PatternField_KDJGoldCrossLow = 9,
        PatternField_KDJDeathCrossHigh = 10,
        PatternField_KDJTopDivergence = 11,
        PatternField_KDJBottomDivergence = 12,
        PatternField_MACDGoldCrossLow = 13,
        PatternField_MACDDeathCrossHigh = 14,
        PatternField_MACDTopDivergence = 15,
        PatternField_MACDBottomDivergence = 16,
        PatternField_BOLLBreakUpper = 17,
        PatternField_BOLLLower = 18,
        PatternField_BOLLCrossMiddleUp = 19,
        PatternField_BOLLCrossMiddleDown = 20
    }

    /** FinancialQuarter enum. */
    enum FinancialQuarter {
        FinancialQuarter_Unknown = 0,
        FinancialQuarter_Annual = 1,
        FinancialQuarter_FirstQuarter = 2,
        FinancialQuarter_Interim = 3,
        FinancialQuarter_ThirdQuarter = 4,
        FinancialQuarter_MostRecentQuarter = 5
    }

    /** RelativePosition enum. */
    enum RelativePosition {
        RelativePosition_Unknown = 0,
        RelativePosition_More = 1,
        RelativePosition_Less = 2,
        RelativePosition_CrossUp = 3,
        RelativePosition_CrossDown = 4
    }

    /** SortDir enum. */
    enum SortDir {
        SortDir_No = 0,
        SortDir_Ascend = 1,
        SortDir_Descend = 2
    }

    /** Properties of a BaseFilter. */
    interface IBaseFilter {

        /** BaseFilter fieldName */
        fieldName: number;

        /** BaseFilter filterMin */
        filterMin?: (number|null);

        /** BaseFilter filterMax */
        filterMax?: (number|null);

        /** BaseFilter isNoFilter */
        isNoFilter?: (boolean|null);

        /** BaseFilter sortDir */
        sortDir?: (number|null);
    }

    /** Represents a BaseFilter. */
    class BaseFilter implements IBaseFilter {

        /**
         * Constructs a new BaseFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_StockFilter.IBaseFilter);

        /** BaseFilter fieldName. */
        public fieldName: number;

        /** BaseFilter filterMin. */
        public filterMin: number;

        /** BaseFilter filterMax. */
        public filterMax: number;

        /** BaseFilter isNoFilter. */
        public isNoFilter: boolean;

        /** BaseFilter sortDir. */
        public sortDir: number;

        /**
         * Creates a new BaseFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BaseFilter instance
         */
        public static create(properties?: Qot_StockFilter.IBaseFilter): Qot_StockFilter.BaseFilter;

        /**
         * Encodes the specified BaseFilter message. Does not implicitly {@link Qot_StockFilter.BaseFilter.verify|verify} messages.
         * @param message BaseFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_StockFilter.IBaseFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BaseFilter message, length delimited. Does not implicitly {@link Qot_StockFilter.BaseFilter.verify|verify} messages.
         * @param message BaseFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_StockFilter.IBaseFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BaseFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BaseFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_StockFilter.BaseFilter;

        /**
         * Decodes a BaseFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BaseFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_StockFilter.BaseFilter;

        /**
         * Verifies a BaseFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BaseFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BaseFilter
         */
        public static fromObject(object: { [k: string]: any }): Qot_StockFilter.BaseFilter;

        /**
         * Creates a plain object from a BaseFilter message. Also converts values to other types if specified.
         * @param message BaseFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_StockFilter.BaseFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BaseFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for BaseFilter
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an AccumulateFilter. */
    interface IAccumulateFilter {

        /** AccumulateFilter fieldName */
        fieldName: number;

        /** AccumulateFilter filterMin */
        filterMin?: (number|null);

        /** AccumulateFilter filterMax */
        filterMax?: (number|null);

        /** AccumulateFilter isNoFilter */
        isNoFilter?: (boolean|null);

        /** AccumulateFilter sortDir */
        sortDir?: (number|null);

        /** AccumulateFilter days */
        days: number;
    }

    /** Represents an AccumulateFilter. */
    class AccumulateFilter implements IAccumulateFilter {

        /**
         * Constructs a new AccumulateFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_StockFilter.IAccumulateFilter);

        /** AccumulateFilter fieldName. */
        public fieldName: number;

        /** AccumulateFilter filterMin. */
        public filterMin: number;

        /** AccumulateFilter filterMax. */
        public filterMax: number;

        /** AccumulateFilter isNoFilter. */
        public isNoFilter: boolean;

        /** AccumulateFilter sortDir. */
        public sortDir: number;

        /** AccumulateFilter days. */
        public days: number;

        /**
         * Creates a new AccumulateFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AccumulateFilter instance
         */
        public static create(properties?: Qot_StockFilter.IAccumulateFilter): Qot_StockFilter.AccumulateFilter;

        /**
         * Encodes the specified AccumulateFilter message. Does not implicitly {@link Qot_StockFilter.AccumulateFilter.verify|verify} messages.
         * @param message AccumulateFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_StockFilter.IAccumulateFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AccumulateFilter message, length delimited. Does not implicitly {@link Qot_StockFilter.AccumulateFilter.verify|verify} messages.
         * @param message AccumulateFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_StockFilter.IAccumulateFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AccumulateFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AccumulateFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_StockFilter.AccumulateFilter;

        /**
         * Decodes an AccumulateFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AccumulateFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_StockFilter.AccumulateFilter;

        /**
         * Verifies an AccumulateFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AccumulateFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AccumulateFilter
         */
        public static fromObject(object: { [k: string]: any }): Qot_StockFilter.AccumulateFilter;

        /**
         * Creates a plain object from an AccumulateFilter message. Also converts values to other types if specified.
         * @param message AccumulateFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_StockFilter.AccumulateFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AccumulateFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for AccumulateFilter
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a FinancialFilter. */
    interface IFinancialFilter {

        /** FinancialFilter fieldName */
        fieldName: number;

        /** FinancialFilter filterMin */
        filterMin?: (number|null);

        /** FinancialFilter filterMax */
        filterMax?: (number|null);

        /** FinancialFilter isNoFilter */
        isNoFilter?: (boolean|null);

        /** FinancialFilter sortDir */
        sortDir?: (number|null);

        /** FinancialFilter quarter */
        quarter: number;
    }

    /** Represents a FinancialFilter. */
    class FinancialFilter implements IFinancialFilter {

        /**
         * Constructs a new FinancialFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_StockFilter.IFinancialFilter);

        /** FinancialFilter fieldName. */
        public fieldName: number;

        /** FinancialFilter filterMin. */
        public filterMin: number;

        /** FinancialFilter filterMax. */
        public filterMax: number;

        /** FinancialFilter isNoFilter. */
        public isNoFilter: boolean;

        /** FinancialFilter sortDir. */
        public sortDir: number;

        /** FinancialFilter quarter. */
        public quarter: number;

        /**
         * Creates a new FinancialFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FinancialFilter instance
         */
        public static create(properties?: Qot_StockFilter.IFinancialFilter): Qot_StockFilter.FinancialFilter;

        /**
         * Encodes the specified FinancialFilter message. Does not implicitly {@link Qot_StockFilter.FinancialFilter.verify|verify} messages.
         * @param message FinancialFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_StockFilter.IFinancialFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FinancialFilter message, length delimited. Does not implicitly {@link Qot_StockFilter.FinancialFilter.verify|verify} messages.
         * @param message FinancialFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_StockFilter.IFinancialFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FinancialFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FinancialFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_StockFilter.FinancialFilter;

        /**
         * Decodes a FinancialFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FinancialFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_StockFilter.FinancialFilter;

        /**
         * Verifies a FinancialFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FinancialFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FinancialFilter
         */
        public static fromObject(object: { [k: string]: any }): Qot_StockFilter.FinancialFilter;

        /**
         * Creates a plain object from a FinancialFilter message. Also converts values to other types if specified.
         * @param message FinancialFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_StockFilter.FinancialFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FinancialFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for FinancialFilter
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a PatternFilter. */
    interface IPatternFilter {

        /** PatternFilter fieldName */
        fieldName: number;

        /** PatternFilter klType */
        klType: number;

        /** PatternFilter isNoFilter */
        isNoFilter?: (boolean|null);

        /** PatternFilter consecutivePeriod */
        consecutivePeriod?: (number|null);
    }

    /** Represents a PatternFilter. */
    class PatternFilter implements IPatternFilter {

        /**
         * Constructs a new PatternFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_StockFilter.IPatternFilter);

        /** PatternFilter fieldName. */
        public fieldName: number;

        /** PatternFilter klType. */
        public klType: number;

        /** PatternFilter isNoFilter. */
        public isNoFilter: boolean;

        /** PatternFilter consecutivePeriod. */
        public consecutivePeriod: number;

        /**
         * Creates a new PatternFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PatternFilter instance
         */
        public static create(properties?: Qot_StockFilter.IPatternFilter): Qot_StockFilter.PatternFilter;

        /**
         * Encodes the specified PatternFilter message. Does not implicitly {@link Qot_StockFilter.PatternFilter.verify|verify} messages.
         * @param message PatternFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_StockFilter.IPatternFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PatternFilter message, length delimited. Does not implicitly {@link Qot_StockFilter.PatternFilter.verify|verify} messages.
         * @param message PatternFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_StockFilter.IPatternFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PatternFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PatternFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_StockFilter.PatternFilter;

        /**
         * Decodes a PatternFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PatternFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_StockFilter.PatternFilter;

        /**
         * Verifies a PatternFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PatternFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PatternFilter
         */
        public static fromObject(object: { [k: string]: any }): Qot_StockFilter.PatternFilter;

        /**
         * Creates a plain object from a PatternFilter message. Also converts values to other types if specified.
         * @param message PatternFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_StockFilter.PatternFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PatternFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for PatternFilter
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a CustomIndicatorFilter. */
    interface ICustomIndicatorFilter {

        /** CustomIndicatorFilter firstFieldName */
        firstFieldName: number;

        /** CustomIndicatorFilter secondFieldName */
        secondFieldName: number;

        /** CustomIndicatorFilter relativePosition */
        relativePosition: number;

        /** CustomIndicatorFilter fieldValue */
        fieldValue?: (number|null);

        /** CustomIndicatorFilter klType */
        klType: number;

        /** CustomIndicatorFilter isNoFilter */
        isNoFilter?: (boolean|null);

        /** CustomIndicatorFilter firstFieldParaList */
        firstFieldParaList?: (number[]|null);

        /** CustomIndicatorFilter secondFieldParaList */
        secondFieldParaList?: (number[]|null);

        /** CustomIndicatorFilter consecutivePeriod */
        consecutivePeriod?: (number|null);
    }

    /** Represents a CustomIndicatorFilter. */
    class CustomIndicatorFilter implements ICustomIndicatorFilter {

        /**
         * Constructs a new CustomIndicatorFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_StockFilter.ICustomIndicatorFilter);

        /** CustomIndicatorFilter firstFieldName. */
        public firstFieldName: number;

        /** CustomIndicatorFilter secondFieldName. */
        public secondFieldName: number;

        /** CustomIndicatorFilter relativePosition. */
        public relativePosition: number;

        /** CustomIndicatorFilter fieldValue. */
        public fieldValue: number;

        /** CustomIndicatorFilter klType. */
        public klType: number;

        /** CustomIndicatorFilter isNoFilter. */
        public isNoFilter: boolean;

        /** CustomIndicatorFilter firstFieldParaList. */
        public firstFieldParaList: number[];

        /** CustomIndicatorFilter secondFieldParaList. */
        public secondFieldParaList: number[];

        /** CustomIndicatorFilter consecutivePeriod. */
        public consecutivePeriod: number;

        /**
         * Creates a new CustomIndicatorFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CustomIndicatorFilter instance
         */
        public static create(properties?: Qot_StockFilter.ICustomIndicatorFilter): Qot_StockFilter.CustomIndicatorFilter;

        /**
         * Encodes the specified CustomIndicatorFilter message. Does not implicitly {@link Qot_StockFilter.CustomIndicatorFilter.verify|verify} messages.
         * @param message CustomIndicatorFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_StockFilter.ICustomIndicatorFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CustomIndicatorFilter message, length delimited. Does not implicitly {@link Qot_StockFilter.CustomIndicatorFilter.verify|verify} messages.
         * @param message CustomIndicatorFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_StockFilter.ICustomIndicatorFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CustomIndicatorFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CustomIndicatorFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_StockFilter.CustomIndicatorFilter;

        /**
         * Decodes a CustomIndicatorFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CustomIndicatorFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_StockFilter.CustomIndicatorFilter;

        /**
         * Verifies a CustomIndicatorFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CustomIndicatorFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CustomIndicatorFilter
         */
        public static fromObject(object: { [k: string]: any }): Qot_StockFilter.CustomIndicatorFilter;

        /**
         * Creates a plain object from a CustomIndicatorFilter message. Also converts values to other types if specified.
         * @param message CustomIndicatorFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_StockFilter.CustomIndicatorFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CustomIndicatorFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for CustomIndicatorFilter
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a BaseData. */
    interface IBaseData {

        /** BaseData fieldName */
        fieldName: number;

        /** BaseData value */
        value: number;
    }

    /** Represents a BaseData. */
    class BaseData implements IBaseData {

        /**
         * Constructs a new BaseData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_StockFilter.IBaseData);

        /** BaseData fieldName. */
        public fieldName: number;

        /** BaseData value. */
        public value: number;

        /**
         * Creates a new BaseData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BaseData instance
         */
        public static create(properties?: Qot_StockFilter.IBaseData): Qot_StockFilter.BaseData;

        /**
         * Encodes the specified BaseData message. Does not implicitly {@link Qot_StockFilter.BaseData.verify|verify} messages.
         * @param message BaseData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_StockFilter.IBaseData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BaseData message, length delimited. Does not implicitly {@link Qot_StockFilter.BaseData.verify|verify} messages.
         * @param message BaseData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_StockFilter.IBaseData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BaseData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BaseData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_StockFilter.BaseData;

        /**
         * Decodes a BaseData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BaseData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_StockFilter.BaseData;

        /**
         * Verifies a BaseData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BaseData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BaseData
         */
        public static fromObject(object: { [k: string]: any }): Qot_StockFilter.BaseData;

        /**
         * Creates a plain object from a BaseData message. Also converts values to other types if specified.
         * @param message BaseData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_StockFilter.BaseData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BaseData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for BaseData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an AccumulateData. */
    interface IAccumulateData {

        /** AccumulateData fieldName */
        fieldName: number;

        /** AccumulateData value */
        value: number;

        /** AccumulateData days */
        days: number;
    }

    /** Represents an AccumulateData. */
    class AccumulateData implements IAccumulateData {

        /**
         * Constructs a new AccumulateData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_StockFilter.IAccumulateData);

        /** AccumulateData fieldName. */
        public fieldName: number;

        /** AccumulateData value. */
        public value: number;

        /** AccumulateData days. */
        public days: number;

        /**
         * Creates a new AccumulateData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AccumulateData instance
         */
        public static create(properties?: Qot_StockFilter.IAccumulateData): Qot_StockFilter.AccumulateData;

        /**
         * Encodes the specified AccumulateData message. Does not implicitly {@link Qot_StockFilter.AccumulateData.verify|verify} messages.
         * @param message AccumulateData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_StockFilter.IAccumulateData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AccumulateData message, length delimited. Does not implicitly {@link Qot_StockFilter.AccumulateData.verify|verify} messages.
         * @param message AccumulateData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_StockFilter.IAccumulateData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AccumulateData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AccumulateData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_StockFilter.AccumulateData;

        /**
         * Decodes an AccumulateData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AccumulateData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_StockFilter.AccumulateData;

        /**
         * Verifies an AccumulateData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AccumulateData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AccumulateData
         */
        public static fromObject(object: { [k: string]: any }): Qot_StockFilter.AccumulateData;

        /**
         * Creates a plain object from an AccumulateData message. Also converts values to other types if specified.
         * @param message AccumulateData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_StockFilter.AccumulateData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AccumulateData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for AccumulateData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a FinancialData. */
    interface IFinancialData {

        /** FinancialData fieldName */
        fieldName: number;

        /** FinancialData value */
        value: number;

        /** FinancialData quarter */
        quarter: number;
    }

    /** Represents a FinancialData. */
    class FinancialData implements IFinancialData {

        /**
         * Constructs a new FinancialData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_StockFilter.IFinancialData);

        /** FinancialData fieldName. */
        public fieldName: number;

        /** FinancialData value. */
        public value: number;

        /** FinancialData quarter. */
        public quarter: number;

        /**
         * Creates a new FinancialData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FinancialData instance
         */
        public static create(properties?: Qot_StockFilter.IFinancialData): Qot_StockFilter.FinancialData;

        /**
         * Encodes the specified FinancialData message. Does not implicitly {@link Qot_StockFilter.FinancialData.verify|verify} messages.
         * @param message FinancialData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_StockFilter.IFinancialData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FinancialData message, length delimited. Does not implicitly {@link Qot_StockFilter.FinancialData.verify|verify} messages.
         * @param message FinancialData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_StockFilter.IFinancialData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FinancialData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FinancialData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_StockFilter.FinancialData;

        /**
         * Decodes a FinancialData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FinancialData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_StockFilter.FinancialData;

        /**
         * Verifies a FinancialData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FinancialData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FinancialData
         */
        public static fromObject(object: { [k: string]: any }): Qot_StockFilter.FinancialData;

        /**
         * Creates a plain object from a FinancialData message. Also converts values to other types if specified.
         * @param message FinancialData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_StockFilter.FinancialData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FinancialData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for FinancialData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a CustomIndicatorData. */
    interface ICustomIndicatorData {

        /** CustomIndicatorData fieldName */
        fieldName: number;

        /** CustomIndicatorData value */
        value: number;

        /** CustomIndicatorData klType */
        klType: number;

        /** CustomIndicatorData fieldParaList */
        fieldParaList?: (number[]|null);
    }

    /** Represents a CustomIndicatorData. */
    class CustomIndicatorData implements ICustomIndicatorData {

        /**
         * Constructs a new CustomIndicatorData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_StockFilter.ICustomIndicatorData);

        /** CustomIndicatorData fieldName. */
        public fieldName: number;

        /** CustomIndicatorData value. */
        public value: number;

        /** CustomIndicatorData klType. */
        public klType: number;

        /** CustomIndicatorData fieldParaList. */
        public fieldParaList: number[];

        /**
         * Creates a new CustomIndicatorData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CustomIndicatorData instance
         */
        public static create(properties?: Qot_StockFilter.ICustomIndicatorData): Qot_StockFilter.CustomIndicatorData;

        /**
         * Encodes the specified CustomIndicatorData message. Does not implicitly {@link Qot_StockFilter.CustomIndicatorData.verify|verify} messages.
         * @param message CustomIndicatorData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_StockFilter.ICustomIndicatorData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CustomIndicatorData message, length delimited. Does not implicitly {@link Qot_StockFilter.CustomIndicatorData.verify|verify} messages.
         * @param message CustomIndicatorData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_StockFilter.ICustomIndicatorData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CustomIndicatorData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CustomIndicatorData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_StockFilter.CustomIndicatorData;

        /**
         * Decodes a CustomIndicatorData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CustomIndicatorData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_StockFilter.CustomIndicatorData;

        /**
         * Verifies a CustomIndicatorData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CustomIndicatorData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CustomIndicatorData
         */
        public static fromObject(object: { [k: string]: any }): Qot_StockFilter.CustomIndicatorData;

        /**
         * Creates a plain object from a CustomIndicatorData message. Also converts values to other types if specified.
         * @param message CustomIndicatorData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_StockFilter.CustomIndicatorData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CustomIndicatorData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for CustomIndicatorData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a StockData. */
    interface IStockData {

        /** StockData security */
        security: Qot_Common.ISecurity;

        /** StockData name */
        name: string;

        /** StockData baseDataList */
        baseDataList?: (Qot_StockFilter.IBaseData[]|null);

        /** StockData accumulateDataList */
        accumulateDataList?: (Qot_StockFilter.IAccumulateData[]|null);

        /** StockData financialDataList */
        financialDataList?: (Qot_StockFilter.IFinancialData[]|null);

        /** StockData customIndicatorDataList */
        customIndicatorDataList?: (Qot_StockFilter.ICustomIndicatorData[]|null);
    }

    /** Represents a StockData. */
    class StockData implements IStockData {

        /**
         * Constructs a new StockData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_StockFilter.IStockData);

        /** StockData security. */
        public security: Qot_Common.ISecurity;

        /** StockData name. */
        public name: string;

        /** StockData baseDataList. */
        public baseDataList: Qot_StockFilter.IBaseData[];

        /** StockData accumulateDataList. */
        public accumulateDataList: Qot_StockFilter.IAccumulateData[];

        /** StockData financialDataList. */
        public financialDataList: Qot_StockFilter.IFinancialData[];

        /** StockData customIndicatorDataList. */
        public customIndicatorDataList: Qot_StockFilter.ICustomIndicatorData[];

        /**
         * Creates a new StockData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StockData instance
         */
        public static create(properties?: Qot_StockFilter.IStockData): Qot_StockFilter.StockData;

        /**
         * Encodes the specified StockData message. Does not implicitly {@link Qot_StockFilter.StockData.verify|verify} messages.
         * @param message StockData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_StockFilter.IStockData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StockData message, length delimited. Does not implicitly {@link Qot_StockFilter.StockData.verify|verify} messages.
         * @param message StockData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_StockFilter.IStockData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StockData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StockData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_StockFilter.StockData;

        /**
         * Decodes a StockData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StockData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_StockFilter.StockData;

        /**
         * Verifies a StockData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StockData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StockData
         */
        public static fromObject(object: { [k: string]: any }): Qot_StockFilter.StockData;

        /**
         * Creates a plain object from a StockData message. Also converts values to other types if specified.
         * @param message StockData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_StockFilter.StockData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StockData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for StockData
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S begin */
        begin: number;

        /** C2S num */
        num: number;

        /** C2S market */
        market: number;

        /** C2S plate */
        plate?: (Qot_Common.ISecurity|null);

        /** C2S baseFilterList */
        baseFilterList?: (Qot_StockFilter.IBaseFilter[]|null);

        /** C2S accumulateFilterList */
        accumulateFilterList?: (Qot_StockFilter.IAccumulateFilter[]|null);

        /** C2S financialFilterList */
        financialFilterList?: (Qot_StockFilter.IFinancialFilter[]|null);

        /** C2S patternFilterList */
        patternFilterList?: (Qot_StockFilter.IPatternFilter[]|null);

        /** C2S customIndicatorFilterList */
        customIndicatorFilterList?: (Qot_StockFilter.ICustomIndicatorFilter[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_StockFilter.IC2S);

        /** C2S begin. */
        public begin: number;

        /** C2S num. */
        public num: number;

        /** C2S market. */
        public market: number;

        /** C2S plate. */
        public plate?: (Qot_Common.ISecurity|null);

        /** C2S baseFilterList. */
        public baseFilterList: Qot_StockFilter.IBaseFilter[];

        /** C2S accumulateFilterList. */
        public accumulateFilterList: Qot_StockFilter.IAccumulateFilter[];

        /** C2S financialFilterList. */
        public financialFilterList: Qot_StockFilter.IFinancialFilter[];

        /** C2S patternFilterList. */
        public patternFilterList: Qot_StockFilter.IPatternFilter[];

        /** C2S customIndicatorFilterList. */
        public customIndicatorFilterList: Qot_StockFilter.ICustomIndicatorFilter[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_StockFilter.IC2S): Qot_StockFilter.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_StockFilter.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_StockFilter.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_StockFilter.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_StockFilter.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_StockFilter.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_StockFilter.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_StockFilter.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_StockFilter.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C lastPage */
        lastPage: boolean;

        /** S2C allCount */
        allCount: number;

        /** S2C dataList */
        dataList?: (Qot_StockFilter.IStockData[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_StockFilter.IS2C);

        /** S2C lastPage. */
        public lastPage: boolean;

        /** S2C allCount. */
        public allCount: number;

        /** S2C dataList. */
        public dataList: Qot_StockFilter.IStockData[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_StockFilter.IS2C): Qot_StockFilter.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_StockFilter.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_StockFilter.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_StockFilter.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_StockFilter.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_StockFilter.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_StockFilter.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_StockFilter.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_StockFilter.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_StockFilter.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_StockFilter.IRequest);

        /** Request c2s. */
        public c2s: Qot_StockFilter.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_StockFilter.IRequest): Qot_StockFilter.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_StockFilter.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_StockFilter.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_StockFilter.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_StockFilter.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_StockFilter.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_StockFilter.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_StockFilter.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_StockFilter.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_StockFilter.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_StockFilter.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_StockFilter.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_StockFilter.IResponse): Qot_StockFilter.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_StockFilter.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_StockFilter.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_StockFilter.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_StockFilter.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_StockFilter.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_StockFilter.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_StockFilter.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_StockFilter.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_Sub. */
export namespace Qot_Sub {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);

        /** C2S subTypeList */
        subTypeList?: (number[]|null);

        /** C2S isSubOrUnSub */
        isSubOrUnSub: boolean;

        /** C2S isRegOrUnRegPush */
        isRegOrUnRegPush?: (boolean|null);

        /** C2S regPushRehabTypeList */
        regPushRehabTypeList?: (number[]|null);

        /** C2S isFirstPush */
        isFirstPush?: (boolean|null);

        /** C2S isUnsubAll */
        isUnsubAll?: (boolean|null);

        /** C2S isSubOrderBookDetail */
        isSubOrderBookDetail?: (boolean|null);

        /** C2S extendedTime */
        extendedTime?: (boolean|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Sub.IC2S);

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /** C2S subTypeList. */
        public subTypeList: number[];

        /** C2S isSubOrUnSub. */
        public isSubOrUnSub: boolean;

        /** C2S isRegOrUnRegPush. */
        public isRegOrUnRegPush: boolean;

        /** C2S regPushRehabTypeList. */
        public regPushRehabTypeList: number[];

        /** C2S isFirstPush. */
        public isFirstPush: boolean;

        /** C2S isUnsubAll. */
        public isUnsubAll: boolean;

        /** C2S isSubOrderBookDetail. */
        public isSubOrderBookDetail: boolean;

        /** C2S extendedTime. */
        public extendedTime: boolean;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_Sub.IC2S): Qot_Sub.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_Sub.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Sub.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_Sub.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Sub.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Sub.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Sub.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_Sub.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Sub.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Sub.IS2C);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_Sub.IS2C): Qot_Sub.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_Sub.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Sub.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_Sub.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Sub.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Sub.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Sub.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_Sub.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Sub.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_Sub.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Sub.IRequest);

        /** Request c2s. */
        public c2s: Qot_Sub.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_Sub.IRequest): Qot_Sub.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_Sub.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Sub.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_Sub.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Sub.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Sub.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Sub.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_Sub.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Sub.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_Sub.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Sub.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_Sub.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_Sub.IResponse): Qot_Sub.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_Sub.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Sub.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_Sub.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Sub.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Sub.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Sub.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_Sub.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Sub.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_UpdateBasicQot. */
export namespace Qot_UpdateBasicQot {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C basicQotList */
        basicQotList?: (Qot_Common.IBasicQot[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateBasicQot.IS2C);

        /** S2C basicQotList. */
        public basicQotList: Qot_Common.IBasicQot[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_UpdateBasicQot.IS2C): Qot_UpdateBasicQot.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_UpdateBasicQot.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateBasicQot.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_UpdateBasicQot.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateBasicQot.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateBasicQot.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateBasicQot.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateBasicQot.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateBasicQot.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_UpdateBasicQot.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateBasicQot.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_UpdateBasicQot.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_UpdateBasicQot.IResponse): Qot_UpdateBasicQot.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_UpdateBasicQot.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateBasicQot.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_UpdateBasicQot.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateBasicQot.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateBasicQot.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateBasicQot.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateBasicQot.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateBasicQot.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_UpdateBroker. */
export namespace Qot_UpdateBroker {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C name */
        name?: (string|null);

        /** S2C brokerAskList */
        brokerAskList?: (Qot_Common.IBroker[]|null);

        /** S2C brokerBidList */
        brokerBidList?: (Qot_Common.IBroker[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateBroker.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C name. */
        public name: string;

        /** S2C brokerAskList. */
        public brokerAskList: Qot_Common.IBroker[];

        /** S2C brokerBidList. */
        public brokerBidList: Qot_Common.IBroker[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_UpdateBroker.IS2C): Qot_UpdateBroker.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_UpdateBroker.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateBroker.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_UpdateBroker.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateBroker.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateBroker.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateBroker.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateBroker.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateBroker.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_UpdateBroker.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateBroker.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_UpdateBroker.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_UpdateBroker.IResponse): Qot_UpdateBroker.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_UpdateBroker.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateBroker.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_UpdateBroker.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateBroker.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateBroker.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateBroker.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateBroker.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateBroker.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_UpdateKL. */
export namespace Qot_UpdateKL {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C rehabType */
        rehabType: number;

        /** S2C klType */
        klType: number;

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C name */
        name?: (string|null);

        /** S2C klList */
        klList?: (Qot_Common.IKLine[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateKL.IS2C);

        /** S2C rehabType. */
        public rehabType: number;

        /** S2C klType. */
        public klType: number;

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C name. */
        public name: string;

        /** S2C klList. */
        public klList: Qot_Common.IKLine[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_UpdateKL.IS2C): Qot_UpdateKL.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_UpdateKL.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateKL.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_UpdateKL.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateKL.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateKL.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateKL.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateKL.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateKL.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_UpdateKL.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateKL.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_UpdateKL.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_UpdateKL.IResponse): Qot_UpdateKL.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_UpdateKL.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateKL.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_UpdateKL.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateKL.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateKL.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateKL.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateKL.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateKL.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_UpdateOrderBook. */
export namespace Qot_UpdateOrderBook {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C name */
        name?: (string|null);

        /** S2C orderBookAskList */
        orderBookAskList?: (Qot_Common.IOrderBook[]|null);

        /** S2C orderBookBidList */
        orderBookBidList?: (Qot_Common.IOrderBook[]|null);

        /** S2C svrRecvTimeBid */
        svrRecvTimeBid?: (string|null);

        /** S2C svrRecvTimeBidTimestamp */
        svrRecvTimeBidTimestamp?: (number|null);

        /** S2C svrRecvTimeAsk */
        svrRecvTimeAsk?: (string|null);

        /** S2C svrRecvTimeAskTimestamp */
        svrRecvTimeAskTimestamp?: (number|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateOrderBook.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C name. */
        public name: string;

        /** S2C orderBookAskList. */
        public orderBookAskList: Qot_Common.IOrderBook[];

        /** S2C orderBookBidList. */
        public orderBookBidList: Qot_Common.IOrderBook[];

        /** S2C svrRecvTimeBid. */
        public svrRecvTimeBid: string;

        /** S2C svrRecvTimeBidTimestamp. */
        public svrRecvTimeBidTimestamp: number;

        /** S2C svrRecvTimeAsk. */
        public svrRecvTimeAsk: string;

        /** S2C svrRecvTimeAskTimestamp. */
        public svrRecvTimeAskTimestamp: number;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_UpdateOrderBook.IS2C): Qot_UpdateOrderBook.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_UpdateOrderBook.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateOrderBook.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_UpdateOrderBook.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateOrderBook.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateOrderBook.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateOrderBook.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateOrderBook.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateOrderBook.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_UpdateOrderBook.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateOrderBook.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_UpdateOrderBook.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_UpdateOrderBook.IResponse): Qot_UpdateOrderBook.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_UpdateOrderBook.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateOrderBook.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_UpdateOrderBook.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateOrderBook.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateOrderBook.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateOrderBook.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateOrderBook.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateOrderBook.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_UpdatePriceReminder. */
export namespace Qot_UpdatePriceReminder {

    /** MarketStatus enum. */
    enum MarketStatus {
        MarketStatus_Unknow = 0,
        MarketStatus_Open = 1,
        MarketStatus_USPre = 2,
        MarketStatus_USAfter = 3
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C name */
        name?: (string|null);

        /** S2C price */
        price: number;

        /** S2C changeRate */
        changeRate: number;

        /** S2C marketStatus */
        marketStatus: number;

        /** S2C content */
        content: string;

        /** S2C note */
        note: string;

        /** S2C key */
        key?: (Long|null);

        /** S2C type */
        type?: (number|null);

        /** S2C setValue */
        setValue?: (number|null);

        /** S2C curValue */
        curValue?: (number|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdatePriceReminder.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C name. */
        public name: string;

        /** S2C price. */
        public price: number;

        /** S2C changeRate. */
        public changeRate: number;

        /** S2C marketStatus. */
        public marketStatus: number;

        /** S2C content. */
        public content: string;

        /** S2C note. */
        public note: string;

        /** S2C key. */
        public key: Long;

        /** S2C type. */
        public type: number;

        /** S2C setValue. */
        public setValue: number;

        /** S2C curValue. */
        public curValue: number;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_UpdatePriceReminder.IS2C): Qot_UpdatePriceReminder.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_UpdatePriceReminder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdatePriceReminder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_UpdatePriceReminder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdatePriceReminder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdatePriceReminder.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdatePriceReminder.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdatePriceReminder.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdatePriceReminder.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_UpdatePriceReminder.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdatePriceReminder.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_UpdatePriceReminder.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_UpdatePriceReminder.IResponse): Qot_UpdatePriceReminder.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_UpdatePriceReminder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdatePriceReminder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_UpdatePriceReminder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdatePriceReminder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdatePriceReminder.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdatePriceReminder.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdatePriceReminder.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdatePriceReminder.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_UpdateRT. */
export namespace Qot_UpdateRT {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C name */
        name?: (string|null);

        /** S2C rtList */
        rtList?: (Qot_Common.ITimeShare[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateRT.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C name. */
        public name: string;

        /** S2C rtList. */
        public rtList: Qot_Common.ITimeShare[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_UpdateRT.IS2C): Qot_UpdateRT.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_UpdateRT.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateRT.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_UpdateRT.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateRT.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateRT.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateRT.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateRT.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateRT.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_UpdateRT.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateRT.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_UpdateRT.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_UpdateRT.IResponse): Qot_UpdateRT.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_UpdateRT.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateRT.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_UpdateRT.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateRT.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateRT.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateRT.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateRT.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateRT.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Qot_UpdateTicker. */
export namespace Qot_UpdateTicker {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C name */
        name?: (string|null);

        /** S2C tickerList */
        tickerList?: (Qot_Common.ITicker[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateTicker.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C name. */
        public name: string;

        /** S2C tickerList. */
        public tickerList: Qot_Common.ITicker[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_UpdateTicker.IS2C): Qot_UpdateTicker.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_UpdateTicker.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateTicker.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_UpdateTicker.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateTicker.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateTicker.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateTicker.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateTicker.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateTicker.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_UpdateTicker.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateTicker.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_UpdateTicker.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_UpdateTicker.IResponse): Qot_UpdateTicker.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_UpdateTicker.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateTicker.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_UpdateTicker.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateTicker.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateTicker.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateTicker.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateTicker.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateTicker.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace TestCmd. */
export namespace TestCmd {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S cmd */
        cmd: string;

        /** C2S params */
        params?: (string|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: TestCmd.IC2S);

        /** C2S cmd. */
        public cmd: string;

        /** C2S params. */
        public params: string;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: TestCmd.IC2S): TestCmd.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link TestCmd.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: TestCmd.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link TestCmd.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: TestCmd.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TestCmd.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TestCmd.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): TestCmd.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: TestCmd.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C cmd */
        cmd: string;

        /** S2C result */
        result: string;
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: TestCmd.IS2C);

        /** S2C cmd. */
        public cmd: string;

        /** S2C result. */
        public result: string;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: TestCmd.IS2C): TestCmd.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link TestCmd.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: TestCmd.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link TestCmd.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: TestCmd.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TestCmd.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TestCmd.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): TestCmd.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: TestCmd.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: TestCmd.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: TestCmd.IRequest);

        /** Request c2s. */
        public c2s: TestCmd.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: TestCmd.IRequest): TestCmd.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link TestCmd.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: TestCmd.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link TestCmd.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: TestCmd.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TestCmd.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TestCmd.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): TestCmd.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: TestCmd.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (TestCmd.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: TestCmd.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (TestCmd.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: TestCmd.IResponse): TestCmd.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link TestCmd.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: TestCmd.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link TestCmd.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: TestCmd.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TestCmd.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TestCmd.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): TestCmd.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: TestCmd.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_Common. */
export namespace Trd_Common {

    /** TrdEnv enum. */
    enum TrdEnv {
        TrdEnv_Simulate = 0,
        TrdEnv_Real = 1
    }

    /** TrdCategory enum. */
    enum TrdCategory {
        TrdCategory_Unknown = 0,
        TrdCategory_Security = 1,
        TrdCategory_Future = 2
    }

    /** TrdMarket enum. */
    enum TrdMarket {
        TrdMarket_Unknown = 0,
        TrdMarket_HK = 1,
        TrdMarket_US = 2,
        TrdMarket_CN = 3,
        TrdMarket_HKCC = 4,
        TrdMarket_Futures = 5,
        TrdMarket_SG = 6,
        TrdMarket_Futures_Simulate_HK = 10,
        TrdMarket_Futures_Simulate_US = 11,
        TrdMarket_Futures_Simulate_SG = 12,
        TrdMarket_Futures_Simulate_JP = 13,
        TrdMarket_HK_Fund = 113,
        TrdMarket_US_Fund = 123
    }

    /** TrdSecMarket enum. */
    enum TrdSecMarket {
        TrdSecMarket_Unknown = 0,
        TrdSecMarket_HK = 1,
        TrdSecMarket_US = 2,
        TrdSecMarket_CN_SH = 31,
        TrdSecMarket_CN_SZ = 32,
        TrdSecMarket_SG = 41,
        TrdSecMarket_JP = 51
    }

    /** TrdSide enum. */
    enum TrdSide {
        TrdSide_Unknown = 0,
        TrdSide_Buy = 1,
        TrdSide_Sell = 2,
        TrdSide_SellShort = 3,
        TrdSide_BuyBack = 4
    }

    /** OrderType enum. */
    enum OrderType {
        OrderType_Unknown = 0,
        OrderType_Normal = 1,
        OrderType_Market = 2,
        OrderType_AbsoluteLimit = 5,
        OrderType_Auction = 6,
        OrderType_AuctionLimit = 7,
        OrderType_SpecialLimit = 8,
        OrderType_SpecialLimit_All = 9,
        OrderType_Stop = 10,
        OrderType_StopLimit = 11,
        OrderType_MarketifTouched = 12,
        OrderType_LimitifTouched = 13,
        OrderType_TrailingStop = 14,
        OrderType_TrailingStopLimit = 15,
        OrderType_TWAP = 16,
        OrderType_TWAPLimit = 17,
        OrderType_VWAP = 18,
        OrderType_VWAPLimit = 19
    }

    /** TrailType enum. */
    enum TrailType {
        TrailType_Unknown = 0,
        TrailType_Ratio = 1,
        TrailType_Amount = 2
    }

    /** OrderStatus enum. */
    enum OrderStatus {
        OrderStatus_Unsubmitted = 0,
        OrderStatus_Unknown = -1,
        OrderStatus_WaitingSubmit = 1,
        OrderStatus_Submitting = 2,
        OrderStatus_SubmitFailed = 3,
        OrderStatus_TimeOut = 4,
        OrderStatus_Submitted = 5,
        OrderStatus_Filled_Part = 10,
        OrderStatus_Filled_All = 11,
        OrderStatus_Cancelling_Part = 12,
        OrderStatus_Cancelling_All = 13,
        OrderStatus_Cancelled_Part = 14,
        OrderStatus_Cancelled_All = 15,
        OrderStatus_Failed = 21,
        OrderStatus_Disabled = 22,
        OrderStatus_Deleted = 23,
        OrderStatus_FillCancelled = 24
    }

    /** OrderFillStatus enum. */
    enum OrderFillStatus {
        OrderFillStatus_OK = 0,
        OrderFillStatus_Cancelled = 1,
        OrderFillStatus_Changed = 2
    }

    /** PositionSide enum. */
    enum PositionSide {
        PositionSide_Long = 0,
        PositionSide_Unknown = -1,
        PositionSide_Short = 1
    }

    /** ModifyOrderOp enum. */
    enum ModifyOrderOp {
        ModifyOrderOp_Unknown = 0,
        ModifyOrderOp_Normal = 1,
        ModifyOrderOp_Cancel = 2,
        ModifyOrderOp_Disable = 3,
        ModifyOrderOp_Enable = 4,
        ModifyOrderOp_Delete = 5
    }

    /** TrdAccType enum. */
    enum TrdAccType {
        TrdAccType_Unknown = 0,
        TrdAccType_Cash = 1,
        TrdAccType_Margin = 2
    }

    /** TrdAccStatus enum. */
    enum TrdAccStatus {
        TrdAccStatus_Active = 0,
        TrdAccStatus_Disabled = 1
    }

    /** Currency enum. */
    enum Currency {
        Currency_Unknown = 0,
        Currency_HKD = 1,
        Currency_USD = 2,
        Currency_CNH = 3,
        Currency_JPY = 4,
        Currency_SGD = 5,
        Currency_AUD = 6
    }

    /** CltRiskLevel enum. */
    enum CltRiskLevel {
        CltRiskLevel_Unknown = -1,
        CltRiskLevel_Safe = 0,
        CltRiskLevel_Warning = 1,
        CltRiskLevel_Danger = 2,
        CltRiskLevel_AbsoluteSafe = 3,
        CltRiskLevel_OptDanger = 4
    }

    /** TimeInForce enum. */
    enum TimeInForce {
        TimeInForce_DAY = 0,
        TimeInForce_GTC = 1
    }

    /** SecurityFirm enum. */
    enum SecurityFirm {
        SecurityFirm_Unknown = 0,
        SecurityFirm_FutuSecurities = 1,
        SecurityFirm_FutuInc = 2,
        SecurityFirm_FutuSG = 3,
        SecurityFirm_FutuAU = 4
    }

    /** SimAccType enum. */
    enum SimAccType {
        SimAccType_Unknown = 0,
        SimAccType_Stock = 1,
        SimAccType_Option = 2,
        SimAccType_Futures = 3
    }

    /** CltRiskStatus enum. */
    enum CltRiskStatus {
        CltRiskStatus_Unknown = 0,
        CltRiskStatus_Level1 = 1,
        CltRiskStatus_Level2 = 2,
        CltRiskStatus_Level3 = 3,
        CltRiskStatus_Level4 = 4,
        CltRiskStatus_Level5 = 5,
        CltRiskStatus_Level6 = 6,
        CltRiskStatus_Level7 = 7,
        CltRiskStatus_Level8 = 8,
        CltRiskStatus_Level9 = 9
    }

    /** DTStatus enum. */
    enum DTStatus {
        DTStatus_Unknown = 0,
        DTStatus_Unlimited = 1,
        DTStatus_EMCall = 2,
        DTStatus_DTCall = 3
    }

    /** Properties of an AccCashInfo. */
    interface IAccCashInfo {

        /** AccCashInfo currency */
        currency?: (number|null);

        /** AccCashInfo cash */
        cash?: (number|null);

        /** AccCashInfo availableBalance */
        availableBalance?: (number|null);
    }

    /** Represents an AccCashInfo. */
    class AccCashInfo implements IAccCashInfo {

        /**
         * Constructs a new AccCashInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.IAccCashInfo);

        /** AccCashInfo currency. */
        public currency: number;

        /** AccCashInfo cash. */
        public cash: number;

        /** AccCashInfo availableBalance. */
        public availableBalance: number;

        /**
         * Creates a new AccCashInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AccCashInfo instance
         */
        public static create(properties?: Trd_Common.IAccCashInfo): Trd_Common.AccCashInfo;

        /**
         * Encodes the specified AccCashInfo message. Does not implicitly {@link Trd_Common.AccCashInfo.verify|verify} messages.
         * @param message AccCashInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.IAccCashInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AccCashInfo message, length delimited. Does not implicitly {@link Trd_Common.AccCashInfo.verify|verify} messages.
         * @param message AccCashInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.IAccCashInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AccCashInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AccCashInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.AccCashInfo;

        /**
         * Decodes an AccCashInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AccCashInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.AccCashInfo;

        /**
         * Verifies an AccCashInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AccCashInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AccCashInfo
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.AccCashInfo;

        /**
         * Creates a plain object from an AccCashInfo message. Also converts values to other types if specified.
         * @param message AccCashInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.AccCashInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AccCashInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for AccCashInfo
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a TrdHeader. */
    interface ITrdHeader {

        /** TrdHeader trdEnv */
        trdEnv: number;

        /** TrdHeader accID */
        accID: Long;

        /** TrdHeader trdMarket */
        trdMarket: number;
    }

    /** Represents a TrdHeader. */
    class TrdHeader implements ITrdHeader {

        /**
         * Constructs a new TrdHeader.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.ITrdHeader);

        /** TrdHeader trdEnv. */
        public trdEnv: number;

        /** TrdHeader accID. */
        public accID: Long;

        /** TrdHeader trdMarket. */
        public trdMarket: number;

        /**
         * Creates a new TrdHeader instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrdHeader instance
         */
        public static create(properties?: Trd_Common.ITrdHeader): Trd_Common.TrdHeader;

        /**
         * Encodes the specified TrdHeader message. Does not implicitly {@link Trd_Common.TrdHeader.verify|verify} messages.
         * @param message TrdHeader message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.ITrdHeader, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrdHeader message, length delimited. Does not implicitly {@link Trd_Common.TrdHeader.verify|verify} messages.
         * @param message TrdHeader message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.ITrdHeader, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrdHeader message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrdHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.TrdHeader;

        /**
         * Decodes a TrdHeader message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrdHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.TrdHeader;

        /**
         * Verifies a TrdHeader message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrdHeader message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrdHeader
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.TrdHeader;

        /**
         * Creates a plain object from a TrdHeader message. Also converts values to other types if specified.
         * @param message TrdHeader
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.TrdHeader, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrdHeader to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for TrdHeader
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a TrdAcc. */
    interface ITrdAcc {

        /** TrdAcc trdEnv */
        trdEnv: number;

        /** TrdAcc accID */
        accID: Long;

        /** TrdAcc trdMarketAuthList */
        trdMarketAuthList?: (number[]|null);

        /** TrdAcc accType */
        accType?: (number|null);

        /** TrdAcc cardNum */
        cardNum?: (string|null);

        /** TrdAcc securityFirm */
        securityFirm?: (number|null);

        /** TrdAcc simAccType */
        simAccType?: (number|null);

        /** TrdAcc uniCardNum */
        uniCardNum?: (string|null);

        /** TrdAcc accStatus */
        accStatus?: (number|null);
    }

    /** Represents a TrdAcc. */
    class TrdAcc implements ITrdAcc {

        /**
         * Constructs a new TrdAcc.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.ITrdAcc);

        /** TrdAcc trdEnv. */
        public trdEnv: number;

        /** TrdAcc accID. */
        public accID: Long;

        /** TrdAcc trdMarketAuthList. */
        public trdMarketAuthList: number[];

        /** TrdAcc accType. */
        public accType: number;

        /** TrdAcc cardNum. */
        public cardNum: string;

        /** TrdAcc securityFirm. */
        public securityFirm: number;

        /** TrdAcc simAccType. */
        public simAccType: number;

        /** TrdAcc uniCardNum. */
        public uniCardNum: string;

        /** TrdAcc accStatus. */
        public accStatus: number;

        /**
         * Creates a new TrdAcc instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrdAcc instance
         */
        public static create(properties?: Trd_Common.ITrdAcc): Trd_Common.TrdAcc;

        /**
         * Encodes the specified TrdAcc message. Does not implicitly {@link Trd_Common.TrdAcc.verify|verify} messages.
         * @param message TrdAcc message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.ITrdAcc, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrdAcc message, length delimited. Does not implicitly {@link Trd_Common.TrdAcc.verify|verify} messages.
         * @param message TrdAcc message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.ITrdAcc, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrdAcc message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrdAcc
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.TrdAcc;

        /**
         * Decodes a TrdAcc message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrdAcc
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.TrdAcc;

        /**
         * Verifies a TrdAcc message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrdAcc message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrdAcc
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.TrdAcc;

        /**
         * Creates a plain object from a TrdAcc message. Also converts values to other types if specified.
         * @param message TrdAcc
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.TrdAcc, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrdAcc to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for TrdAcc
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Funds. */
    interface IFunds {

        /** Funds power */
        power: number;

        /** Funds totalAssets */
        totalAssets: number;

        /** Funds cash */
        cash: number;

        /** Funds marketVal */
        marketVal: number;

        /** Funds frozenCash */
        frozenCash: number;

        /** Funds debtCash */
        debtCash: number;

        /** Funds avlWithdrawalCash */
        avlWithdrawalCash: number;

        /** Funds currency */
        currency?: (number|null);

        /** Funds availableFunds */
        availableFunds?: (number|null);

        /** Funds unrealizedPL */
        unrealizedPL?: (number|null);

        /** Funds realizedPL */
        realizedPL?: (number|null);

        /** Funds riskLevel */
        riskLevel?: (number|null);

        /** Funds initialMargin */
        initialMargin?: (number|null);

        /** Funds maintenanceMargin */
        maintenanceMargin?: (number|null);

        /** Funds cashInfoList */
        cashInfoList?: (Trd_Common.IAccCashInfo[]|null);

        /** Funds maxPowerShort */
        maxPowerShort?: (number|null);

        /** Funds netCashPower */
        netCashPower?: (number|null);

        /** Funds longMv */
        longMv?: (number|null);

        /** Funds shortMv */
        shortMv?: (number|null);

        /** Funds pendingAsset */
        pendingAsset?: (number|null);

        /** Funds maxWithdrawal */
        maxWithdrawal?: (number|null);

        /** Funds riskStatus */
        riskStatus?: (number|null);

        /** Funds marginCallMargin */
        marginCallMargin?: (number|null);

        /** Funds isPdt */
        isPdt?: (boolean|null);

        /** Funds pdtSeq */
        pdtSeq?: (string|null);

        /** Funds beginningDTBP */
        beginningDTBP?: (number|null);

        /** Funds remainingDTBP */
        remainingDTBP?: (number|null);

        /** Funds dtCallAmount */
        dtCallAmount?: (number|null);

        /** Funds dtStatus */
        dtStatus?: (number|null);

        /** Funds securitiesAssets */
        securitiesAssets?: (number|null);

        /** Funds fundAssets */
        fundAssets?: (number|null);

        /** Funds bondAssets */
        bondAssets?: (number|null);
    }

    /** Represents a Funds. */
    class Funds implements IFunds {

        /**
         * Constructs a new Funds.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.IFunds);

        /** Funds power. */
        public power: number;

        /** Funds totalAssets. */
        public totalAssets: number;

        /** Funds cash. */
        public cash: number;

        /** Funds marketVal. */
        public marketVal: number;

        /** Funds frozenCash. */
        public frozenCash: number;

        /** Funds debtCash. */
        public debtCash: number;

        /** Funds avlWithdrawalCash. */
        public avlWithdrawalCash: number;

        /** Funds currency. */
        public currency: number;

        /** Funds availableFunds. */
        public availableFunds: number;

        /** Funds unrealizedPL. */
        public unrealizedPL: number;

        /** Funds realizedPL. */
        public realizedPL: number;

        /** Funds riskLevel. */
        public riskLevel: number;

        /** Funds initialMargin. */
        public initialMargin: number;

        /** Funds maintenanceMargin. */
        public maintenanceMargin: number;

        /** Funds cashInfoList. */
        public cashInfoList: Trd_Common.IAccCashInfo[];

        /** Funds maxPowerShort. */
        public maxPowerShort: number;

        /** Funds netCashPower. */
        public netCashPower: number;

        /** Funds longMv. */
        public longMv: number;

        /** Funds shortMv. */
        public shortMv: number;

        /** Funds pendingAsset. */
        public pendingAsset: number;

        /** Funds maxWithdrawal. */
        public maxWithdrawal: number;

        /** Funds riskStatus. */
        public riskStatus: number;

        /** Funds marginCallMargin. */
        public marginCallMargin: number;

        /** Funds isPdt. */
        public isPdt: boolean;

        /** Funds pdtSeq. */
        public pdtSeq: string;

        /** Funds beginningDTBP. */
        public beginningDTBP: number;

        /** Funds remainingDTBP. */
        public remainingDTBP: number;

        /** Funds dtCallAmount. */
        public dtCallAmount: number;

        /** Funds dtStatus. */
        public dtStatus: number;

        /** Funds securitiesAssets. */
        public securitiesAssets: number;

        /** Funds fundAssets. */
        public fundAssets: number;

        /** Funds bondAssets. */
        public bondAssets: number;

        /**
         * Creates a new Funds instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Funds instance
         */
        public static create(properties?: Trd_Common.IFunds): Trd_Common.Funds;

        /**
         * Encodes the specified Funds message. Does not implicitly {@link Trd_Common.Funds.verify|verify} messages.
         * @param message Funds message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.IFunds, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Funds message, length delimited. Does not implicitly {@link Trd_Common.Funds.verify|verify} messages.
         * @param message Funds message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.IFunds, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Funds message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Funds
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.Funds;

        /**
         * Decodes a Funds message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Funds
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.Funds;

        /**
         * Verifies a Funds message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Funds message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Funds
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.Funds;

        /**
         * Creates a plain object from a Funds message. Also converts values to other types if specified.
         * @param message Funds
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.Funds, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Funds to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Funds
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Position. */
    interface IPosition {

        /** Position positionID */
        positionID: Long;

        /** Position positionSide */
        positionSide: number;

        /** Position code */
        code: string;

        /** Position name */
        name: string;

        /** Position qty */
        qty: number;

        /** Position canSellQty */
        canSellQty: number;

        /** Position price */
        price: number;

        /** Position costPrice */
        costPrice?: (number|null);

        /** Position val */
        val: number;

        /** Position plVal */
        plVal: number;

        /** Position plRatio */
        plRatio?: (number|null);

        /** Position secMarket */
        secMarket?: (number|null);

        /** Position tdPlVal */
        tdPlVal?: (number|null);

        /** Position tdTrdVal */
        tdTrdVal?: (number|null);

        /** Position tdBuyVal */
        tdBuyVal?: (number|null);

        /** Position tdBuyQty */
        tdBuyQty?: (number|null);

        /** Position tdSellVal */
        tdSellVal?: (number|null);

        /** Position tdSellQty */
        tdSellQty?: (number|null);

        /** Position unrealizedPL */
        unrealizedPL?: (number|null);

        /** Position realizedPL */
        realizedPL?: (number|null);

        /** Position currency */
        currency?: (number|null);

        /** Position trdMarket */
        trdMarket?: (number|null);
    }

    /** Represents a Position. */
    class Position implements IPosition {

        /**
         * Constructs a new Position.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.IPosition);

        /** Position positionID. */
        public positionID: Long;

        /** Position positionSide. */
        public positionSide: number;

        /** Position code. */
        public code: string;

        /** Position name. */
        public name: string;

        /** Position qty. */
        public qty: number;

        /** Position canSellQty. */
        public canSellQty: number;

        /** Position price. */
        public price: number;

        /** Position costPrice. */
        public costPrice: number;

        /** Position val. */
        public val: number;

        /** Position plVal. */
        public plVal: number;

        /** Position plRatio. */
        public plRatio: number;

        /** Position secMarket. */
        public secMarket: number;

        /** Position tdPlVal. */
        public tdPlVal: number;

        /** Position tdTrdVal. */
        public tdTrdVal: number;

        /** Position tdBuyVal. */
        public tdBuyVal: number;

        /** Position tdBuyQty. */
        public tdBuyQty: number;

        /** Position tdSellVal. */
        public tdSellVal: number;

        /** Position tdSellQty. */
        public tdSellQty: number;

        /** Position unrealizedPL. */
        public unrealizedPL: number;

        /** Position realizedPL. */
        public realizedPL: number;

        /** Position currency. */
        public currency: number;

        /** Position trdMarket. */
        public trdMarket: number;

        /**
         * Creates a new Position instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Position instance
         */
        public static create(properties?: Trd_Common.IPosition): Trd_Common.Position;

        /**
         * Encodes the specified Position message. Does not implicitly {@link Trd_Common.Position.verify|verify} messages.
         * @param message Position message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.IPosition, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Position message, length delimited. Does not implicitly {@link Trd_Common.Position.verify|verify} messages.
         * @param message Position message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.IPosition, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Position message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Position
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.Position;

        /**
         * Decodes a Position message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Position
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.Position;

        /**
         * Verifies a Position message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Position message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Position
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.Position;

        /**
         * Creates a plain object from a Position message. Also converts values to other types if specified.
         * @param message Position
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.Position, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Position to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Position
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an Order. */
    interface IOrder {

        /** Order trdSide */
        trdSide: number;

        /** Order orderType */
        orderType: number;

        /** Order orderStatus */
        orderStatus: number;

        /** Order orderID */
        orderID: Long;

        /** Order orderIDEx */
        orderIDEx: string;

        /** Order code */
        code: string;

        /** Order name */
        name: string;

        /** Order qty */
        qty: number;

        /** Order price */
        price?: (number|null);

        /** Order createTime */
        createTime: string;

        /** Order updateTime */
        updateTime: string;

        /** Order fillQty */
        fillQty?: (number|null);

        /** Order fillAvgPrice */
        fillAvgPrice?: (number|null);

        /** Order lastErrMsg */
        lastErrMsg?: (string|null);

        /** Order secMarket */
        secMarket?: (number|null);

        /** Order createTimestamp */
        createTimestamp?: (number|null);

        /** Order updateTimestamp */
        updateTimestamp?: (number|null);

        /** Order remark */
        remark?: (string|null);

        /** Order timeInForce */
        timeInForce?: (number|null);

        /** Order fillOutsideRTH */
        fillOutsideRTH?: (boolean|null);

        /** Order auxPrice */
        auxPrice?: (number|null);

        /** Order trailType */
        trailType?: (number|null);

        /** Order trailValue */
        trailValue?: (number|null);

        /** Order trailSpread */
        trailSpread?: (number|null);

        /** Order currency */
        currency?: (number|null);

        /** Order trdMarket */
        trdMarket?: (number|null);
    }

    /** Represents an Order. */
    class Order implements IOrder {

        /**
         * Constructs a new Order.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.IOrder);

        /** Order trdSide. */
        public trdSide: number;

        /** Order orderType. */
        public orderType: number;

        /** Order orderStatus. */
        public orderStatus: number;

        /** Order orderID. */
        public orderID: Long;

        /** Order orderIDEx. */
        public orderIDEx: string;

        /** Order code. */
        public code: string;

        /** Order name. */
        public name: string;

        /** Order qty. */
        public qty: number;

        /** Order price. */
        public price: number;

        /** Order createTime. */
        public createTime: string;

        /** Order updateTime. */
        public updateTime: string;

        /** Order fillQty. */
        public fillQty: number;

        /** Order fillAvgPrice. */
        public fillAvgPrice: number;

        /** Order lastErrMsg. */
        public lastErrMsg: string;

        /** Order secMarket. */
        public secMarket: number;

        /** Order createTimestamp. */
        public createTimestamp: number;

        /** Order updateTimestamp. */
        public updateTimestamp: number;

        /** Order remark. */
        public remark: string;

        /** Order timeInForce. */
        public timeInForce: number;

        /** Order fillOutsideRTH. */
        public fillOutsideRTH: boolean;

        /** Order auxPrice. */
        public auxPrice: number;

        /** Order trailType. */
        public trailType: number;

        /** Order trailValue. */
        public trailValue: number;

        /** Order trailSpread. */
        public trailSpread: number;

        /** Order currency. */
        public currency: number;

        /** Order trdMarket. */
        public trdMarket: number;

        /**
         * Creates a new Order instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Order instance
         */
        public static create(properties?: Trd_Common.IOrder): Trd_Common.Order;

        /**
         * Encodes the specified Order message. Does not implicitly {@link Trd_Common.Order.verify|verify} messages.
         * @param message Order message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.IOrder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Order message, length delimited. Does not implicitly {@link Trd_Common.Order.verify|verify} messages.
         * @param message Order message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.IOrder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Order message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Order
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.Order;

        /**
         * Decodes an Order message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Order
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.Order;

        /**
         * Verifies an Order message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Order message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Order
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.Order;

        /**
         * Creates a plain object from an Order message. Also converts values to other types if specified.
         * @param message Order
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.Order, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Order to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Order
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an OrderFeeItem. */
    interface IOrderFeeItem {

        /** OrderFeeItem title */
        title?: (string|null);

        /** OrderFeeItem value */
        value?: (number|null);
    }

    /** Represents an OrderFeeItem. */
    class OrderFeeItem implements IOrderFeeItem {

        /**
         * Constructs a new OrderFeeItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.IOrderFeeItem);

        /** OrderFeeItem title. */
        public title: string;

        /** OrderFeeItem value. */
        public value: number;

        /**
         * Creates a new OrderFeeItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrderFeeItem instance
         */
        public static create(properties?: Trd_Common.IOrderFeeItem): Trd_Common.OrderFeeItem;

        /**
         * Encodes the specified OrderFeeItem message. Does not implicitly {@link Trd_Common.OrderFeeItem.verify|verify} messages.
         * @param message OrderFeeItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.IOrderFeeItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrderFeeItem message, length delimited. Does not implicitly {@link Trd_Common.OrderFeeItem.verify|verify} messages.
         * @param message OrderFeeItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.IOrderFeeItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrderFeeItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrderFeeItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.OrderFeeItem;

        /**
         * Decodes an OrderFeeItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrderFeeItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.OrderFeeItem;

        /**
         * Verifies an OrderFeeItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrderFeeItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrderFeeItem
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.OrderFeeItem;

        /**
         * Creates a plain object from an OrderFeeItem message. Also converts values to other types if specified.
         * @param message OrderFeeItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.OrderFeeItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrderFeeItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for OrderFeeItem
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an OrderFee. */
    interface IOrderFee {

        /** OrderFee orderIDEx */
        orderIDEx: string;

        /** OrderFee feeAmount */
        feeAmount?: (number|null);

        /** OrderFee feeList */
        feeList?: (Trd_Common.IOrderFeeItem[]|null);
    }

    /** Represents an OrderFee. */
    class OrderFee implements IOrderFee {

        /**
         * Constructs a new OrderFee.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.IOrderFee);

        /** OrderFee orderIDEx. */
        public orderIDEx: string;

        /** OrderFee feeAmount. */
        public feeAmount: number;

        /** OrderFee feeList. */
        public feeList: Trd_Common.IOrderFeeItem[];

        /**
         * Creates a new OrderFee instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrderFee instance
         */
        public static create(properties?: Trd_Common.IOrderFee): Trd_Common.OrderFee;

        /**
         * Encodes the specified OrderFee message. Does not implicitly {@link Trd_Common.OrderFee.verify|verify} messages.
         * @param message OrderFee message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.IOrderFee, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrderFee message, length delimited. Does not implicitly {@link Trd_Common.OrderFee.verify|verify} messages.
         * @param message OrderFee message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.IOrderFee, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrderFee message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrderFee
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.OrderFee;

        /**
         * Decodes an OrderFee message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrderFee
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.OrderFee;

        /**
         * Verifies an OrderFee message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrderFee message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrderFee
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.OrderFee;

        /**
         * Creates a plain object from an OrderFee message. Also converts values to other types if specified.
         * @param message OrderFee
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.OrderFee, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrderFee to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for OrderFee
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an OrderFill. */
    interface IOrderFill {

        /** OrderFill trdSide */
        trdSide: number;

        /** OrderFill fillID */
        fillID: Long;

        /** OrderFill fillIDEx */
        fillIDEx: string;

        /** OrderFill orderID */
        orderID?: (Long|null);

        /** OrderFill orderIDEx */
        orderIDEx?: (string|null);

        /** OrderFill code */
        code: string;

        /** OrderFill name */
        name: string;

        /** OrderFill qty */
        qty: number;

        /** OrderFill price */
        price: number;

        /** OrderFill createTime */
        createTime: string;

        /** OrderFill counterBrokerID */
        counterBrokerID?: (number|null);

        /** OrderFill counterBrokerName */
        counterBrokerName?: (string|null);

        /** OrderFill secMarket */
        secMarket?: (number|null);

        /** OrderFill createTimestamp */
        createTimestamp?: (number|null);

        /** OrderFill updateTimestamp */
        updateTimestamp?: (number|null);

        /** OrderFill status */
        status?: (number|null);
    }

    /** Represents an OrderFill. */
    class OrderFill implements IOrderFill {

        /**
         * Constructs a new OrderFill.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.IOrderFill);

        /** OrderFill trdSide. */
        public trdSide: number;

        /** OrderFill fillID. */
        public fillID: Long;

        /** OrderFill fillIDEx. */
        public fillIDEx: string;

        /** OrderFill orderID. */
        public orderID: Long;

        /** OrderFill orderIDEx. */
        public orderIDEx: string;

        /** OrderFill code. */
        public code: string;

        /** OrderFill name. */
        public name: string;

        /** OrderFill qty. */
        public qty: number;

        /** OrderFill price. */
        public price: number;

        /** OrderFill createTime. */
        public createTime: string;

        /** OrderFill counterBrokerID. */
        public counterBrokerID: number;

        /** OrderFill counterBrokerName. */
        public counterBrokerName: string;

        /** OrderFill secMarket. */
        public secMarket: number;

        /** OrderFill createTimestamp. */
        public createTimestamp: number;

        /** OrderFill updateTimestamp. */
        public updateTimestamp: number;

        /** OrderFill status. */
        public status: number;

        /**
         * Creates a new OrderFill instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrderFill instance
         */
        public static create(properties?: Trd_Common.IOrderFill): Trd_Common.OrderFill;

        /**
         * Encodes the specified OrderFill message. Does not implicitly {@link Trd_Common.OrderFill.verify|verify} messages.
         * @param message OrderFill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.IOrderFill, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrderFill message, length delimited. Does not implicitly {@link Trd_Common.OrderFill.verify|verify} messages.
         * @param message OrderFill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.IOrderFill, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrderFill message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrderFill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.OrderFill;

        /**
         * Decodes an OrderFill message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrderFill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.OrderFill;

        /**
         * Verifies an OrderFill message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrderFill message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrderFill
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.OrderFill;

        /**
         * Creates a plain object from an OrderFill message. Also converts values to other types if specified.
         * @param message OrderFill
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.OrderFill, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrderFill to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for OrderFill
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a MaxTrdQtys. */
    interface IMaxTrdQtys {

        /** MaxTrdQtys maxCashBuy */
        maxCashBuy: number;

        /** MaxTrdQtys maxCashAndMarginBuy */
        maxCashAndMarginBuy?: (number|null);

        /** MaxTrdQtys maxPositionSell */
        maxPositionSell: number;

        /** MaxTrdQtys maxSellShort */
        maxSellShort?: (number|null);

        /** MaxTrdQtys maxBuyBack */
        maxBuyBack?: (number|null);

        /** MaxTrdQtys longRequiredIM */
        longRequiredIM?: (number|null);

        /** MaxTrdQtys shortRequiredIM */
        shortRequiredIM?: (number|null);
    }

    /** Represents a MaxTrdQtys. */
    class MaxTrdQtys implements IMaxTrdQtys {

        /**
         * Constructs a new MaxTrdQtys.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.IMaxTrdQtys);

        /** MaxTrdQtys maxCashBuy. */
        public maxCashBuy: number;

        /** MaxTrdQtys maxCashAndMarginBuy. */
        public maxCashAndMarginBuy: number;

        /** MaxTrdQtys maxPositionSell. */
        public maxPositionSell: number;

        /** MaxTrdQtys maxSellShort. */
        public maxSellShort: number;

        /** MaxTrdQtys maxBuyBack. */
        public maxBuyBack: number;

        /** MaxTrdQtys longRequiredIM. */
        public longRequiredIM: number;

        /** MaxTrdQtys shortRequiredIM. */
        public shortRequiredIM: number;

        /**
         * Creates a new MaxTrdQtys instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MaxTrdQtys instance
         */
        public static create(properties?: Trd_Common.IMaxTrdQtys): Trd_Common.MaxTrdQtys;

        /**
         * Encodes the specified MaxTrdQtys message. Does not implicitly {@link Trd_Common.MaxTrdQtys.verify|verify} messages.
         * @param message MaxTrdQtys message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.IMaxTrdQtys, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MaxTrdQtys message, length delimited. Does not implicitly {@link Trd_Common.MaxTrdQtys.verify|verify} messages.
         * @param message MaxTrdQtys message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.IMaxTrdQtys, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MaxTrdQtys message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MaxTrdQtys
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.MaxTrdQtys;

        /**
         * Decodes a MaxTrdQtys message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MaxTrdQtys
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.MaxTrdQtys;

        /**
         * Verifies a MaxTrdQtys message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MaxTrdQtys message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MaxTrdQtys
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.MaxTrdQtys;

        /**
         * Creates a plain object from a MaxTrdQtys message. Also converts values to other types if specified.
         * @param message MaxTrdQtys
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.MaxTrdQtys, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MaxTrdQtys to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for MaxTrdQtys
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a TrdFilterConditions. */
    interface ITrdFilterConditions {

        /** TrdFilterConditions codeList */
        codeList?: (string[]|null);

        /** TrdFilterConditions idList */
        idList?: (Long[]|null);

        /** TrdFilterConditions beginTime */
        beginTime?: (string|null);

        /** TrdFilterConditions endTime */
        endTime?: (string|null);

        /** TrdFilterConditions orderIDExList */
        orderIDExList?: (string[]|null);
    }

    /** Represents a TrdFilterConditions. */
    class TrdFilterConditions implements ITrdFilterConditions {

        /**
         * Constructs a new TrdFilterConditions.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.ITrdFilterConditions);

        /** TrdFilterConditions codeList. */
        public codeList: string[];

        /** TrdFilterConditions idList. */
        public idList: Long[];

        /** TrdFilterConditions beginTime. */
        public beginTime: string;

        /** TrdFilterConditions endTime. */
        public endTime: string;

        /** TrdFilterConditions orderIDExList. */
        public orderIDExList: string[];

        /**
         * Creates a new TrdFilterConditions instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrdFilterConditions instance
         */
        public static create(properties?: Trd_Common.ITrdFilterConditions): Trd_Common.TrdFilterConditions;

        /**
         * Encodes the specified TrdFilterConditions message. Does not implicitly {@link Trd_Common.TrdFilterConditions.verify|verify} messages.
         * @param message TrdFilterConditions message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.ITrdFilterConditions, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrdFilterConditions message, length delimited. Does not implicitly {@link Trd_Common.TrdFilterConditions.verify|verify} messages.
         * @param message TrdFilterConditions message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.ITrdFilterConditions, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrdFilterConditions message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrdFilterConditions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.TrdFilterConditions;

        /**
         * Decodes a TrdFilterConditions message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrdFilterConditions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.TrdFilterConditions;

        /**
         * Verifies a TrdFilterConditions message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrdFilterConditions message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrdFilterConditions
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.TrdFilterConditions;

        /**
         * Creates a plain object from a TrdFilterConditions message. Also converts values to other types if specified.
         * @param message TrdFilterConditions
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.TrdFilterConditions, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrdFilterConditions to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for TrdFilterConditions
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_GetAccList. */
export namespace Trd_GetAccList {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S userID */
        userID: Long;

        /** C2S trdCategory */
        trdCategory?: (number|null);

        /** C2S needGeneralSecAccount */
        needGeneralSecAccount?: (boolean|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetAccList.IC2S);

        /** C2S userID. */
        public userID: Long;

        /** C2S trdCategory. */
        public trdCategory: number;

        /** C2S needGeneralSecAccount. */
        public needGeneralSecAccount: boolean;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetAccList.IC2S): Trd_GetAccList.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetAccList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetAccList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetAccList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetAccList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetAccList.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetAccList.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetAccList.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetAccList.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C accList */
        accList?: (Trd_Common.ITrdAcc[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetAccList.IS2C);

        /** S2C accList. */
        public accList: Trd_Common.ITrdAcc[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetAccList.IS2C): Trd_GetAccList.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetAccList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetAccList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetAccList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetAccList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetAccList.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetAccList.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetAccList.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetAccList.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetAccList.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetAccList.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetAccList.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetAccList.IRequest): Trd_GetAccList.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetAccList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetAccList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetAccList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetAccList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetAccList.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetAccList.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetAccList.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetAccList.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetAccList.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetAccList.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetAccList.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetAccList.IResponse): Trd_GetAccList.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetAccList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetAccList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetAccList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetAccList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetAccList.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetAccList.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetAccList.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetAccList.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_GetFunds. */
export namespace Trd_GetFunds {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S refreshCache */
        refreshCache?: (boolean|null);

        /** C2S currency */
        currency?: (number|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetFunds.IC2S);

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S refreshCache. */
        public refreshCache: boolean;

        /** C2S currency. */
        public currency: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetFunds.IC2S): Trd_GetFunds.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetFunds.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetFunds.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetFunds.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetFunds.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetFunds.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetFunds.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetFunds.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetFunds.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C funds */
        funds?: (Trd_Common.IFunds|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetFunds.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C funds. */
        public funds?: (Trd_Common.IFunds|null);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetFunds.IS2C): Trd_GetFunds.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetFunds.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetFunds.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetFunds.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetFunds.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetFunds.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetFunds.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetFunds.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetFunds.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetFunds.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetFunds.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetFunds.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetFunds.IRequest): Trd_GetFunds.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetFunds.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetFunds.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetFunds.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetFunds.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetFunds.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetFunds.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetFunds.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetFunds.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetFunds.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetFunds.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetFunds.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetFunds.IResponse): Trd_GetFunds.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetFunds.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetFunds.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetFunds.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetFunds.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetFunds.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetFunds.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetFunds.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetFunds.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_GetHistoryOrderFillList. */
export namespace Trd_GetHistoryOrderFillList {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S filterConditions */
        filterConditions: Trd_Common.ITrdFilterConditions;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetHistoryOrderFillList.IC2S);

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S filterConditions. */
        public filterConditions: Trd_Common.ITrdFilterConditions;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetHistoryOrderFillList.IC2S): Trd_GetHistoryOrderFillList.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetHistoryOrderFillList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetHistoryOrderFillList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetHistoryOrderFillList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetHistoryOrderFillList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetHistoryOrderFillList.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetHistoryOrderFillList.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetHistoryOrderFillList.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetHistoryOrderFillList.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C orderFillList */
        orderFillList?: (Trd_Common.IOrderFill[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetHistoryOrderFillList.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C orderFillList. */
        public orderFillList: Trd_Common.IOrderFill[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetHistoryOrderFillList.IS2C): Trd_GetHistoryOrderFillList.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetHistoryOrderFillList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetHistoryOrderFillList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetHistoryOrderFillList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetHistoryOrderFillList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetHistoryOrderFillList.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetHistoryOrderFillList.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetHistoryOrderFillList.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetHistoryOrderFillList.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetHistoryOrderFillList.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetHistoryOrderFillList.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetHistoryOrderFillList.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetHistoryOrderFillList.IRequest): Trd_GetHistoryOrderFillList.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetHistoryOrderFillList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetHistoryOrderFillList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetHistoryOrderFillList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetHistoryOrderFillList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetHistoryOrderFillList.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetHistoryOrderFillList.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetHistoryOrderFillList.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetHistoryOrderFillList.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetHistoryOrderFillList.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetHistoryOrderFillList.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetHistoryOrderFillList.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetHistoryOrderFillList.IResponse): Trd_GetHistoryOrderFillList.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetHistoryOrderFillList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetHistoryOrderFillList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetHistoryOrderFillList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetHistoryOrderFillList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetHistoryOrderFillList.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetHistoryOrderFillList.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetHistoryOrderFillList.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetHistoryOrderFillList.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_GetHistoryOrderList. */
export namespace Trd_GetHistoryOrderList {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S filterConditions */
        filterConditions: Trd_Common.ITrdFilterConditions;

        /** C2S filterStatusList */
        filterStatusList?: (number[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetHistoryOrderList.IC2S);

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S filterConditions. */
        public filterConditions: Trd_Common.ITrdFilterConditions;

        /** C2S filterStatusList. */
        public filterStatusList: number[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetHistoryOrderList.IC2S): Trd_GetHistoryOrderList.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetHistoryOrderList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetHistoryOrderList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetHistoryOrderList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetHistoryOrderList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetHistoryOrderList.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetHistoryOrderList.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetHistoryOrderList.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetHistoryOrderList.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C orderList */
        orderList?: (Trd_Common.IOrder[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetHistoryOrderList.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C orderList. */
        public orderList: Trd_Common.IOrder[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetHistoryOrderList.IS2C): Trd_GetHistoryOrderList.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetHistoryOrderList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetHistoryOrderList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetHistoryOrderList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetHistoryOrderList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetHistoryOrderList.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetHistoryOrderList.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetHistoryOrderList.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetHistoryOrderList.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetHistoryOrderList.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetHistoryOrderList.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetHistoryOrderList.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetHistoryOrderList.IRequest): Trd_GetHistoryOrderList.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetHistoryOrderList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetHistoryOrderList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetHistoryOrderList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetHistoryOrderList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetHistoryOrderList.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetHistoryOrderList.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetHistoryOrderList.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetHistoryOrderList.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetHistoryOrderList.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetHistoryOrderList.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetHistoryOrderList.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetHistoryOrderList.IResponse): Trd_GetHistoryOrderList.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetHistoryOrderList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetHistoryOrderList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetHistoryOrderList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetHistoryOrderList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetHistoryOrderList.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetHistoryOrderList.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetHistoryOrderList.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetHistoryOrderList.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_GetMarginRatio. */
export namespace Trd_GetMarginRatio {

    /** Properties of a MarginRatioInfo. */
    interface IMarginRatioInfo {

        /** MarginRatioInfo security */
        security: Qot_Common.ISecurity;

        /** MarginRatioInfo isLongPermit */
        isLongPermit?: (boolean|null);

        /** MarginRatioInfo isShortPermit */
        isShortPermit?: (boolean|null);

        /** MarginRatioInfo shortPoolRemain */
        shortPoolRemain?: (number|null);

        /** MarginRatioInfo shortFeeRate */
        shortFeeRate?: (number|null);

        /** MarginRatioInfo alertLongRatio */
        alertLongRatio?: (number|null);

        /** MarginRatioInfo alertShortRatio */
        alertShortRatio?: (number|null);

        /** MarginRatioInfo imLongRatio */
        imLongRatio?: (number|null);

        /** MarginRatioInfo imShortRatio */
        imShortRatio?: (number|null);

        /** MarginRatioInfo mcmLongRatio */
        mcmLongRatio?: (number|null);

        /** MarginRatioInfo mcmShortRatio */
        mcmShortRatio?: (number|null);

        /** MarginRatioInfo mmLongRatio */
        mmLongRatio?: (number|null);

        /** MarginRatioInfo mmShortRatio */
        mmShortRatio?: (number|null);
    }

    /** Represents a MarginRatioInfo. */
    class MarginRatioInfo implements IMarginRatioInfo {

        /**
         * Constructs a new MarginRatioInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetMarginRatio.IMarginRatioInfo);

        /** MarginRatioInfo security. */
        public security: Qot_Common.ISecurity;

        /** MarginRatioInfo isLongPermit. */
        public isLongPermit: boolean;

        /** MarginRatioInfo isShortPermit. */
        public isShortPermit: boolean;

        /** MarginRatioInfo shortPoolRemain. */
        public shortPoolRemain: number;

        /** MarginRatioInfo shortFeeRate. */
        public shortFeeRate: number;

        /** MarginRatioInfo alertLongRatio. */
        public alertLongRatio: number;

        /** MarginRatioInfo alertShortRatio. */
        public alertShortRatio: number;

        /** MarginRatioInfo imLongRatio. */
        public imLongRatio: number;

        /** MarginRatioInfo imShortRatio. */
        public imShortRatio: number;

        /** MarginRatioInfo mcmLongRatio. */
        public mcmLongRatio: number;

        /** MarginRatioInfo mcmShortRatio. */
        public mcmShortRatio: number;

        /** MarginRatioInfo mmLongRatio. */
        public mmLongRatio: number;

        /** MarginRatioInfo mmShortRatio. */
        public mmShortRatio: number;

        /**
         * Creates a new MarginRatioInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MarginRatioInfo instance
         */
        public static create(properties?: Trd_GetMarginRatio.IMarginRatioInfo): Trd_GetMarginRatio.MarginRatioInfo;

        /**
         * Encodes the specified MarginRatioInfo message. Does not implicitly {@link Trd_GetMarginRatio.MarginRatioInfo.verify|verify} messages.
         * @param message MarginRatioInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetMarginRatio.IMarginRatioInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MarginRatioInfo message, length delimited. Does not implicitly {@link Trd_GetMarginRatio.MarginRatioInfo.verify|verify} messages.
         * @param message MarginRatioInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetMarginRatio.IMarginRatioInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MarginRatioInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MarginRatioInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetMarginRatio.MarginRatioInfo;

        /**
         * Decodes a MarginRatioInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MarginRatioInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetMarginRatio.MarginRatioInfo;

        /**
         * Verifies a MarginRatioInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MarginRatioInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MarginRatioInfo
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetMarginRatio.MarginRatioInfo;

        /**
         * Creates a plain object from a MarginRatioInfo message. Also converts values to other types if specified.
         * @param message MarginRatioInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetMarginRatio.MarginRatioInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MarginRatioInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for MarginRatioInfo
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetMarginRatio.IC2S);

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetMarginRatio.IC2S): Trd_GetMarginRatio.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetMarginRatio.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetMarginRatio.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetMarginRatio.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetMarginRatio.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetMarginRatio.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetMarginRatio.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetMarginRatio.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetMarginRatio.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C marginRatioInfoList */
        marginRatioInfoList?: (Trd_GetMarginRatio.IMarginRatioInfo[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetMarginRatio.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C marginRatioInfoList. */
        public marginRatioInfoList: Trd_GetMarginRatio.IMarginRatioInfo[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetMarginRatio.IS2C): Trd_GetMarginRatio.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetMarginRatio.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetMarginRatio.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetMarginRatio.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetMarginRatio.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetMarginRatio.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetMarginRatio.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetMarginRatio.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetMarginRatio.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetMarginRatio.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetMarginRatio.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetMarginRatio.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetMarginRatio.IRequest): Trd_GetMarginRatio.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetMarginRatio.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetMarginRatio.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetMarginRatio.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetMarginRatio.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetMarginRatio.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetMarginRatio.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetMarginRatio.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetMarginRatio.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetMarginRatio.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetMarginRatio.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetMarginRatio.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetMarginRatio.IResponse): Trd_GetMarginRatio.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetMarginRatio.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetMarginRatio.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetMarginRatio.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetMarginRatio.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetMarginRatio.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetMarginRatio.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetMarginRatio.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetMarginRatio.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_GetMaxTrdQtys. */
export namespace Trd_GetMaxTrdQtys {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S orderType */
        orderType: number;

        /** C2S code */
        code: string;

        /** C2S price */
        price: number;

        /** C2S orderID */
        orderID?: (Long|null);

        /** C2S adjustPrice */
        adjustPrice?: (boolean|null);

        /** C2S adjustSideAndLimit */
        adjustSideAndLimit?: (number|null);

        /** C2S secMarket */
        secMarket?: (number|null);

        /** C2S orderIDEx */
        orderIDEx?: (string|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetMaxTrdQtys.IC2S);

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S orderType. */
        public orderType: number;

        /** C2S code. */
        public code: string;

        /** C2S price. */
        public price: number;

        /** C2S orderID. */
        public orderID: Long;

        /** C2S adjustPrice. */
        public adjustPrice: boolean;

        /** C2S adjustSideAndLimit. */
        public adjustSideAndLimit: number;

        /** C2S secMarket. */
        public secMarket: number;

        /** C2S orderIDEx. */
        public orderIDEx: string;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetMaxTrdQtys.IC2S): Trd_GetMaxTrdQtys.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetMaxTrdQtys.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetMaxTrdQtys.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetMaxTrdQtys.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetMaxTrdQtys.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetMaxTrdQtys.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetMaxTrdQtys.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetMaxTrdQtys.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetMaxTrdQtys.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C maxTrdQtys */
        maxTrdQtys?: (Trd_Common.IMaxTrdQtys|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetMaxTrdQtys.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C maxTrdQtys. */
        public maxTrdQtys?: (Trd_Common.IMaxTrdQtys|null);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetMaxTrdQtys.IS2C): Trd_GetMaxTrdQtys.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetMaxTrdQtys.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetMaxTrdQtys.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetMaxTrdQtys.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetMaxTrdQtys.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetMaxTrdQtys.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetMaxTrdQtys.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetMaxTrdQtys.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetMaxTrdQtys.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetMaxTrdQtys.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetMaxTrdQtys.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetMaxTrdQtys.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetMaxTrdQtys.IRequest): Trd_GetMaxTrdQtys.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetMaxTrdQtys.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetMaxTrdQtys.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetMaxTrdQtys.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetMaxTrdQtys.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetMaxTrdQtys.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetMaxTrdQtys.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetMaxTrdQtys.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetMaxTrdQtys.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetMaxTrdQtys.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetMaxTrdQtys.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetMaxTrdQtys.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetMaxTrdQtys.IResponse): Trd_GetMaxTrdQtys.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetMaxTrdQtys.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetMaxTrdQtys.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetMaxTrdQtys.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetMaxTrdQtys.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetMaxTrdQtys.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetMaxTrdQtys.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetMaxTrdQtys.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetMaxTrdQtys.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_GetOrderFee. */
export namespace Trd_GetOrderFee {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S orderIdExList */
        orderIdExList?: (string[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderFee.IC2S);

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S orderIdExList. */
        public orderIdExList: string[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetOrderFee.IC2S): Trd_GetOrderFee.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetOrderFee.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderFee.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetOrderFee.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderFee.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderFee.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderFee.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderFee.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderFee.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C orderFeeList */
        orderFeeList?: (Trd_Common.IOrderFee[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderFee.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C orderFeeList. */
        public orderFeeList: Trd_Common.IOrderFee[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetOrderFee.IS2C): Trd_GetOrderFee.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetOrderFee.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderFee.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetOrderFee.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderFee.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderFee.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderFee.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderFee.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderFee.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetOrderFee.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderFee.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetOrderFee.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetOrderFee.IRequest): Trd_GetOrderFee.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetOrderFee.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderFee.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetOrderFee.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderFee.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderFee.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderFee.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderFee.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderFee.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetOrderFee.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderFee.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetOrderFee.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetOrderFee.IResponse): Trd_GetOrderFee.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetOrderFee.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderFee.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetOrderFee.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderFee.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderFee.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderFee.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderFee.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderFee.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_GetOrderFillList. */
export namespace Trd_GetOrderFillList {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S filterConditions */
        filterConditions?: (Trd_Common.ITrdFilterConditions|null);

        /** C2S refreshCache */
        refreshCache?: (boolean|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderFillList.IC2S);

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S filterConditions. */
        public filterConditions?: (Trd_Common.ITrdFilterConditions|null);

        /** C2S refreshCache. */
        public refreshCache: boolean;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetOrderFillList.IC2S): Trd_GetOrderFillList.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetOrderFillList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderFillList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetOrderFillList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderFillList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderFillList.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderFillList.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderFillList.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderFillList.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C orderFillList */
        orderFillList?: (Trd_Common.IOrderFill[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderFillList.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C orderFillList. */
        public orderFillList: Trd_Common.IOrderFill[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetOrderFillList.IS2C): Trd_GetOrderFillList.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetOrderFillList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderFillList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetOrderFillList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderFillList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderFillList.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderFillList.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderFillList.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderFillList.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetOrderFillList.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderFillList.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetOrderFillList.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetOrderFillList.IRequest): Trd_GetOrderFillList.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetOrderFillList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderFillList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetOrderFillList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderFillList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderFillList.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderFillList.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderFillList.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderFillList.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetOrderFillList.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderFillList.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetOrderFillList.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetOrderFillList.IResponse): Trd_GetOrderFillList.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetOrderFillList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderFillList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetOrderFillList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderFillList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderFillList.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderFillList.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderFillList.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderFillList.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_GetOrderList. */
export namespace Trd_GetOrderList {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S filterConditions */
        filterConditions?: (Trd_Common.ITrdFilterConditions|null);

        /** C2S filterStatusList */
        filterStatusList?: (number[]|null);

        /** C2S refreshCache */
        refreshCache?: (boolean|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderList.IC2S);

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S filterConditions. */
        public filterConditions?: (Trd_Common.ITrdFilterConditions|null);

        /** C2S filterStatusList. */
        public filterStatusList: number[];

        /** C2S refreshCache. */
        public refreshCache: boolean;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetOrderList.IC2S): Trd_GetOrderList.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetOrderList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetOrderList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderList.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderList.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderList.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderList.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C orderList */
        orderList?: (Trd_Common.IOrder[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderList.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C orderList. */
        public orderList: Trd_Common.IOrder[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetOrderList.IS2C): Trd_GetOrderList.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetOrderList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetOrderList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderList.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderList.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderList.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderList.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetOrderList.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderList.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetOrderList.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetOrderList.IRequest): Trd_GetOrderList.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetOrderList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetOrderList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderList.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderList.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderList.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderList.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetOrderList.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderList.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetOrderList.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetOrderList.IResponse): Trd_GetOrderList.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetOrderList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetOrderList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderList.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderList.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderList.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderList.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_GetPositionList. */
export namespace Trd_GetPositionList {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S filterConditions */
        filterConditions?: (Trd_Common.ITrdFilterConditions|null);

        /** C2S filterPLRatioMin */
        filterPLRatioMin?: (number|null);

        /** C2S filterPLRatioMax */
        filterPLRatioMax?: (number|null);

        /** C2S refreshCache */
        refreshCache?: (boolean|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetPositionList.IC2S);

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S filterConditions. */
        public filterConditions?: (Trd_Common.ITrdFilterConditions|null);

        /** C2S filterPLRatioMin. */
        public filterPLRatioMin: number;

        /** C2S filterPLRatioMax. */
        public filterPLRatioMax: number;

        /** C2S refreshCache. */
        public refreshCache: boolean;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetPositionList.IC2S): Trd_GetPositionList.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetPositionList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetPositionList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetPositionList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetPositionList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetPositionList.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetPositionList.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetPositionList.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetPositionList.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C positionList */
        positionList?: (Trd_Common.IPosition[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetPositionList.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C positionList. */
        public positionList: Trd_Common.IPosition[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetPositionList.IS2C): Trd_GetPositionList.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetPositionList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetPositionList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetPositionList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetPositionList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetPositionList.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetPositionList.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetPositionList.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetPositionList.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetPositionList.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetPositionList.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetPositionList.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetPositionList.IRequest): Trd_GetPositionList.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetPositionList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetPositionList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetPositionList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetPositionList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetPositionList.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetPositionList.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetPositionList.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetPositionList.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetPositionList.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetPositionList.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetPositionList.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetPositionList.IResponse): Trd_GetPositionList.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetPositionList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetPositionList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetPositionList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetPositionList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetPositionList.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetPositionList.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetPositionList.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetPositionList.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_ModifyOrder. */
export namespace Trd_ModifyOrder {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S packetID */
        packetID: Common.IPacketID;

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S orderID */
        orderID: Long;

        /** C2S modifyOrderOp */
        modifyOrderOp: number;

        /** C2S forAll */
        forAll?: (boolean|null);

        /** C2S trdMarket */
        trdMarket?: (number|null);

        /** C2S qty */
        qty?: (number|null);

        /** C2S price */
        price?: (number|null);

        /** C2S adjustPrice */
        adjustPrice?: (boolean|null);

        /** C2S adjustSideAndLimit */
        adjustSideAndLimit?: (number|null);

        /** C2S auxPrice */
        auxPrice?: (number|null);

        /** C2S trailType */
        trailType?: (number|null);

        /** C2S trailValue */
        trailValue?: (number|null);

        /** C2S trailSpread */
        trailSpread?: (number|null);

        /** C2S orderIDEx */
        orderIDEx?: (string|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_ModifyOrder.IC2S);

        /** C2S packetID. */
        public packetID: Common.IPacketID;

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S orderID. */
        public orderID: Long;

        /** C2S modifyOrderOp. */
        public modifyOrderOp: number;

        /** C2S forAll. */
        public forAll: boolean;

        /** C2S trdMarket. */
        public trdMarket: number;

        /** C2S qty. */
        public qty: number;

        /** C2S price. */
        public price: number;

        /** C2S adjustPrice. */
        public adjustPrice: boolean;

        /** C2S adjustSideAndLimit. */
        public adjustSideAndLimit: number;

        /** C2S auxPrice. */
        public auxPrice: number;

        /** C2S trailType. */
        public trailType: number;

        /** C2S trailValue. */
        public trailValue: number;

        /** C2S trailSpread. */
        public trailSpread: number;

        /** C2S orderIDEx. */
        public orderIDEx: string;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_ModifyOrder.IC2S): Trd_ModifyOrder.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_ModifyOrder.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_ModifyOrder.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_ModifyOrder.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_ModifyOrder.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_ModifyOrder.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_ModifyOrder.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_ModifyOrder.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_ModifyOrder.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C orderID */
        orderID: Long;

        /** S2C orderIDEx */
        orderIDEx?: (string|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_ModifyOrder.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C orderID. */
        public orderID: Long;

        /** S2C orderIDEx. */
        public orderIDEx: string;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_ModifyOrder.IS2C): Trd_ModifyOrder.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_ModifyOrder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_ModifyOrder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_ModifyOrder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_ModifyOrder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_ModifyOrder.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_ModifyOrder.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_ModifyOrder.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_ModifyOrder.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_ModifyOrder.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_ModifyOrder.IRequest);

        /** Request c2s. */
        public c2s: Trd_ModifyOrder.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_ModifyOrder.IRequest): Trd_ModifyOrder.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_ModifyOrder.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_ModifyOrder.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_ModifyOrder.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_ModifyOrder.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_ModifyOrder.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_ModifyOrder.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_ModifyOrder.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_ModifyOrder.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_ModifyOrder.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_ModifyOrder.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_ModifyOrder.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_ModifyOrder.IResponse): Trd_ModifyOrder.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_ModifyOrder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_ModifyOrder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_ModifyOrder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_ModifyOrder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_ModifyOrder.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_ModifyOrder.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_ModifyOrder.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_ModifyOrder.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_Notify. */
export namespace Trd_Notify {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C type */
        type: number;
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Notify.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C type. */
        public type: number;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_Notify.IS2C): Trd_Notify.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_Notify.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Notify.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_Notify.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Notify.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Notify.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Notify.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_Notify.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Notify.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_Notify.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Notify.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_Notify.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_Notify.IResponse): Trd_Notify.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_Notify.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Notify.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_Notify.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Notify.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Notify.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Notify.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_Notify.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Notify.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_PlaceOrder. */
export namespace Trd_PlaceOrder {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S packetID */
        packetID: Common.IPacketID;

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S trdSide */
        trdSide: number;

        /** C2S orderType */
        orderType: number;

        /** C2S code */
        code: string;

        /** C2S qty */
        qty: number;

        /** C2S price */
        price?: (number|null);

        /** C2S adjustPrice */
        adjustPrice?: (boolean|null);

        /** C2S adjustSideAndLimit */
        adjustSideAndLimit?: (number|null);

        /** C2S secMarket */
        secMarket?: (number|null);

        /** C2S remark */
        remark?: (string|null);

        /** C2S timeInForce */
        timeInForce?: (number|null);

        /** C2S fillOutsideRTH */
        fillOutsideRTH?: (boolean|null);

        /** C2S auxPrice */
        auxPrice?: (number|null);

        /** C2S trailType */
        trailType?: (number|null);

        /** C2S trailValue */
        trailValue?: (number|null);

        /** C2S trailSpread */
        trailSpread?: (number|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_PlaceOrder.IC2S);

        /** C2S packetID. */
        public packetID: Common.IPacketID;

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S trdSide. */
        public trdSide: number;

        /** C2S orderType. */
        public orderType: number;

        /** C2S code. */
        public code: string;

        /** C2S qty. */
        public qty: number;

        /** C2S price. */
        public price: number;

        /** C2S adjustPrice. */
        public adjustPrice: boolean;

        /** C2S adjustSideAndLimit. */
        public adjustSideAndLimit: number;

        /** C2S secMarket. */
        public secMarket: number;

        /** C2S remark. */
        public remark: string;

        /** C2S timeInForce. */
        public timeInForce: number;

        /** C2S fillOutsideRTH. */
        public fillOutsideRTH: boolean;

        /** C2S auxPrice. */
        public auxPrice: number;

        /** C2S trailType. */
        public trailType: number;

        /** C2S trailValue. */
        public trailValue: number;

        /** C2S trailSpread. */
        public trailSpread: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_PlaceOrder.IC2S): Trd_PlaceOrder.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_PlaceOrder.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_PlaceOrder.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_PlaceOrder.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_PlaceOrder.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_PlaceOrder.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_PlaceOrder.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_PlaceOrder.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_PlaceOrder.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C orderID */
        orderID?: (Long|null);

        /** S2C orderIDEx */
        orderIDEx?: (string|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_PlaceOrder.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C orderID. */
        public orderID: Long;

        /** S2C orderIDEx. */
        public orderIDEx: string;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_PlaceOrder.IS2C): Trd_PlaceOrder.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_PlaceOrder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_PlaceOrder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_PlaceOrder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_PlaceOrder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_PlaceOrder.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_PlaceOrder.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_PlaceOrder.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_PlaceOrder.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_PlaceOrder.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_PlaceOrder.IRequest);

        /** Request c2s. */
        public c2s: Trd_PlaceOrder.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_PlaceOrder.IRequest): Trd_PlaceOrder.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_PlaceOrder.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_PlaceOrder.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_PlaceOrder.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_PlaceOrder.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_PlaceOrder.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_PlaceOrder.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_PlaceOrder.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_PlaceOrder.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_PlaceOrder.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_PlaceOrder.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_PlaceOrder.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_PlaceOrder.IResponse): Trd_PlaceOrder.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_PlaceOrder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_PlaceOrder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_PlaceOrder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_PlaceOrder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_PlaceOrder.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_PlaceOrder.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_PlaceOrder.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_PlaceOrder.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_ReconfirmOrder. */
export namespace Trd_ReconfirmOrder {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S packetID */
        packetID: Common.IPacketID;

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S orderID */
        orderID: Long;

        /** C2S reconfirmReason */
        reconfirmReason: number;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_ReconfirmOrder.IC2S);

        /** C2S packetID. */
        public packetID: Common.IPacketID;

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S orderID. */
        public orderID: Long;

        /** C2S reconfirmReason. */
        public reconfirmReason: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_ReconfirmOrder.IC2S): Trd_ReconfirmOrder.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_ReconfirmOrder.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_ReconfirmOrder.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_ReconfirmOrder.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_ReconfirmOrder.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_ReconfirmOrder.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_ReconfirmOrder.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_ReconfirmOrder.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_ReconfirmOrder.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C orderID */
        orderID: Long;
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_ReconfirmOrder.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C orderID. */
        public orderID: Long;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_ReconfirmOrder.IS2C): Trd_ReconfirmOrder.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_ReconfirmOrder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_ReconfirmOrder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_ReconfirmOrder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_ReconfirmOrder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_ReconfirmOrder.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_ReconfirmOrder.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_ReconfirmOrder.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_ReconfirmOrder.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_ReconfirmOrder.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_ReconfirmOrder.IRequest);

        /** Request c2s. */
        public c2s: Trd_ReconfirmOrder.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_ReconfirmOrder.IRequest): Trd_ReconfirmOrder.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_ReconfirmOrder.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_ReconfirmOrder.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_ReconfirmOrder.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_ReconfirmOrder.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_ReconfirmOrder.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_ReconfirmOrder.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_ReconfirmOrder.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_ReconfirmOrder.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_ReconfirmOrder.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_ReconfirmOrder.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_ReconfirmOrder.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_ReconfirmOrder.IResponse): Trd_ReconfirmOrder.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_ReconfirmOrder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_ReconfirmOrder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_ReconfirmOrder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_ReconfirmOrder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_ReconfirmOrder.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_ReconfirmOrder.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_ReconfirmOrder.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_ReconfirmOrder.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_SubAccPush. */
export namespace Trd_SubAccPush {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S accIDList */
        accIDList?: (Long[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_SubAccPush.IC2S);

        /** C2S accIDList. */
        public accIDList: Long[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_SubAccPush.IC2S): Trd_SubAccPush.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_SubAccPush.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_SubAccPush.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_SubAccPush.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_SubAccPush.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_SubAccPush.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_SubAccPush.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_SubAccPush.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_SubAccPush.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_SubAccPush.IS2C);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_SubAccPush.IS2C): Trd_SubAccPush.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_SubAccPush.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_SubAccPush.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_SubAccPush.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_SubAccPush.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_SubAccPush.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_SubAccPush.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_SubAccPush.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_SubAccPush.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_SubAccPush.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_SubAccPush.IRequest);

        /** Request c2s. */
        public c2s: Trd_SubAccPush.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_SubAccPush.IRequest): Trd_SubAccPush.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_SubAccPush.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_SubAccPush.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_SubAccPush.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_SubAccPush.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_SubAccPush.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_SubAccPush.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_SubAccPush.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_SubAccPush.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_SubAccPush.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_SubAccPush.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_SubAccPush.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_SubAccPush.IResponse): Trd_SubAccPush.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_SubAccPush.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_SubAccPush.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_SubAccPush.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_SubAccPush.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_SubAccPush.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_SubAccPush.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_SubAccPush.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_SubAccPush.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_UnlockTrade. */
export namespace Trd_UnlockTrade {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S unlock */
        unlock: boolean;

        /** C2S pwdMD5 */
        pwdMD5?: (string|null);

        /** C2S securityFirm */
        securityFirm?: (number|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_UnlockTrade.IC2S);

        /** C2S unlock. */
        public unlock: boolean;

        /** C2S pwdMD5. */
        public pwdMD5: string;

        /** C2S securityFirm. */
        public securityFirm: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_UnlockTrade.IC2S): Trd_UnlockTrade.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_UnlockTrade.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_UnlockTrade.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_UnlockTrade.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_UnlockTrade.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_UnlockTrade.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_UnlockTrade.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_UnlockTrade.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_UnlockTrade.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_UnlockTrade.IS2C);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_UnlockTrade.IS2C): Trd_UnlockTrade.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_UnlockTrade.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_UnlockTrade.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_UnlockTrade.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_UnlockTrade.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_UnlockTrade.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_UnlockTrade.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_UnlockTrade.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_UnlockTrade.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_UnlockTrade.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_UnlockTrade.IRequest);

        /** Request c2s. */
        public c2s: Trd_UnlockTrade.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_UnlockTrade.IRequest): Trd_UnlockTrade.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_UnlockTrade.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_UnlockTrade.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_UnlockTrade.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_UnlockTrade.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_UnlockTrade.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_UnlockTrade.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_UnlockTrade.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_UnlockTrade.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_UnlockTrade.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_UnlockTrade.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_UnlockTrade.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_UnlockTrade.IResponse): Trd_UnlockTrade.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_UnlockTrade.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_UnlockTrade.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_UnlockTrade.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_UnlockTrade.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_UnlockTrade.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_UnlockTrade.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_UnlockTrade.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_UnlockTrade.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_UpdateOrder. */
export namespace Trd_UpdateOrder {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C order */
        order: Trd_Common.IOrder;
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_UpdateOrder.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C order. */
        public order: Trd_Common.IOrder;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_UpdateOrder.IS2C): Trd_UpdateOrder.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_UpdateOrder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_UpdateOrder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_UpdateOrder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_UpdateOrder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_UpdateOrder.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_UpdateOrder.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_UpdateOrder.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_UpdateOrder.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_UpdateOrder.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_UpdateOrder.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_UpdateOrder.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_UpdateOrder.IResponse): Trd_UpdateOrder.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_UpdateOrder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_UpdateOrder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_UpdateOrder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_UpdateOrder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_UpdateOrder.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_UpdateOrder.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_UpdateOrder.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_UpdateOrder.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Trd_UpdateOrderFill. */
export namespace Trd_UpdateOrderFill {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C orderFill */
        orderFill: Trd_Common.IOrderFill;
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_UpdateOrderFill.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C orderFill. */
        public orderFill: Trd_Common.IOrderFill;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_UpdateOrderFill.IS2C): Trd_UpdateOrderFill.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_UpdateOrderFill.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_UpdateOrderFill.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_UpdateOrderFill.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_UpdateOrderFill.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_UpdateOrderFill.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_UpdateOrderFill.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_UpdateOrderFill.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_UpdateOrderFill.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_UpdateOrderFill.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_UpdateOrderFill.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_UpdateOrderFill.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_UpdateOrderFill.IResponse): Trd_UpdateOrderFill.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_UpdateOrderFill.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_UpdateOrderFill.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_UpdateOrderFill.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_UpdateOrderFill.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_UpdateOrderFill.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_UpdateOrderFill.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_UpdateOrderFill.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_UpdateOrderFill.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace UsedQuota. */
export namespace UsedQuota {

    /** Properties of a C2S. */
    interface IC2S {
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: UsedQuota.IC2S);

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: UsedQuota.IC2S): UsedQuota.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link UsedQuota.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: UsedQuota.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link UsedQuota.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: UsedQuota.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): UsedQuota.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): UsedQuota.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): UsedQuota.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: UsedQuota.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C usedSubQuota */
        usedSubQuota?: (number|null);

        /** S2C usedKlineQuota */
        usedKlineQuota?: (number|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: UsedQuota.IS2C);

        /** S2C usedSubQuota. */
        public usedSubQuota: number;

        /** S2C usedKlineQuota. */
        public usedKlineQuota: number;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: UsedQuota.IS2C): UsedQuota.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link UsedQuota.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: UsedQuota.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link UsedQuota.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: UsedQuota.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): UsedQuota.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): UsedQuota.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): UsedQuota.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: UsedQuota.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: UsedQuota.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: UsedQuota.IRequest);

        /** Request c2s. */
        public c2s: UsedQuota.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: UsedQuota.IRequest): UsedQuota.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link UsedQuota.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: UsedQuota.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link UsedQuota.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: UsedQuota.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): UsedQuota.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): UsedQuota.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): UsedQuota.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: UsedQuota.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (UsedQuota.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: UsedQuota.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (UsedQuota.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: UsedQuota.IResponse): UsedQuota.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link UsedQuota.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: UsedQuota.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link UsedQuota.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: UsedQuota.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): UsedQuota.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): UsedQuota.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): UsedQuota.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: UsedQuota.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace Verification. */
export namespace Verification {

    /** VerificationType enum. */
    enum VerificationType {
        VerificationType_Unknow = 0,
        VerificationType_Picture = 1,
        VerificationType_Phone = 2
    }

    /** VerificationOp enum. */
    enum VerificationOp {
        VerificationOp_Unknow = 0,
        VerificationOp_Request = 1,
        VerificationOp_InputAndLogin = 2
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S type */
        type: number;

        /** C2S op */
        op: number;

        /** C2S code */
        code?: (string|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Verification.IC2S);

        /** C2S type. */
        public type: number;

        /** C2S op. */
        public op: number;

        /** C2S code. */
        public code: string;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Verification.IC2S): Verification.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Verification.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Verification.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Verification.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Verification.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Verification.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Verification.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Verification.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Verification.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for C2S
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a S2C. */
    interface IS2C {
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Verification.IS2C);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Verification.IS2C): Verification.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Verification.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Verification.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Verification.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Verification.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Verification.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Verification.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Verification.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Verification.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for S2C
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Verification.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Verification.IRequest);

        /** Request c2s. */
        public c2s: Verification.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Verification.IRequest): Verification.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Verification.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Verification.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Verification.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Verification.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Verification.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Verification.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Verification.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Verification.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Request
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Verification.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Verification.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Verification.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Verification.IResponse): Verification.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Verification.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Verification.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Verification.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Verification.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Verification.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Verification.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Verification.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Verification.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for Response
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}
